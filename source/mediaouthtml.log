<%
/*----------------------------------------------------*/
/*                  Page Config                       */
reger.pageFramework.PageProps pageProps = new reger.pageFramework.PageProps();
pageProps.siteSection=pageProps.PUBLICSITE;
pageProps.isPasswordProtected = false;
pageProps.pathToAppRoot="";
/*----------------------------------------------------*/
%>

<%@ include file="globalheader.jsp" %>
<%@ page import="java.io.*,
                 reger.core.db.Db,
                 reger.Media.MediaType,
                 reger.Media.MediaTypeFactory,
                 reger.Help" %>
<%@ page import="java.util.Calendar"%>
<%@ page import="org.apache.commons.io.FilenameUtils"%>

<%
/*----------------------------------------------------*/
/*                  Main Body                         */
        StringBuffer mb = new StringBuffer();
/*----------------------------------------------------*/

//While I'm not passing the stringbuffer to the template engine, I can use it anyways and just print it at the end
//The challenge here is to output the correct html for the media type.
//For example, images need <img> tags, Quicktime files need <embed> tags, etc.
//My approach is going to be to first get the file extension and then use an if/then to determine which html to output.

int imageid=-1;
String imagename="";
String description="";
int eventid = 0;
String entrytitle = "";
Calendar eventdate = null;
Calendar eventdategmt = null;
//Set to false to be safe
boolean showimage=false;


//Make sure the image exists in the database and make sure the user has access to it
if (request.getParameter("imageid")!=null && reger.core.Util.isinteger(request.getParameter("imageid"))) {
    //Set the imageid
    imageid=Integer.parseInt(request.getParameter("imageid"));

    //Get the logid and name of the image
    //-----------------------------------
    //-----------------------------------
    String[][] rstImageData= Db.RunSQL("SELECT image, logid, image.description, image.eventid, event.title, event.date FROM image LEFT JOIN event ON image.eventid=event.eventid WHERE image.imageid='"+request.getParameter("imageid")+"' AND image.accountid='"+userSession.getAccount().getAccountid()+"'");
    //-----------------------------------
    //-----------------------------------
    if (rstImageData!=null && rstImageData.length>0){
        //Set the logid
        if (reger.core.Util.isinteger(rstImageData[0][1])){
            pageProps.logProps.logid=Integer.parseInt(rstImageData[0][1]);
        }
        //Get the image name
        imagename=rstImageData[0][0];
        //Get the description
        description=rstImageData[0][2];
        //Get the eventid
        if (reger.core.Util.isinteger(rstImageData[0][3])){
            eventid = Integer.parseInt(rstImageData[0][3]);
        }
        //Get the event title
        entrytitle = rstImageData[0][4];
        //Get the event date
        eventdategmt = reger.core.TimeUtils.dbstringtocalendar(rstImageData[0][5]);
        //Check to see if the user can view this logid
        showimage=userSession.getAccountuser().userCanViewLog(pageProps.logProps.logid);
        //Now, check for the entrykey
        if (!showimage){
            if (request.getParameter("entrykey")!=null){
                if (reger.Entry.checkEntryKey(request.getParameter("entrykey"), Integer.parseInt(rstImageData[0][3]))){
                    showimage = true;
                }
            }
        }
        //Lame hack to display profileimages
        if(!showimage){
            if (rstImageData[0][3].equals("0") || rstImageData[0][3].equals("")){
                showimage=true;
            }
        }
    }
}

//Do a page header, etc
mb.append("<html>");
mb.append("<head>");
mb.append("<title>Viewer</title>");
mb.append("\n" + "<script language=\"JavaScript\"><!--" + "\n");
mb.append("function openLocInParentAndCloseWindow(url) {" + "\n");
mb.append("    opener.location = url;" + "\n");
mb.append("    window.close();" + "\n");
mb.append("}" + "\n");
mb.append("//--></script>" + "\n");
mb.append("</head>");
mb.append("<body bgcolor=#000000 link='#0000ff' vlink='#000000' text='#000000' LEFTMARGIN='0' TOPMARGIN='0' MARGINWIDTH='0' MARGINHEIGHT='0'><center>");
mb.append("<table width=100% height=100% border=0><tr height=100% ><td valign=center align=center>");




//Output the html that calls the image.
if (showimage) {
    //Get the image file extension
    MediaType mt = MediaTypeFactory.getHandlerByFileExtension(FilenameUtils.getExtension(imagename));
    if (mt instanceof reger.Media.UnknownFileType){
        //The file is of an unknown type so we're just going to redirect to the file directly so that the user can decide what to do with it.
        response.sendRedirect("mediaout.log?imageid="+request.getParameter("imageid")+"&isProfileImage="+request.getParameter("isProfileImage"));
        return;
    }
    //Display the image, movie, etc
    mb.append(mt.getMediaOutHtml(request, userSession));
    mb.append("<br>");
    //Days Ago
    if (eventdategmt!=null){
        String agoText = reger.core.TimeUtils.agoText(eventdategmt);
        mb.append("<br>");
        mb.append("<font face=arial size=+1 color=#999999><b>"+agoText+"</b></font>");
    }
    //Link to entry
    if(eventid>0){
        String entryurl = reger.Entry.entryFileNameStatic(eventid, entrytitle);
        mb.append("<br>");
        mb.append("<font face=arial size=-1 color=#cccccc><b>From Entry: </b></font><a href=\"javascript:openLocInParentAndCloseWindow('"+entryurl+"');\"><font face=arial size=-1 color=#0000ff><b>" + entrytitle + "</b></font></a>");
    }
    //Display Tag Links
    //String imageTags = reger.Tag.getStringOfAllTagsForImageAsLinks(imageid, "");
    String imageTags = "";
    //-----------------------------------
    //-----------------------------------
    String[][] rstTags= Db.RunSQL("SELECT tag.tagid, tag FROM tagimagelink, tag WHERE tag.tagid=tagimagelink.tagid AND tagimagelink.imageid='"+imageid+"' ORDER BY tagimagelink.tagimagelinkid ASC");
    //-----------------------------------
    //-----------------------------------
    if (rstTags!=null && rstTags.length>0){
        for(int i=0; i<rstTags.length; i++){
            imageTags = imageTags + "<a href=\"javascript:openLocInParentAndCloseWindow('"+pageProps.pathToAppRoot+"tag-detail.log?tagid="+rstTags[i][0]+"&tag="+rstTags[i][1]+"');\"><font color=#0000ff>" + rstTags[i][1] + "</font></a> ";
        }
    }
    if (!imageTags.equals("")) {
        mb.append("<br>");
        mb.append("<font face=arial size=-1 color=#cccccc><b>Tags: </b></font><font face=arial size=-1 color=#0000ff>" + imageTags + "</font>");
    }
    //Display image description
    if (!description.equals("")){
        mb.append("<br>");
        mb.append("<font face=arial size=-1 color=#cccccc><b><blockquote>");
        mb.append(description);
        mb.append("</blockquote></b></font>");
    }
    //Give Ability to Edit Tags Here
    if (userSession.getAccountuser().isInAclgroup("SiteOwner", userSession.getAccount().getAccountid())){
        //Start dHtml Help Scripts
        mb.append("<!-- Begin dHTML Help Scripts -->");
        mb.append("<DIV id=\"TipLayer\" style=\"visibility:hidden;position:absolute;z-index:1000;top:-100\"></DIV>");
        mb.append("<SCRIPT language=\"JavaScript1.2\" src=\""+pageProps.pathToAppRoot+"js/dhtmlhelp/main.js\"type=\"text/javascript\"></SCRIPT>");
        mb.append("<SCRIPT language=\"JavaScript1.2\" src=\""+pageProps.pathToAppRoot+"js/dhtmlhelp/style.js\" type=\"text/javascript\"></SCRIPT>");
        mb.append("<!-- End dHTML Help Scripts -->");
        //End dHtml Help Scripts
        if (pageProps.action.equals("updatekeywords")){
            reger.Tag.addMultipleTagsToImage(request.getParameter("imagetags"), imageid);
        }
        mb.append("");
        mb.append("<form action=mediaouthtml.log method=post>");
        mb.append("<input type=hidden name=action value=updatekeywords>");
        mb.append("<input type=hidden name=imageid value='"+imageid+"'>");
        String keywords = reger.Tag.getStringOfAllTagsForImage(imageid);
        String helpImagetags = Help.tip("Keyword Tags", "Keyword Tags help you organize and retrieve your files.  Type words that relate to the file.  For example: \"car outside oldsmobile\".  Separate keywords with a space.  Create multi-word tags with quotes (example: car \"blue interior\" oldsmobile.)", false, pageProps.pathToAppRoot);
        mb.append("<font face=arial size=-1 color=#cccccc><b>Update Keyword Tags:</b></font><br>");
        mb.append("<input type=text name=imagetags size=35 maxlength=254 value=\""+reger.core.Util.cleanForHtml(keywords)+"\" style=\"font-size: 10px;\">");
        mb.append("<br>");
        mb.append("<input type=submit value='Update Keyword Tags'>");
        mb.append("</form>");
    }

} else {
    //We're not showing the image... do something cool
    mb.append("<font face=arial size=-1 color=#ffffff>Sorry, that file can not be displayed at this time.</font>");
}

//Basic footer
mb.append("</td></tr></table>");


mb.append("</center>");
mb.append("</body>");
mb.append("</html>");

//Output the page
out.print(mb);

%>

<%
/*----------------------------------------------------*/
/*                  Side Column                       */
        StringBuffer sc = new StringBuffer();
/*----------------------------------------------------*/

//sc.append("This is a ");
//sc.append("side column section.");
%>



