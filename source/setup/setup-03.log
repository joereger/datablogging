<%@ page import="reger.core.db.DbConfig,
                 reger.core.db.Db,
                 reger.Account,
                 reger.core.Util,
                 java.util.Calendar,
                 java.util.Hashtable,
                 reger.core.licensing.License"%>
<%@ page import="reger.cache.LogCache"%>
<%@ page import="java.util.HashMap"%>
<%@ page import="reger.cache.LogCache"%>
<%
//Only do this page if we have an invalid database connection.
//Otherwise, anybody's going to be able to reset the database
//configuration whenever they want. Which isn't cool.
if (!DbConfig.haveValidConfig()){
    response.sendRedirect("setup-01.log");
    return;
}
if (!reger.core.dbupgrade.RequiredDatabaseVersion.havecorrectversion){
    response.sendRedirect("setup-02.log");
    return;
}
//-----------------------------------
//-----------------------------------
String[][] rstUser= Db.RunSQL("SELECT accountuser.accountuserid FROM accountuser, accountuseraclgroup WHERE accountuser.accountuserid=accountuseraclgroup.accountuserid AND accountuseraclgroup.aclgroupid='"+reger.acl.AllAclGroups.getAclGroupByName("LOEAdmin").getAclgroupid()+"'");
//-----------------------------------
//-----------------------------------
if (rstUser!=null && rstUser.length>0){
    //Dump the userSession cache and account cache.
    reger.AllUserSessions.flushSessions();
    reger.cache.AccountCache.flush();
    reger.AllPrivateLabelsInSystem.refresh();

    //There is already a user with LOEAdmin permissions in the database.
    response.sendRedirect("setup-04.log");
    return;
}
%>


<%
StringBuffer mb = new StringBuffer();


//Get the name and eventtypeid
int eventtypeid = reger.Vars.DEFAULTLOGEVENTTYPEID;
String logname = reger.Vars.DEFAULTLOGNAME;


//Inherit the show on homepage setting from the event type
String showonhomepage = "1";
if (!reger.AllMegaLogTypesInSystem.getMegaLogTypeByEventtypeid(eventtypeid).getShowonhomepage()){
    showonhomepage = "0";
}

//Page Vars
String errortext="";
String siteurl=reger.core.Util.getParameterClean(request.getParameter("siteurl"));
String homepagetitle=reger.core.Util.getParameterClean(request.getParameter("homepagetitle"));
reger.Accountuser au = new reger.Accountuser(-1);
reger.PrivateLabel pl = reger.AllPrivateLabelsInSystem.getPrivateLabel(1);



//Create an account ------------------------------------------------------------
//------------------------------------------------------------------------------
if (request.getParameter("action")!=null && request.getParameter("action").equals("createaccount")) {


    //Populate au from request
    au.populateFromRequest(request);

    //Make sure we have a password
    if (request.getParameter("password")==null || request.getParameter("password").equals("")){
        errortext = errortext + "You must provide a password.<br>";
    }
    //Servername validation
    errortext = errortext + Account.validateServername(siteurl, pl.getPlid());
    //Accountuser validation
    errortext = errortext + au.validateAccountuser(pl);
    //Homepagetitle is required
    if (request.getParameter("homepagetitle")==null || request.getParameter("homepagetitle").equals("")){
        errortext=errortext + "You must provide a site name.<br>";
    }

	//If there is any sort of error
	if (errortext.equals("")){
        //isnewpendingadminapproval - Need to see if the pl requires approval of accounts by an admin
        int isactiveaccount = 1;
        int isnewpendingadminapproval = 0;
        //Expiration date
        Calendar xDaysFromNow = reger.core.TimeUtils.xDaysAgoEnd(reger.core.TimeUtils.nowInGmtCalendar(), (-1*reger.Vars.TRIALACCOUNTDAYS));
        //License props
        HashMap licenseProps = new HashMap();
        licenseProps.put(License.PROPSTRINGLICENSETYPE, String.valueOf(License.LICENSETYPEACCOUNTSUBSCRIPTION));
        licenseProps.put(License.PROPSTRINGEXPDATEGMT, String.valueOf(reger.core.TimeUtils.dateformatfordb(xDaysFromNow)));
        //Create the license
        License accountLicense = new License(null, licenseProps);
        String encryptedLicense = accountLicense.getEncryptedLicense();
        //Create this this account
        //-----------------------------------
        //-----------------------------------
        int newaccountid = Db.RunSQLInsert("INSERT INTO account(accounturl                              , createdate                             ,plid                                      , timezoneid                                         , messagesstatus, messagesapproval, homepagetitle                                 , homepagecalendar, jspopup, admintools, pingweblogscom, showhometab, hometabtext, showlogintab, displaycharsinsummary, displaynumberofentries, userelatedlinks, favesiteon, onthisday, emailnewsletter, emailsendhour, isactiveaccount      , isnewpendingadminapproval      , hptemplateid                               , entlisttemplateid                             , sitetemplateid, encryptedlicense) " +
                                                        "VALUES('"+ reger.core.Util.cleanForSQL(siteurl) + "', '"+reger.core.TimeUtils.nowInGmtString()+"'     , '"+ pl.getPlid() +"','"+reger.core.Util.cleanForSQL(au.getUsertimezoneid())+"','1'            , '1'             , '"+ reger.core.Util.cleanForSQL(homepagetitle) +"' , '1'             ,'1'     , '0'       , '1'           , '1'        , ''         , '1'         , '0'                  , '15'                  , '1'            , '0'       , '1'      , '1'            , '3'       , '"+isactiveaccount+"', '"+isnewpendingadminapproval+"', '"+pl.getHptemplateid()+"', '"+pl.getEntlisttemplateid()+"', '"+pl.getPublicsitetemplateid()+"', '"+reger.core.Util.cleanForSQL(encryptedLicense)+"')");
        //-----------------------------------
        //-----------------------------------

        //Account
        Account acct = new Account(newaccountid);
        acct.doBilling();

        //Set the new accountid
        au.setAccountid(newaccountid);
        //Auto-validate
        au.setIsactivatedbyemail(true);
        //Save the accountuser
        au.newAccountuser(pl);
        //Grant the accountuser ownership of the account
        au.addUserToAclGroup("SiteOwner", newaccountid);
        au.addUserToAclGroup("LOEAdmin", newaccountid);
        au.addUserToAclGroup("PLAdmin", newaccountid);



        //Insert the new log
        //-----------------------------------
        //-----------------------------------
        int newlogid = Db.RunSQLInsert("INSERT INTO megalog(accountid, name, eventtypeid, logaccess, showonhomepage, nestednavorder) VALUES('"+ newaccountid +"', '"+reger.core.Util.cleanForSQL(logname)+"', '"+ eventtypeid +"', '"+reger.Vars.LOGACCESSPUBLIC+"', '"+showonhomepage+"', '1')");
        //-----------------------------------
        //-----------------------------------

        //Important to refresh the LogCache object after megalog changes
        LogCache.flushByLogid(newlogid);

        //Calculate the base url of this account
        String baseUrlOfAccount = siteurl.toLowerCase() + "." + pl.getPlbasedomain();
        if (!pl.getUsedynamicdns()){
            baseUrlOfAccount =  pl.getPlbasedomain() + "/~" + siteurl.toLowerCase();
        }

        //Send the welcome email
        if (au.getEmail()!=null && !au.getEmail().equals("")) {
            reger.emailtext.BasicEmails.newAccountWelcome(au, newaccountid, pl, request.getParameter("password"));
        }

        //Dump the userSession cache and account cache.
        reger.AllUserSessions.flushSessions();
        reger.cache.AccountCache.flush();
        reger.AllPrivateLabelsInSystem.refresh();

        //Redirect to log the user in
        //response.sendRedirect(baseUrlOfAccount +"/login.log?action=login&username="+java.net.URLEncoder.encode(au.getUsername(), "UTF-8")+"&password="+java.net.URLEncoder.encode(request.getParameter("password"), "UTF-8")+"&msg=signupcomplete");
        //return;
        response.sendRedirect("setup-04.log");
        return;

    }

}

%>
<%@ include file="setup-header.jsp" %>
<%

mb.append("<font face=arial size=+3 color=#cccccc>System Administrator Account</font>");
mb.append("<br><br>");


//Display any errors
if (!errortext.equals("")) {
    mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEERROR, "../", errortext));
}




//Sign Up
mb.append("<!-- begin  permissions table -->");
mb.append("<table cellpadding=5 align=center width=75% cellspacing=1 border=0>");


mb.append("<form action=setup-03.log method=post>");
mb.append("<input type=hidden name=action value=createaccount>");
mb.append("<input type=hidden name=eventtypeid value="+request.getParameter("eventtypeid")+">");
mb.append("<input type=hidden name=logname value=\""+reger.core.Util.cleanForHtml(request.getParameter("logname"))+"\">");

mb.append("<tr>");
mb.append("<td valign=top nowrap align=left bgcolor=#e6e6e6 colspan=2>");
mb.append("<font face=arial size=-1 color=#000000><b>Site Properties</b></font><br>");
mb.append("</td>");
mb.append("</tr>");

mb.append("</tr>");
mb.append("<td bgcolor=#ffffff valign=top width=50% align=right><font face=arial size=-1>");
mb.append("<b>Choose Your Own Web Address!</b>");
mb.append("</font>");
mb.append("<br>");
mb.append("<font face=arial size=-2 color=#000000>");
mb.append("This is the URL (web location) where your logs are published.  Once your account is created you can decide to keep these logs private, share them with specific people, or share them with the world!");
mb.append("</font>");
mb.append("</td>");
mb.append("<td bgcolor=#e6e6e6 valign=top nowrap align=left><font face=arial size=-1>");
if (pl.getUsedynamicdns()){
    mb.append("<b>"+request.getScheme() + ":// <input type='text' name='siteurl' value='" + reger.core.Util.cleanForHtml(siteurl) + "' size='10' maxlength='49'> ." + pl.getPlbasedomain() + "/ </b>");
} else {
    mb.append("<b>"+pl.getPlBaseUrl()+"/~ <input type='text' name='siteurl' value='" + reger.core.Util.cleanForHtml(siteurl) + "' size='10' maxlength='49'> /</b>");
}
mb.append("</font>");
mb.append("<br>");
mb.append("<font face=arial size=-2 color=#000000><b>");
mb.append("Valid characters: letters, numbers and dash -.<br>Can't start with a dash.");
mb.append("</b></font>");
mb.append("</td>");
mb.append("</tr>");

mb.append("<tr>");
mb.append("<td bgcolor=#ffffff valign=center align=right>");
mb.append("<font face=arial size=-1 color=#000000><b>Site Name</b></font><br>");
mb.append("<font face=arial size=-2 color=#000000>");
mb.append("Give your site a name.  You can easily change it later.  Example: Joe's Cool Site.");
mb.append("</font>");
mb.append("</td>");
mb.append("<td bgcolor=#e6e6e6 valign=top nowrap align=left>");
mb.append("<input type='text' name='homepagetitle' value='" + reger.core.Util.cleanForHtml(homepagetitle) + "' size='20' maxlength='49'>");
mb.append("</td>");
mb.append("</tr>");






//User props
mb.append("<tr>");
mb.append("<td valign=top nowrap align=left bgcolor=#e6e6e6 colspan=2>");
mb.append("<font face=arial size=-1 color=#000000><b>User Properties</b></font><br>");
mb.append("</td>");
mb.append("</tr>");
mb.append("<tr>");
mb.append("<td valign=top nowrap align=left bgcolor=#ffffff colspan=2>");
//Output the accountuser fields
mb.append(au.accountSettingsHtmlForm(pl));
mb.append("</td>");

mb.append("</tr>");


//Terms of use
mb.append("<tr>");
mb.append("<td valign=top nowrap align=left bgcolor=#e6e6e6 colspan=2>");
mb.append("<font face=arial size=-1 color=#000000><b>"+pl.getTermsofuselinktext()+"</b></font><br>");
mb.append("</td>");
mb.append("</tr>");
mb.append("<tr>");
mb.append("<td valign=top nowrap align=center bgcolor=#ffffff colspan=2>");
String termsofservice = "";
//-----------------------------------
//-----------------------------------
String[][] rstTos= Db.RunSQL("SELECT termsofservice FROM pl WHERE plid='"+pl.getPlid()+"'");
//-----------------------------------
//-----------------------------------
if (rstTos!=null && rstTos.length>0){
    termsofservice = rstTos[0][0];
}
mb.append("<textarea cols='35' rows='6' name='termsofservice' style=\"font-size: 12px;font-face: arial; width:100%; background: #ffffff; color: #000000;\" disabled=\"true\">"+Util.cleanForHtml(termsofservice)+"</textarea>");
mb.append("</td>");
mb.append("</tr>");

//Submit
mb.append("<tr>");
mb.append("<td bgcolor='#ffffff' align=center valign=top colspan=2>");
mb.append("<input type='submit' value='I Agree to the Terms of Service'>");
mb.append("</td>");
mb.append("</tr>");
mb.append("</form>");
mb.append("</table>");







mb.append("<br><br><br><br><br>");

out.print(mb.toString());

%>

<%@ include file="setup-footer.jsp" %>