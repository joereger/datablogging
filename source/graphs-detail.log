<%@ page import="reger.core.db.Db,
                 reger.mega.FieldType,
                 reger.mega.MegaChartHtmlRenderer"%>
<%@ page import="reger.mega.MegaChartFactory" %>
<%@ page import="java.util.Vector" %>
<%@ page import="reger.cache.LogCache" %>
<%@ page import="reger.Log" %>
<%@ page import="java.util.ArrayList" %>
<%@ page import="java.util.Iterator" %>
<%@ page import="reger.MegaLogType" %>
<%@ page import="reger.AllMegaLogTypesInSystem" %>
<%
/*----------------------------------------------------*/
/*                  Page Config                       */
reger.pageFramework.PageProps pageProps = new reger.pageFramework.PageProps();
pageProps.siteSection=pageProps.PUBLICSITE;
pageProps.isPasswordProtected = false;
pageProps.isLogidRequired = false;
pageProps.trafficType=reger.Vars.TRAFFICTYPEPUBLICMISC;
pageProps.pathToAppRoot="";
/*----------------------------------------------------*/
%>
<%@ include file="globalheader.jsp" %>


<%
/*----------------------------------------------------*/
/*                  Main Body                         */
        StringBuffer mb = new StringBuffer();
/*----------------------------------------------------*/




//Create a new megachart using the incoming request
reger.mega.MegaChart megaChart = new reger.mega.MegaChart(request, userSession);

logger.debug("graphs-detail.log after instanciation megaChart.getCharttype()="+megaChart.getCharttype());

//Start saving chart
if (request.getParameter("savechart")!=null && request.getParameter("savechart").equals("1")){
    if (userSession.getAccountuser().userCanDoAcl("SAVECHARTS", userSession.getAccount().getAccountid())) {
        //It's a masteradmin saving for all users
        //megaChart.setxLogid(0);

        //It's a normal save for a single user
        megaChart.setXeventtypeid(0);
        megaChart.setAccountid(userSession.getAccount().getAccountid());

        //Do the save
        megaChart.save();
    }
}
//End saving chart

//Previews
boolean isPreview = false;
if (request.getParameter("ispreview")!=null && request.getParameter("ispreview").equals("1")){
    //Need to manually set the pageProps.logProps.eventtypeid
    pageProps.logProps.eventtypeid = megaChart.getXeventtypeid();
    isPreview = true;
}

//If not a preview, make sure this user can view the megalogid
if (!isPreview){
    if (megaChart.getMegachartid()>0){
        if (megaChart.getAccountid()!=0 && megaChart.getAccountid()!=userSession.getAccount().getAccountid()){
            response.sendRedirect("graphs.log");
            return;
        }
    }
}


logger.debug("graphs-detail.log before loading data megaChart.getCharttype()="+megaChart.getCharttype());
//Get the chart itself by loading the data and then outputting HighCharts html
if (isPreview){
    megaChart.setMegaChartSeriesAsPreview();
} else {
    megaChart.loadMegaChartSeriesData(userSession);
}
logger.debug("graphs-detail.log before call to create chart megaChart.getCharttype()="+megaChart.getCharttype());
mb.append(MegaChartFactory.getHighChart(megaChart));
mb.append("<br/><br/>");




//        //Output the img tag that calls the chart.
//        //The url line is my only interface to the graph object.
//        //I create the url line delicately.
//        StringBuffer urlP=new StringBuffer();
//
//        //Working
//        //http://bob.reger.com/graph.log?xMegafieldChoice=-7_0_0&yMegafieldChoice=108_2_108&yMegafieldChoice=113_2_113&yMegafieldChoice=101_2_101&yaxiswhattodo=2&chartsize=3&charttype=12&daterange=1&lastxdays=1&lastxweeks=1&lastxmonths=16&lastxyears=1&daterangefromyyyy=2003&daterangefrommm=4&daterangefromdd=8&daterangetoyyyy=2004&daterangetomm=4&daterangetodd=8&daterangesavedsearchid=1&
//        //Broken
//        //http://bob.reger.com/graph.log?xMegafieldChoice=-7_0_16&yMegafieldChoice=113_0_16&yMegafieldChoice=101_0_16&yMegafieldChoice=108_0_16&yaxiswhattodo=2&chartsize=3&charttype=12&daterange=1&lastxdays=1&lastxweeks=1&lastxmonths=16&lastxyears=1&daterangefromyyyy=2003&daterangefrommm=4&daterangefromdd=8&daterangetoyyyy=2004&daterangetomm=4&daterangetodd=8&daterangesavedsearchid=0&
//
//        //If there's no logid, I have to choose one.  This happens
//        //when a user clicks on a system graph.  There is an eventtypeid,
//        //but no logid.  So I'll choose the first logid that is of the type
//        //that the system graph needs. This is kind of ugly.
//        int tmpxLogid = megaChart.getxLogid();
//        if (userSession.getAccount()!=null && userSession.getAccount().getAccountid()>0){
//            Vector tmpLogs = LogCache.allLogsForAccount(userSession.getAccount().getAccountid());
//            if(tmpxLogid<=0 && megaChart.getXeventtypeid()>0){
//                for (int j = 0; j < tmpLogs.size(); j++) {
//                    Log log = (Log) tmpLogs.elementAt(j);
//                    if (log.getEventtypeid()==megaChart.getXeventtypeid()){
//                        tmpxLogid=log.getLogid();
//                    }
//                }
//            }
//        }
//        //Reconstruct the xMegaFieldChoice
//        urlP.append("xMegafieldChoice="+ megaChart.getxMegafieldid()+"_"+tmpxLogid+"_"+megaChart.getXeventtypeid() +"&");
//
//
//        for(int i=0; i<megaChart.getyMegafieldid().length; i++){
//            //If there's no logid, I have to choose one.  This happens
//            //when a user clicks on a system graph.  There is an eventtypeid,
//            //but no logid.  So I'll choose the first logid that is of the type
//            //that the system graph needs. This is kind of ugly.
//            int tmpyLogid = megaChart.getyLogid()[i];
//            if (userSession.getAccount()!=null && userSession.getAccount().getAccountid()>0){
//                Vector tmpLogs = LogCache.allLogsForAccount(userSession.getAccount().getAccountid());
//                if(tmpyLogid<=0 && megaChart.getyEventtypeid()[i]>0){
//                    for (int j = 0; j < tmpLogs.size(); j++) {
//                        Log log = (Log) tmpLogs.elementAt(j);
//                        if (log.getEventtypeid()==megaChart.getyEventtypeid()[i]){
//                            tmpyLogid=log.getLogid();
//                        }
//                    }
//                }
//            }
//            //Reconstruct the yMegaFieldChoice
//            urlP.append("yMegafieldChoice="+ megaChart.getyMegafieldid()[i]+"_"+tmpyLogid+"_"+megaChart.getyEventtypeid()[i] +"&");
//        }
//
//
//
//        urlP.append("yaxiswhattodo="+ megaChart.getYaxiswhattodo() +"&");
//        urlP.append("chartsize="+ megaChart.getChartsize() +"&");
//        urlP.append("charttype="+ megaChart.getCharttype() +"&");
//        urlP.append("daterange="+ megaChart.getDaterange() +"&");
//        urlP.append("lastxdays="+ megaChart.getLastxdays() +"&");
//        urlP.append("lastxweeks="+ megaChart.getLastxweeks() +"&");
//        urlP.append("lastxmonths="+ megaChart.getLastxmonths() +"&");
//        urlP.append("lastxyears="+ megaChart.getLastxyears() +"&");
//        urlP.append("daterangefromyyyy="+ megaChart.getDaterangefromyyyy() +"&");
//        urlP.append("daterangefrommm="+ megaChart.getDaterangefrommm() +"&");
//        urlP.append("daterangefromdd="+ megaChart.getDaterangefromdd() +"&");
//        urlP.append("daterangetoyyyy="+ megaChart.getDaterangetoyyyy() +"&");
//        urlP.append("daterangetomm="+ megaChart.getDaterangetomm() +"&");
//        urlP.append("daterangetodd="+ megaChart.getDaterangetodd() +"&");
//        urlP.append("daterangesavedsearchid="+ megaChart.getDaterangesavedsearchid() +"&");
//        //Append whether it's a preview
//        if (isPreview){
//            urlP.append("ispreview=1&");
//        }


            //The goal here is to display any situation where I'm diverging from what the user has selected on the form.
            //For example, when you choose multiple Y-Axis checkboxes and a pie chart type I'll only use the last y-Axis selected in the list.
            //So I should display a message to that effect.

            //charttype=pie or 3dpie and multiple Y-Axis values are chosen.  I only use last Y-Axis.
            if (megaChart.getyMegafieldid().length==1 && megaChart.getyMegafieldid()[0]==0){
                mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEERROR, pageProps.pathToAppRoot, "No Y-Axis is selected.  Please choose at least one below."));
            }

            //xMegafieldid=Date/Time and anything other than charttype=Line is selected.  I override with Line chart type.
            if (megaChart.getxMegafieldid()==FieldType.XAXISDATETIME && megaChart.getCharttype()!=reger.Vars.CHARTTYPELINE){
                //mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEINFO, pageProps.pathToAppRoot, "Quick note: When you choose Date/Time for the X-Axis you can only choose a Chart Type of Line.  We've automatically adjusted for you."));
            }

            //xMegafieldid=Day of the Week and anything other than charttype=bar, 3dbar, stacked bar, horizontal bar, horizontal3d bar
            if (megaChart.getxMegafieldid()==FieldType.XAXISDAYOFWEEK && !(megaChart.getCharttype()==reger.Vars.CHARTTYPE3DBAR || megaChart.getCharttype()==reger.Vars.CHARTTYPEHORIZONTALBAR || megaChart.getCharttype()==reger.Vars.CHARTTYPEHORIZONTAL3DBAR || megaChart.getCharttype()==reger.Vars.CHARTTYPEBAR  || megaChart.getCharttype()==reger.Vars.CHARTTYPESTACKEDBARCHART  || megaChart.getCharttype()==reger.Vars.CHARTTYPESTACKEDBARCHART3D || megaChart.getCharttype()==reger.Vars.CHARTTYPESTACKEDBARCHARTHORIZONTAL || megaChart.getCharttype()==reger.Vars.CHARTTYPESTACKEDBARCHART3DHORIZONTAL)) {
                mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEINFO, pageProps.pathToAppRoot, "Quick note: When you choose Day of the Week for the X-Axis you can only choose one of the Bar chart types.  We've automatically adjusted for you."));
            }

            //megaChart.getCharttype()=pie or 3dpie and multiple Y-Axis values are chosen.  I only use last Y-Axis.
            if ((megaChart.getCharttype()==reger.Vars.CHARTTYPE3DPIE || megaChart.getCharttype()==reger.Vars.CHARTTYPEPIE) && (megaChart.getyMegafieldid().length>1)){
                mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEINFO, pageProps.pathToAppRoot, "Quick note: When you choose multiple Y-Axis series and a Chart Type of Pie or 3D Pie only the last Y-Axis selected will be charted."));
            }



            //Open the form table
            mb.append("<table cellpadding=0 cellspacing=0 border=0 width=100% bgcolor=#666666><tr><td>");
            mb.append("<table cellpadding=5 cellspacing=1 width=100% border=0>");





            //A dropdown formatting string
            //String dropdownstyle="style=\"font-family: Arial, Helvetica, sans-serif; font-size: 10px; color: #000000; background-color: #ffffff; border: #000000; border-style: solid; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px\"";
            String dropdownstyle = "";

            //Create the chart-customizing form
            mb.append("<tr><td bgcolor=#ffffff>");

                mb.append("<form action=graphs-detail.log method=get>");
                mb.append("<center><input type=submit value='Redraw Graph'></center>");

                if (isPreview) {
                    mb.append("<input type=hidden name=ispreview value='1'>");
                    mb.append("<input type=hidden name=megachartid value=\""+megaChart.getMegachartid()+"\">");
                } else {
                    mb.append("<input type=hidden name=ispreview value='0'>");
                }


                mb.append("<table cellpadding=8 width=100% cellspacing=1 border=0>");



                //Save row
                if (userSession.getAccountuser()!=null && userSession.getAccountuser().userCanDoAcl("SAVECHARTS", userSession.getAccount().getAccountid())) {
                    //Title row
    //                mb.append("<tr>");
    //                mb.append("<td valign=top bgcolor=#e6e6e6 colspan=3>");
    //                mb.append("<font face=arial size=-2>");
    //                mb.append("&nbsp;");
    //                mb.append("</font>");
    //                mb.append("</td>");
    //                mb.append("</tr>");

                    //Save chart?
                    mb.append("<tr>");
                    mb.append("<td valign=top bgcolor=#ffffff colspan=3>");
                    mb.append("<center>");
    //                if (userSession.getAccountuser().userCanDoAcl("MASTERDAMIN", userSession.getAccount().getAccountid())){
    //                    mb.append("<input type=checkbox name=savechartforall value=1>");
    //                    mb.append("<font face=arial size=-1>");
    //                    mb.append("Do for all users of log type.<br>");
    //                }
                    mb.append("<input type=checkbox name=savechart value=1>");
                    mb.append("<font face=arial size=-1>");
                    mb.append("Save this graph and name it:<br>");
                    mb.append("<input type=textbox name=chartname value=\""+reger.core.Util.cleanForHtml(megaChart.getChartname())+"\" size=25 maxlength=100>");
                    mb.append("</font>");
                    mb.append("</center>");
                    mb.append("</td>");
                    mb.append("</tr>");
                }



                //Title row
                mb.append("<tr>");
                mb.append("<td valign=top bgcolor=#e6e6e6>");
                mb.append("<font face=arial size=+1 color=#666666>");
                mb.append("X-Axis");
                mb.append("</font>");
                mb.append("</td>");
                mb.append("<td valign=top bgcolor=#e6e6e6>");
                mb.append("<font face=arial size=+1 color=#666666>");
                mb.append("Y-Axis");
                mb.append("</font>");
                mb.append("</td>");
                mb.append("<td valign=top bgcolor=#e6e6e6>");
                mb.append("<font face=arial size=+1 color=#666666>");
                mb.append("Time Period to Graph");
                mb.append("</font>");
                mb.append("</td>");
                mb.append("</tr>");

                //New row
                mb.append("<tr>");

                mb.append("<td valign=top>");

                Debug.debug(5, "", "MegaChartHtmlRenderer.java: xMegafieldid="+megaChart.getxMegafieldid());

                mb.append("<font face=arial size=-1 class=smallfont>");
                mb.append("<b>");
                mb.append("System Fields");
                mb.append("</b>");
                mb.append("</font>");
                mb.append("</br>");

                mb.append("<font face=arial size=-1>");
                //Derived xAxis types
                mb.append("<input name=xMegafieldChoice type=radio value='"+FieldType.XAXISDATETIME+"_0_0'");
                if (megaChart.getxMegafieldid()==FieldType.XAXISDATETIME){
                    mb.append(" checked");
                }
                mb.append("> Exact Date/Time<br>");
                mb.append("<input name=xMegafieldChoice type=radio value='"+FieldType.XAXISCALENDARDAYS+"_0_0'");
                if (megaChart.getxMegafieldid()==FieldType.XAXISCALENDARDAYS){
                    mb.append(" checked");
                }
                mb.append("> Days Ago<br>");
                mb.append("<input name=xMegafieldChoice type=radio value='"+FieldType.XAXISCALENDARWEEKS+"_0_0'");
                if (megaChart.getxMegafieldid()==FieldType.XAXISCALENDARWEEKS){
                    mb.append(" checked");
                }
                mb.append("> Weeks Ago<br>");
                mb.append("<input name=xMegafieldChoice type=radio value='"+FieldType.XAXISCALENDARMONTHS+"_0_0'");
                if (megaChart.getxMegafieldid()==FieldType.XAXISCALENDARMONTHS){
                    mb.append(" checked");
                }
                mb.append("> Months Ago<br>");
                mb.append("<input name=xMegafieldChoice type=radio value='"+FieldType.XAXISTIMEOFDAY+"_0_0'");
                if (megaChart.getxMegafieldid()==FieldType.XAXISTIMEOFDAY){
                    mb.append(" checked");
                }
                mb.append("> Hour of the Day<br>");
                mb.append("<input name=xMegafieldChoice type=radio value='"+FieldType.XAXISDAYOFWEEK+"_0_0'");
                if (megaChart.getxMegafieldid()==FieldType.XAXISDAYOFWEEK){
                    mb.append(" checked");
                }
                mb.append("> Day of the Week<br>");
                mb.append("<input name=xMegafieldChoice type=radio value='"+FieldType.XAXISDAYOFMONTH+"_0_0'");
                if (megaChart.getxMegafieldid()==FieldType.XAXISDAYOFMONTH){
                    mb.append(" checked");
                }
                mb.append("> Day of the Month<br>");
                mb.append("<input name=xMegafieldChoice type=radio value='"+FieldType.XAXISENTRYORDER+"_0_0'");
                if (megaChart.getxMegafieldid()==FieldType.XAXISENTRYORDER){
                    mb.append(" checked");
                }
                mb.append("> Entry Order<br>");


                //Output xAxis fields
                //It's not an LOE page so I should show the user the logs for this account
                Vector logsForAcct = LogCache.allLogsForAccount(userSession.getAccount().getAccountid());
                for (int j = 0; j < logsForAcct.size(); j++) {
                    Log log = (Log) logsForAcct.elementAt(j);

                    //If the user can view this log
                    if (userSession.getAccountuser().userCanViewLog(log.getLogid())){
                        //Log title and check box

                        mb.append("<font face=arial size=-1 class=smallfont>");
                        mb.append("<b>");
                        mb.append(log.getName());
                        mb.append("</b>");
                        mb.append("</font>");
                        mb.append("</br>");

                        //Now add on the activity-specific search options
                        ArrayList<FieldType> megaFields = log.getFields();
                        boolean foundAtLeastOneField = false;
                        if (megaFields!=null && megaFields.size()>0){
                            for (Iterator it = megaFields.iterator(); it.hasNext(); ) {
                                FieldType field = (FieldType)it.next();
                                foundAtLeastOneField = true;
                                String xMegaFieldChoiceString = field.getMegafieldid()+"_"+log.getLogid()+"_"+log.getEventtypeid();
                                mb.append("<font face=arial size=-1 class=smallfont>");
                                mb.append("<input name=xMegafieldChoice type=radio value='"+xMegaFieldChoiceString+"'");
                                if (megaChart.getxMegafieldid()==field.getMegafieldid()){
                                    mb.append(" checked");
                                }
                                mb.append("> "+field.getFieldname()+"<br>");
                                mb.append("</font>");
                            }
                        }
                        if (!foundAtLeastOneField) {
                            mb.append("<font face=arial size=-2 class=tinyfont>");
                            mb.append("No graphable fields in this log.<br>");
                            mb.append("</font>");
                        }
                    }
                }

                mb.append("</font>");
                mb.append("</td>");

                mb.append("<td valign=top>");
                mb.append("<font face=arial size=-1>");
                mb.append("<input name=yMegafieldChoice type=checkbox value='"+FieldType.YAXISCOUNT+"_0_0'");
                for(int j=0; j<megaChart.getyMegafieldid().length; j++){
                    if (megaChart.getyMegafieldid()[j]==FieldType.YAXISCOUNT){
                        mb.append(" checked");
                    }
                }
                mb.append("> Number of Entries<br>");
                //Output y axis fields... only numerics
                //It's not an LOE page so I should show the user the logs for this account
                Vector logsForAcct2 = LogCache.allLogsForAccount(userSession.getAccount().getAccountid());
                for (int j = 0; j < logsForAcct2.size(); j++) {
                    Log log = (Log) logsForAcct2.elementAt(j);

                    //If the user can view this log
                    if (userSession.getAccountuser().userCanViewLog(log.getLogid())){
                        //Log title and check box

                        mb.append("<font face=arial size=-1 class=smallfont>");
                        mb.append("<b>");
                        mb.append(log.getName());
                        mb.append("</b>");
                        mb.append("</font>");
                        mb.append("</br>");

                        //Now add on the activity-specific search options
                        ArrayList<FieldType> megaFields = log.getFields();
                        boolean foundAtLeastOneField = false;
                        if (megaFields!=null && megaFields.size()>0){
                            for (Iterator it = megaFields.iterator(); it.hasNext(); ) {
                                FieldType field = (FieldType)it.next();
                                if (field.getMegadatatypeid()!=reger.mega.DataTypeString.DATATYPEID){
                                    foundAtLeastOneField=true;
                                    String yMegaFieldChoiceString = field.getMegafieldid()+"_"+log.getLogid()+"_"+log.getEventtypeid();
                                    mb.append("<font face=arial size=-1 class=smallfont>");
                                    mb.append("<input name=yMegafieldChoice type=checkbox value='"+yMegaFieldChoiceString+"'");
                                    for(int l=0; l<megaChart.getyMegafieldid().length; l++){
                                        if (megaChart.getyMegafieldid()[l]==field.getMegafieldid()){
                                            mb.append(" checked");
                                        }
                                    }
                                    mb.append("> "+field.getFieldname());
                                    mb.append("</font><br>");
                                }
                            }
                        }
                        if (!foundAtLeastOneField) {
                            mb.append("<font face=arial size=-2 class=tinyfont>");
                            mb.append("No graphable fields in this log.<br>");
                            mb.append("</font>");
                        }
                    }

                }




                mb.append("</font>");
                mb.append("</td>");


                //Saved search/date range - which entries to graph?
                mb.append("<td valign=top nowrap>");
                mb.append("<font face=arial size=-1>");
                mb.append("<input name=daterange type=radio value="+reger.Vars.DATERANGEALLTIME);
                if (megaChart.getDaterange()==reger.Vars.DATERANGEALLTIME){
                    mb.append(" checked");
                }
                mb.append("> All Time");
                //
                mb.append("<br><input name=daterange type=radio value="+reger.Vars.DATERANGETHISWEEK);
                if (megaChart.getDaterange()==reger.Vars.DATERANGETHISWEEK){
                    mb.append(" checked");
                }
                mb.append("> This Week");
                //
                mb.append("<br><input name=daterange type=radio value="+reger.Vars.DATERANGETHISMONTH);
                if (megaChart.getDaterange()==reger.Vars.DATERANGETHISMONTH){
                    mb.append(" checked");
                }
                mb.append("> This Month");
                //
                mb.append("<br><input name=daterange type=radio value="+reger.Vars.DATERANGETHISYEAR);
                if (megaChart.getDaterange()==reger.Vars.DATERANGETHISYEAR){
                    mb.append(" checked");
                }
                mb.append("> This Year");
                //
                mb.append("<br><input name=daterange type=radio value="+reger.Vars.DATERANGELASTWEEK);
                if (megaChart.getDaterange()==reger.Vars.DATERANGELASTWEEK){
                    mb.append(" checked");
                }
                mb.append("> Last Week");
                //
                mb.append("<br><input name=daterange type=radio value="+reger.Vars.DATERANGELASTMONTH);
                if (megaChart.getDaterange()==reger.Vars.DATERANGELASTMONTH){
                    mb.append(" checked");
                }
                mb.append("> Last Month");
                //
                mb.append("<br><input name=daterange type=radio value="+reger.Vars.DATERANGELASTXDAYS);
                if (megaChart.getDaterange()==reger.Vars.DATERANGELASTXDAYS){
                    mb.append(" checked");
                }
                mb.append("> Last ");
                mb.append("<select class=\"span1\" name=lastxdays "+dropdownstyle+">");
                for(int i=0; i<60; i++){
                   mb.append("<option value="+i);
                   if (megaChart.getLastxdays()==i){
                       mb.append(" selected");
                   }
                   mb.append(">"+i+"</option>");
                }
                mb.append("</select>");
                mb.append(" Day(s)");
                //
                mb.append("<br><input name=daterange type=radio value="+reger.Vars.DATERANGELASTXWEEKS);
                if (megaChart.getDaterange()==reger.Vars.DATERANGELASTXWEEKS){
                    mb.append(" checked");
                }
                mb.append("> Last ");
                mb.append("<select class=\"span1\" name=lastxweeks "+dropdownstyle+">");
                for(int i=0; i<16; i++){
                   mb.append("<option value="+i);
                   if (megaChart.getLastxweeks()==i){
                       mb.append(" selected");
                   }
                   mb.append(">"+i+"</option>");
                }
                mb.append("</select>");
                mb.append(" Week(s)");
                //
                mb.append("<br><input name=daterange type=radio value="+reger.Vars.DATERANGELASTXMONTHS);
                if (megaChart.getDaterange()==reger.Vars.DATERANGELASTXMONTHS){
                    mb.append(" checked");
                }
                mb.append("> Last ");
                mb.append("<select class=\"span1\" name=lastxmonths "+dropdownstyle+">");
                for(int i=0; i<24; i++){
                   mb.append("<option value="+i);
                   if (megaChart.getLastxmonths()==i){
                       mb.append(" selected");
                   }
                   mb.append(">"+i+"</option>");
                }
                mb.append("</select>");
                mb.append(" Month(s)");
                //
                mb.append("<br><input name=daterange type=radio value="+reger.Vars.DATERANGELASTXYEARS);
                if (megaChart.getDaterange()==reger.Vars.DATERANGELASTXYEARS){
                    mb.append(" checked");
                }
                mb.append("> Last ");
                mb.append("<select class=\"span1\" name=lastxyears "+dropdownstyle+">");
                for(int i=0; i<100; i++){
                   mb.append("<option value="+i);
                   if (megaChart.getLastxyears()==i){
                       mb.append(" selected");
                   }
                   mb.append(">"+i+"</option>");
                }
                mb.append("</select>");
                mb.append(" Year(s)");
                //
                mb.append("<br><input name=daterange type=radio value="+reger.Vars.DATERANGESPECIFIED);
                if (megaChart.getDaterange()==reger.Vars.DATERANGESPECIFIED){
                    mb.append(" checked");
                }
                mb.append("> Date Range:");
                mb.append("<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;From:<br>");
                mb.append("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                mb.append("<select class=\"span1\" name=daterangefromyyyy "+dropdownstyle+">");
                for(int i=1970; i<=2020; i++){
                   mb.append("<option value="+i);
                   if (megaChart.getDaterangefromyyyy()==i){
                       mb.append(" selected");
                   }
                   mb.append(">"+i+"</option>");
                }
                mb.append("</select>");
                mb.append(" / ");
                mb.append("<select class=\"span1\" name=daterangefrommm "+dropdownstyle+">");
                for(int i=1; i<=12; i++){
                   mb.append("<option value="+i);
                   if (megaChart.getDaterangefrommm()==i){
                       mb.append(" selected");
                   }
                   mb.append(">"+i+"</option>");
                }
                mb.append("</select>");
                mb.append(" / ");
                mb.append("<select class=\"span1\" name=daterangefromdd "+dropdownstyle+">");
                for(int i=0; i<=31; i++){
                   mb.append("<option value="+i);
                   if (megaChart.getDaterangefromdd()==i){
                       mb.append(" selected");
                   }
                   mb.append(">"+i+"</option>");
                }
                mb.append("</select>");
                mb.append("<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To:<br>");
                mb.append("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                mb.append("<select class=\"span1\" name=daterangetoyyyy "+dropdownstyle+">");
                for(int i=1970; i<=2020; i++){
                   mb.append("<option value="+i);
                   if (megaChart.getDaterangetoyyyy()==i){
                       mb.append(" selected");
                   }
                   mb.append(">"+i+"</option>");
                }
                mb.append("</select>");
                mb.append(" / ");
                mb.append("<select class=\"span1\" name=daterangetomm "+dropdownstyle+">");
                for(int i=1; i<=12; i++){
                   mb.append("<option value="+i);
                   if (megaChart.getDaterangetomm()==i){
                       mb.append(" selected");
                   }
                   mb.append(">"+i+"</option>");
                }
                mb.append("</select>");
                mb.append(" / ");
                mb.append("<select class=\"span1\" name=daterangetodd "+dropdownstyle+">");
                for(int i=1; i<=31; i++){
                   mb.append("<option value="+i);
                   if (megaChart.getDaterangetodd()==i){
                       mb.append(" selected");
                   }
                   mb.append(">"+i+"</option>");
                }
                mb.append("</select>");
                //
                mb.append("<br><input name=daterange type=radio value="+reger.Vars.DATERANGESAVEDSEARCH);
                if (megaChart.getDaterange()==reger.Vars.DATERANGESAVEDSEARCH){
                    mb.append(" checked");
                }
                mb.append("> Use Entries from a Saved Search:");
                mb.append("<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                mb.append("<select name=daterangesavedsearchid "+dropdownstyle+">");
                //-----------------------------------
                //-----------------------------------
                String[][] rstSavedSearch= Db.RunSQL("SELECT savedsearch.savedsearchid, savedsearch.name FROM savedsearch, megalog, savedsearchlog WHERE savedsearch.savedsearchid=savedsearchlog.savedsearchid AND savedsearchlog.logid=megalog.logid AND "+userSession.getAccountuser().LogsUserCanViewQueryend(userSession.getAccount().getAccountid())+" GROUP BY savedsearchid ORDER BY savedsearch.name ASC");
                //-----------------------------------
                //-----------------------------------
                if (rstSavedSearch!=null && rstSavedSearch.length>0){
                    for(int i=0; i<rstSavedSearch.length; i++){
                        mb.append("<option value="+rstSavedSearch[i][0]);
                       if (megaChart.getDaterangesavedsearchid()==Integer.parseInt(rstSavedSearch[i][0])){
                           mb.append(" selected");
                       }
                       mb.append(">"+rstSavedSearch[i][1]+"</option>");
                    }
                } else {
                    mb.append("<option value=''>None.</option>");
                }
                mb.append("</select>");

                mb.append("</font>");
                mb.append("</td>");

                mb.append("</tr>");


                //Title row
                mb.append("<tr>");
                mb.append("<td valign=top bgcolor=#e6e6e6>");
                mb.append("<font face=arial size=+1 color=#666666>");
                mb.append("Chart Type");
                mb.append("</font>");
                mb.append("</td>");
                mb.append("<td valign=top bgcolor=#e6e6e6>");
                mb.append("<font face=arial size=+1 color=#666666>");
                mb.append("Size of Chart");
                mb.append("</font>");
                mb.append("</td>");
                mb.append("<td valign=top bgcolor=#e6e6e6>");
                mb.append("<font face=arial size=+1 color=#666666>");
                mb.append("Handle Multiple Y Values For Same X Value By");
                mb.append("</font>");
                mb.append("</td>");
                mb.append("</tr>");


                //New row
                mb.append("<tr>");


                mb.append("<td valign=top>");
                mb.append("<font face=arial size=-1>");
                mb.append("<input name=charttype type=radio value="+reger.Vars.CHARTTYPELINE);
                if (megaChart.getCharttype()==reger.Vars.CHARTTYPELINE){
                    mb.append(" checked");
                }
                mb.append("> Line");
                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPEBAR);
                if (megaChart.getCharttype()==reger.Vars.CHARTTYPEBAR){
                    mb.append(" checked");
                }
                mb.append("> Bar");
//                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPE3DBAR);
//                if (megaChart.getCharttype()==reger.Vars.CHARTTYPE3DBAR){
//                    mb.append(" checked");
//                }
//                mb.append("> 3D Bar");
                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPESTACKEDBARCHART);
                if (megaChart.getCharttype()==reger.Vars.CHARTTYPESTACKEDBARCHART){
                    mb.append(" checked");
                }
                mb.append("> Stacked Bar");
//                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPESTACKEDBARCHART3D);
//                if (megaChart.getCharttype()==reger.Vars.CHARTTYPESTACKEDBARCHART3D){
//                    mb.append(" checked");
//                }
//                mb.append("> Stacked 3D Bar");
                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPEHORIZONTALBAR);
                if (megaChart.getCharttype()==reger.Vars.CHARTTYPEHORIZONTALBAR){
                    mb.append(" checked");
                }
                mb.append("> Horizontal Bar");
//                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPEHORIZONTAL3DBAR);
//                if (megaChart.getCharttype()==reger.Vars.CHARTTYPEHORIZONTAL3DBAR){
//                    mb.append(" checked");
//                }
//                mb.append("> Horizontal 3D Bar");
                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPESTACKEDBARCHARTHORIZONTAL);
                if (megaChart.getCharttype()==reger.Vars.CHARTTYPESTACKEDBARCHARTHORIZONTAL){
                    mb.append(" checked");
                }
                mb.append("> Stacked Horiz Bar");
//                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPESTACKEDBARCHART3DHORIZONTAL);
//                if (megaChart.getCharttype()==reger.Vars.CHARTTYPESTACKEDBARCHART3DHORIZONTAL){
//                    mb.append(" checked");
//                }
//                mb.append("> Stacked Horiz 3D Bar");
                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPEPIE);
                if (megaChart.getCharttype()==reger.Vars.CHARTTYPEPIE){
                    mb.append(" checked");
                }
                mb.append("> Pie Chart");
//                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPE3DPIE);
//                if (megaChart.getCharttype()==reger.Vars.CHARTTYPE3DPIE){
//                    mb.append(" checked");
//                }
//                mb.append("> 3D Pie Chart");
                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPESCATTERPLOT);
                if (megaChart.getCharttype()==reger.Vars.CHARTTYPESCATTERPLOT){
                    mb.append(" checked");
                }
                mb.append("> Scatter Plot");
//                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPESTEPCHART);
//                if (megaChart.getCharttype()==reger.Vars.CHARTTYPESTEPCHART){
//                    mb.append(" checked");
//                }
//                mb.append("> Step Chart");
                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPEAREACHART);
                if (megaChart.getCharttype()==reger.Vars.CHARTTYPEAREACHART){
                    mb.append(" checked");
                }
                mb.append("> Area Chart");
                mb.append("<br><input name=charttype type=radio value="+reger.Vars.CHARTTYPESTACKEDAREA);
                if (megaChart.getCharttype()==reger.Vars.CHARTTYPESTACKEDAREA){
                    mb.append(" checked");
                }
                mb.append("> Stacked Area Chart");
                mb.append("</font>");
                mb.append("</td>");


                mb.append("<td valign=top>");
                mb.append("<font face=arial size=-1>");
                mb.append("<input name=yaxiswhattodo type=radio value="+reger.Vars.YAXISWHATTODOAVG);
                if (megaChart.getYaxiswhattodo()==reger.Vars.YAXISWHATTODOAVG){
                    mb.append(" checked");
                }
                mb.append("> Averaging Them");
                mb.append("<br><input name=yaxiswhattodo type=radio value="+reger.Vars.YAXISWHATTODOSUM);
                if (megaChart.getYaxiswhattodo()==reger.Vars.YAXISWHATTODOSUM){
                    mb.append(" checked");
                }
                mb.append("> Adding Them Together");
                //@todo Consider allowing the user to return percentages of total.
                mb.append("</font>");
                mb.append("</td>");

                mb.append("<td valign=top>");

                mb.append("</td>");


                mb.append("</tr>");






                mb.append("</table>");

                mb.append("</form>");

            mb.append("</td></tr>");



            mb.append("</td></tr>");
            //Debug End

            mb.append("</table>");
            mb.append("</td></tr></table>");






%>

<%
/*----------------------------------------------------*/
/*                  Side Column                       */
        StringBuffer sc = new StringBuffer();
/*----------------------------------------------------*/


%>

<%@ include file="globalfooter.jsp" %>

