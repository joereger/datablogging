<%@ page import="reger.core.db.Db"%>
<%@ page import="reger.Entry"%>
<%@ page import="reger.template.Template"%>
<%@ page import="reger.Log"%>
<%@ page import="reger.Account"%>
<%@ page import="reger.cache.AccountCache"%>
<%
    /*----------------------------------------------------*/
/*                  Page Config                       */
    reger.pageFramework.PageProps pageProps = new reger.pageFramework.PageProps();
    pageProps.siteSection = reger.pageFramework.PageProps.MARKETINGSITE;
    pageProps.isPasswordProtected = false;
    pageProps.trafficType = reger.Vars.TRAFFICTYPEMARKETINGSITEMISC;
    pageProps.marketingSiteSection = pageProps.MARKETINGSITESECTIONCOMMUNITY;
    pageProps.pathToAppRoot = "../";
/*----------------------------------------------------*/
%>

<%@ include file="../globalheader.jsp" %>

<%
    /*----------------------------------------------------*/
/*                  Main Body                         */
    StringBuffer mb = new StringBuffer();
/*----------------------------------------------------*/

    mb.append(reger.SideColumn.sideColTableStart("Community Tags"));
    mb.append(reger.SideColumn.sideColHeaderRow("Community Tags"));
    StringBuffer qs = new StringBuffer();
    qs.append("<font face=arial size=+1 class=largefont>"+ request.getParameter("tag") +"</font>");
    qs.append("<br><a href='community-tags.log'><font siz=+4 face=arial>All Tags</font></a>");
    mb.append(reger.SideColumn.sideColContentRow(qs.toString()));
    mb.append(reger.SideColumn.sideColTableEnd("Community Tags"));

    mb.append("<table cellpadding=0 width=100% cellspacing=0 border=0>");
    mb.append("<tr>");
    mb.append("<td valign=top>");
    try {
        int currentPage = 1;
            if (request.getParameter("currentpage") != null) {
                currentPage = reger.core.Util.getCurrentPage(request.getParameter("currentpage"));
                if (currentPage < 0) {
                    currentPage = 1;
                }
            }
            int perPage = 25;
            //Limit vars
            int limitMin = (currentPage * perPage) - perPage;
            int limitMax = perPage;

            String tagSql = "";
            if (request.getParameter("tagid")!=null && reger.core.Util.isinteger(request.getParameter("tagid"))) {
                tagSql += " AND tag.tagid='" + reger.core.Util.cleanForSQL(request.getParameter("tagid")) + "' ";
            } else {
                if (request.getParameter("tag")!=null){
                    tagSql = " AND tag.tag='" +reger.core.Util.cleanForSQL(request.getParameter("tag"))+ "' ";
                }
            }

            //-----------------------------------
            //-----------------------------------
            String[][] rstEventList = Db.RunSQL("select event.eventid, account.accountid FROM tag, eventtaglink, account, event, megalog, pl WHERE account.plid=pl.plid AND "+userSession.getPl().getPeerSql()+" AND megalog.logid=event.logid AND megalog.logaccess='"+reger.Vars.LOGACCESSPUBLIC+"' AND event.accountid=account.accountid AND "+reger.Entry.sqlOfLiveEntry+" "+tagSql+" AND eventtaglink.tagid=tag.tagid AND event.eventid=eventtaglink.eventid ORDER BY event.date DESC  LIMIT " + limitMin + "," + limitMax);
            //-----------------------------------
            //-----------------------------------
            //-----------------------------------
            //-----------------------------------
            String[][] rstEventCount = Db.RunSQL("SELECT count(*) FROM tag, eventtaglink, account, event, megalog, pl WHERE account.plid=pl.plid AND "+userSession.getPl().getPeerSql()+" AND megalog.logid=event.logid AND megalog.logaccess='"+reger.Vars.LOGACCESSPUBLIC+"' AND event.accountid=account.accountid AND "+reger.Entry.sqlOfLiveEntry+" "+tagSql+" AND eventtaglink.tagid=tag.tagid AND event.eventid=eventtaglink.eventid");
            //-----------------------------------
            //-----------------------------------

            System.out.println("EVENTS ARE ************** " + rstEventCount[0][0]);
            int recordcount = Integer.parseInt(rstEventCount[0][0]);
            mb.append("<table border=0>");
            mb.append("<tr>");
            StringBuffer pagingOut = new StringBuffer();
            if (recordcount > perPage) {
                pagingOut.append("<td colspan=4>");
                pagingOut.append(reger.pagingLinkPrint.getHtml(recordcount, currentPage, perPage, request));
                pagingOut.append("</td>");
                //And finally put it on the page
                mb.append(pagingOut);
            }
            mb.append("</tr>");
            mb.append("<tr>");
            //End paging

            if (rstEventList != null) {
                for (int i = 0; i < rstEventList.length; i++) {
                    //Go get the entry from the cache
                    Entry entry = reger.cache.EntryCache.get(Integer.parseInt(rstEventList[i][0]));
                    Account acctTmp = AccountCache.get(Integer.parseInt(rstEventList[i][1]));
                    String entryurl = acctTmp.getSiteRootUrl(userSession) + "/" +reger.Entry.entryFileNameStatic(entry.logid, entry.eventid, entry.title);


                    //How many chars to display?
                    int displaycharsinsummary = userSession.getAccount().getDisplaycharsinsummary();
                    if ((displaycharsinsummary <= 0) || (displaycharsinsummary >= entry.comments.length())) {
                        displaycharsinsummary = entry.comments.length();
                    }
                    String entrybody = "";
                    entrybody = entry.comments.substring(0, displaycharsinsummary);
                    //Put line breaks in there
                    //entrybody=replace(entrybody, VbCrlf  & VbCrlf, "<br><br>")
                    entrybody = entrybody.replaceAll(reger.Vars.LINEBREAKCHAR, "<br><br>");
                    //Add the More Link if needed
                    if (entry.comments.length() > displaycharsinsummary) {
                        entrybody = entrybody + " ...<a href=" + entryurl + ">More</a>";
                    }

                    //Get the default template
                    String templateText = reger.template.AllTemplatesInSystem.getTemplateByTemplateid(0, Template.TEMPLATETYPEENTRYLIST).getTemplate();

                    //Get log name
                    String logname = "";
                    Log log = reger.cache.LogCache.get(entry.logid);
                    if (log != null) {
                        logname = log.getName();
                    }

                    //Output the entry
                    mb.append(reger.template.EntryListTemplateProcessor.entryout(templateText, reger.core.TimeUtils.gmttousertime(entry.dateGmt, userSession.getAccount().getTimezoneid()), entry.title, entryurl, reger.core.Util.truncateString(entry.comments, userSession.getAccount().getDisplaycharsinsummary()), logname, entry.filecount, entry.messagecount, entry.accountuserid));
                }
            }
            mb.append("</tr>");
            //Paging footer
            if (recordcount > perPage) {
                mb.append("<tr>");
                mb.append(pagingOut);
                mb.append("</tr>");
            }
            mb.append("</table>");
    } catch (Exception e) {
        Debug.errorsave(e, "Exception occurred in community-tag-detail.log");
    }
    mb.append("</td>");
    mb.append("<td valign=top>");
    try {
        int currentPage = 1;
        if (request.getParameter("currentImagePage") != null) {
            currentPage = reger.core.Util.getCurrentPage(request.getParameter("currentImagePage"));
            if (currentPage < 0) {
                currentPage = 1;
            }
        }
        int perPage = 50;
        //Limit vars
        int limitMin = (currentPage * perPage) - perPage;
        int limitMax = perPage;

        String tagSql = "";
        if (request.getParameter("tagid") != null) {
            tagSql = " tag.tagid='" + reger.core.Util.cleanForSQL(request.getParameter("tagid")) + "'";
        } else if ((request.getParameter("tagid") == null) && (request.getParameter("tag") != null)) {
            tagSql = " tag.tag='" + reger.core.Util.cleanForSQL(request.getParameter("tag")) + "'";
        } else {
            tagSql = "";
        }

        //-----------------------------------
        //-----------------------------------
        String[][] rstImageList = Db.RunSQL("select image.imageid, image.filename, image.description, image.sizeinbytes, image.originalfilename, account.accountid FROM image, tag, tagimagelink, account, event, megalog, pl WHERE account.plid=pl.plid AND "+userSession.getPl().getPeerSql()+" AND megalog.logid=event.logid AND megalog.logaccess='"+reger.Vars.LOGACCESSPUBLIC+"' AND event.accountid=account.accountid AND "+reger.Entry.sqlOfLiveEntry +" AND image.eventid=event.eventid AND "+tagSql+" AND tagimagelink.tagid=tag.tagid and image.imageid=tagimagelink.imageid ORDER BY event.date DESC, image.imageid ASC  LIMIT " + limitMin + "," + limitMax);
        //-----------------------------------
        //-----------------------------------
        //-----------------------------------
        //-----------------------------------
        String[][] rstImageCount = Db.RunSQL("select count(*) FROM image, tag, tagimagelink, account, event, megalog, pl WHERE account.plid=pl.plid AND "+userSession.getPl().getPeerSql()+" AND megalog.logid=event.logid AND megalog.logaccess='"+reger.Vars.LOGACCESSPUBLIC+"' AND event.accountid=account.accountid AND "+reger.Entry.sqlOfLiveEntry+" AND image.eventid=event.eventid AND "+tagSql+" AND tagimagelink.tagid=tag.tagid and image.imageid=tagimagelink.imageid");
        //-----------------------------------
        //-----------------------------------


        System.out.println("IMAGES ARE ************** " + rstImageCount[0][0]);
        int recordcount = Integer.parseInt(rstImageCount[0][0]);
        mb.append("<table border=0>");
        mb.append("<tr>");
        StringBuffer pagingOut = new StringBuffer();
        if (recordcount > perPage) {
            pagingOut.append("<td colspan=4>");
            pagingOut.append(reger.pagingLinkPrint.getImagePageNumbers(recordcount, currentPage, perPage, request));
            pagingOut.append("</td>");
            //And finally put it on the page
            mb.append(pagingOut);
        }
        mb.append("</tr>");
        mb.append("<tr>");
        //End paging

        String mediaoutPath = "../";
        int imagesPerRow = 3;
        if (rstImageList != null) {
            int imagesInCurrentRow = 0;
            for (int i = 0; i < rstImageList.length; i++) {
                if (imagesInCurrentRow % imagesPerRow == 0) {
                    mb.append("</tr>");
                    mb.append("<tr>");
                }
                Account tmpAccount = AccountCache.get(Integer.parseInt(rstImageList[i][5]));
                mb.append("<td valign=middle align=center bgcolor=#cccccc>");
                mb.append("<a href='" + tmpAccount.getSiteRootUrl(userSession) + "/mediaouthtml.log?imageid=" + rstImageList[i][0] + "' onclick=\"javascript:NewWindow(this.href,'name','0','0','yes');return false;\">");
                mb.append("<img src='" + tmpAccount.getSiteRootUrl(userSession) + "/mediaout.log?imageid=" + rstImageList[i][0] + "&isthumbnail=yes" + "' border=0></a>");
                mb.append("</td>");
                imagesInCurrentRow ++;
            }
        }
        mb.append("</tr>");
        //Paging footer
        if (recordcount > perPage) {
            mb.append("<tr>");
            mb.append(pagingOut);
            mb.append("</tr>");
        }
        mb.append("</table>");
    } catch (Exception e) {
        Debug.errorsave(e, "Exception occurred in community-tag-detail.log");
    }
    mb.append("</td>");
    mb.append("</tr>");
    mb.append("</table>");
    //Add the popup javascript
    mb.append(reger.core.Util.popup());

%>

<%
    /*----------------------------------------------------*/
/*                  Side Column                       */
    StringBuffer sc = new StringBuffer();
/*----------------------------------------------------*/

%>

<%@ include file="../globalfooter.jsp" %>