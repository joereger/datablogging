<%@ page import="reger.core.db.Db,
                 reger.core.Util,
                 reger.core.db.Db,
                 reger.Account,
                 reger.core.licensing.License"%>
<%@ page import="reger.jcaptcha.CaptchaServiceSingleton"%>
<%@ page import="com.octo.captcha.service.CaptchaServiceException"%>
<%@ page import="reger.cache.LogCache"%>
<%@ page import="reger.core.PasswordVerifier"%>
<%@ page import="java.util.*"%>
<%@ page import="reger.cache.AccountCache"%>
<%@ page import="reger.core.EmailSendException"%>
<%@ page import="reger.cache.AccountCache"%>
<%
/*----------------------------------------------------*/
/*                  Page Config                       */
reger.pageFramework.PageProps pageProps = new reger.pageFramework.PageProps();
pageProps.siteSection=pageProps.MARKETINGSITE;
pageProps.title = "Create A Datablog!";
pageProps.navButtonName = "aboutsignup";
pageProps.isPasswordProtected = false;
pageProps.trafficType=reger.Vars.TRAFFICTYPEMARKETINGSITEMISC;
pageProps.pathToAppRoot="../";
pageProps.marketingSiteSection = pageProps.MARKETINGSITESECTIONSIGNUP;
/*----------------------------------------------------*/
%>

<%@ include file="../globalheader.jsp" %>



<%
/*----------------------------------------------------*/
/*                  Main Body                         */
        StringBuffer mb = new StringBuffer();
/*----------------------------------------------------*/


//If this is an attempt to create a log and the user's logged-in, send them to their log add page
if (userSession.getAccountuser().isLoggedIn){
    if (request.getParameter("eventtypeid")!=null && reger.core.Util.isinteger(request.getParameter("eventtypeid"))){
        Account acctTmp = AccountCache.get(userSession.getAccountuser().getAccountid());
        String redirectTo = acctTmp.getSiteRootUrl(userSession)+"/myhome/logs-newlog.log?action=addlogtype&eventtypeid="+request.getParameter("eventtypeid");
        response.sendRedirect(redirectTo);
        return;
    }
}


//Page Vars
String errortext="";
String siteurl=reger.core.Util.getParameterClean(request.getParameter("siteurl"));
String email=reger.core.Util.getParameterClean(request.getParameter("email"));
String password=reger.core.Util.getParameterClean(request.getParameter("password"));
String passwordverify=reger.core.Util.getParameterClean(request.getParameter("passwordverify"));

//Timezoneid
String usertimezoneid = reger.Vars.TIMEZONEIDDEFAULT;
if (request.getParameter("usertimezoneid")!=null){
    usertimezoneid = request.getParameter("usertimezoneid");
}

//Create accountuser object
reger.Accountuser au = new reger.Accountuser(-1);

//Create an account ------------------------------------------------------------
//------------------------------------------------------------------------------
if (pageProps.action.equals("createaccount")) {

    //Set properties of this accountuser
    if (userSession.getPl().getIsemailactivationofaccountsrequired()){
        reger.core.Debug.debug(5, "signup.log", "setting new user to false activated");
        au.setIsactivatedbyemail(false);
    } else {
        reger.core.Debug.debug(5, "signup.log", "setting new user to true validated");
        au.setIsactivatedbyemail(true);
    }
    au.setEmailactivationkey(reger.core.RandomString.randomAlphanumeric(10));
    au.setFriendlyname(siteurl);
    au.setPassword(password);
    au.setVerifypassword(passwordverify);
    au.setEmail(email);
    au.setOnelinesummary(siteurl);

    //Make sure we have a password
    if (request.getParameter("password")==null || request.getParameter("password").equals("")){
        errortext = errortext + "You must enter a password.<br>";
    }
    //Must agree to the terms
    if (request.getParameter("iagreetoterms")==null || !request.getParameter("iagreetoterms").equals("1")){
        errortext = errortext + "You must agree to the "+userSession.getPl().getTermsofuselinktext()+".<br>";
    }
    //Make sure jcaptcha passes
    Boolean isResponseCorrect =Boolean.TRUE;
    String captchaId = request.getSession().getId();
    String resp = request.getParameter("j_captcha_response");
    try {
        //isResponseCorrect = CaptchaServiceSingleton.getInstance().validateResponseForID(captchaId, resp);
    } catch (CaptchaServiceException e) {
         //isResponseCorrect = new Boolean(false);
         //Debug.debug(5, "jcaptcha - signup.log", e);
         //Debug.debug(5, "jcaptcha - signup.log", "captchaId on previous error="+ captchaId);
    }
    if (!isResponseCorrect.booleanValue()){
        errortext = errortext + "You failed to correctly type the letters into the box.<br>";
    }
    //Servername validation
    errortext = errortext + Account.validateServername(siteurl, userSession.getPl().getPlid());
    //Accountuser validation
    errortext = errortext + au.validateAccountuser(userSession.getPl());
    //Signup disabled
    if (!userSession.getPl().getIssignupenabled()){
        errortext = errortext + "Sorry, sign up is currently disabled.<br>";
    }

    //If there is any sort of error
	if (!errortext.equals("")){
        //@todo Record the signup error somewhere?
    }else {
        //Need to see if the pl requires approval of accounts by an admin
        int isactiveaccount = 1;
        int isnewpendingadminapproval = 0;
        if (userSession.getPl().getNewaccountsrequireadminapproval()){
            isactiveaccount = 0;
            isnewpendingadminapproval = 1;
        }
        //License
        String encryptedLicense = "";
        if(String.valueOf(userSession.getPl().getLicense().getProperty(License.PROPSTRINGINDIVIDUALUSERSPAYTOUPGRADEACCOUNTS)).equals("1")){
            //Expiration date
            Calendar xDaysFromNow = reger.core.TimeUtils.xDaysAgoEnd(reger.core.TimeUtils.nowInGmtCalendar(), (-1*reger.Vars.TRIALACCOUNTDAYS));
            //License props
            HashMap licenseProps = new HashMap();
            licenseProps.put(License.PROPSTRINGLICENSETYPE, String.valueOf(License.LICENSETYPEACCOUNTSUBSCRIPTION));
            licenseProps.put(License.PROPSTRINGEXPDATEGMT, String.valueOf(reger.core.TimeUtils.dateformatfordb(xDaysFromNow)));
            //Create the license
            License accountLicense = new License(null, licenseProps);
            encryptedLicense = accountLicense.getEncryptedLicense();
        }
        //Create this this account
        //-----------------------------------
        //-----------------------------------
        int newaccountid = Db.RunSQLInsert("INSERT INTO account(accounturl                              , createdate                                           ,plid                                  , timezoneid                                              , messagesstatus, messagesapproval, homepagetitle                                 , homepagecalendar, jspopup, admintools, pingweblogscom, showhometab, hometabtext, showlogintab, displaycharsinsummary, displaynumberofentries, userelatedlinks, favesiteon, onthisday, emailnewsletter, emailsendhour, isactiveaccount      , isnewpendingadminapproval      , hptemplateid                               , entlisttemplateid                             , sitetemplateid                                     , encryptedlicense, islistedindirectory, datemarkedinactive) " +
                                                        "VALUES('"+ reger.core.Util.cleanForSQL(siteurl) + "', '"+reger.core.TimeUtils.nowInGmtString()+"'     , '"+ userSession.getPl().getPlid() +"','"+reger.core.Util.cleanForSQL(au.getUsertimezoneid())+"','1'            , '1'             , '"+ reger.core.Util.cleanForSQL(siteurl) +"' , '1'             ,'1'     , '0'       , '1'           , '1'        , ''         , '1'         , '0'                  , '15'                  , '1'            , '0'       , '1'      , '1'            , '3'     , '"+isactiveaccount+"', '"+isnewpendingadminapproval+"', '"+userSession.getPl().getHptemplateid()+"', '"+userSession.getPl().getEntlisttemplateid()+"', '"+userSession.getPl().getPublicsitetemplateid()+"', '"+encryptedLicense+"', '1', '"+reger.core.TimeUtils.nowInGmtString()+"')");
        //-----------------------------------
        //-----------------------------------
        //Account
        Account acct = new Account(newaccountid);
        acct.doBilling();
        //Set the new accountid
        au.setAccountid(newaccountid);
        //Save the accountuser
        au.newAccountuser(userSession.getPl());
        //Grant the accountuser ownership of the account
        au.addUserToAclGroup("SiteOwner", newaccountid);
        //Add friend from a manual click on friendassociate.log
        if (userSession.getAttribute("accountuseridtarget")!=null && reger.core.Util.isinteger(String.valueOf(session.getAttribute("accountuseridtarget")))){
            //Set the friendinvitationid
            int accountuseridtarget = Integer.parseInt(String.valueOf(userSession.getAttribute("accountuseridtarget")));
            //Create the friend relationship from the new user to the inviter
            au.addFriend(accountuseridtarget);
        }
        //Insert the new log
        //-----------------------------------
        //-----------------------------------
        int newlogid = Db.RunSQLInsert("INSERT INTO megalog(accountid, name, eventtypeid, logaccess, showonhomepage, nestednavorder) VALUES('"+ newaccountid +"', '"+reger.core.Util.cleanForSQL(reger.Vars.DEFAULTLOGNAME)+"', '"+ userSession.getPl().getDefaulteventtypeid() +"', '"+reger.Vars.LOGACCESSPUBLIC+"', '1', '1')");
        //-----------------------------------
        //-----------------------------------
        //Important to refresh the LogCache object after megalog changes
        LogCache.flushByLogid(newlogid);
        //Calculate the base url of this account
        String baseUrlOfAccount = siteurl.toLowerCase() + "." + userSession.getPl().getPlbasedomain();
        if (!userSession.getPl().getUsedynamicdns()){
            baseUrlOfAccount =  userSession.getPl().getPlbasedomain() + "/~" + siteurl.toLowerCase();
        }

        //Do friendinvitationid work
        if (userSession.getAttribute("friendinvitationid")!=null && reger.core.Util.isinteger((String)session.getAttribute("friendinvitationid"))){
            if (userSession.getAttribute("friendinvitationkey")!=null){
                reger.InvitationProcessor.process(au, Integer.parseInt((String)userSession.getAttribute("friendinvitationid")), (String)userSession.getAttribute("friendinvitationkey"));
                au.populate();
            }
        }
        //If this pl requires approval of accounts, send an email to the admin
        if (userSession.getPl().getNewaccountsrequireadminapproval()){
            reger.emailtext.BasicEmails.newAccountRequiringAdminApproval(userSession.getPl(), newaccountid);
            //Redirect to awaiting approval screen
            response.sendRedirect("login-awaitingapproval.log?accountid="+au.getAccountid());
            return;
        }
        //Send email
        if (userSession.getPl().getIsemailactivationofaccountsrequired()){
            try{
                reger.emailtext.BasicEmails.newAccountEmailVerificationMessage(au, newaccountid, userSession.getPl(), request.getParameter("password"));
            } catch (EmailSendException ex){
                reger.core.Debug.debug(5, "signup.log", "redirecting new user to login-awaitingactivation.log with error");
                response.sendRedirect("login-awaitingactivation.log?msg=signupcompletewitherror");
                return;
            }
            reger.core.Debug.debug(5, "signup.log", "redirecting new user to login-awaitingactivation.log");
            response.sendRedirect("login-awaitingactivation.log?msg=signupcomplete");
            return;
        } else {
            reger.emailtext.BasicEmails.newAccountWelcome(au, newaccountid, userSession.getPl(), request.getParameter("password"));
        }
        //Redirect to log the user in
        reger.core.Debug.debug(5, "signup.log", "redirecting new user to login.log");
        response.sendRedirect(au.getSiteRootUrlOfPrimaryAccount(userSession) +"/login.log?action=login&email="+java.net.URLEncoder.encode(au.getEmail(), "UTF-8")+"&password="+java.net.URLEncoder.encode(request.getParameter("password"), "UTF-8")+"&msg=signupcomplete");
        return;
    }
}


//Existing users login
String eventtypeidQueryString = "";
if (reger.core.Util.isinteger(request.getParameter("eventtypeid"))){
    eventtypeidQueryString = "?eventtypeid="+request.getParameter("eventtypeid");
}
mb.append("<p align=right>");
mb.append("<a href='login.log"+eventtypeidQueryString+"'><font face=arial size=-2 color=#666666>>><b>Existing Users Click Here to Log In</b></font></a>");
mb.append("<br>");
mb.append("</p>");

//Display any errors
if (!errortext.equals("")) {
    mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEERROR, pageProps.pathToAppRoot, "Oops!  Errors were found:<br><br>"+errortext));
}

//If signup's disabled
if (userSession.getPl().getIssignupenabled()){

    //Sign Up
    mb.append(reger.ui.ShadowBox.start(pageProps.pathToAppRoot));

    mb.append("<!-- begin  permissions table -->");
    mb.append("<table cellpadding=5 align=center cellspacing=1 border=0>");


    mb.append("<form action=signup.log method=post>");
    mb.append("<input type=hidden name=action value=createaccount>");
    mb.append("<input type=hidden name=explicitdesiretocreate value=true>");
    mb.append("<input type=hidden name=eventtypeid value="+request.getParameter("eventtypeid")+">");
    mb.append("<input type=hidden name=logname value=\""+reger.core.Util.cleanForHtml(request.getParameter("logname"))+"\">");

    //mb.append("<tr>");
    //mb.append("<td valign=top nowrap align=left bgcolor=#cccccc colspan=3>");
    //mb.append("<font face=arial size=-1 color=#000000><b>Account Setup</b></font><br>");
    //mb.append("</td>");
    //mb.append("</tr>");

    mb.append("</tr>");
    mb.append("<td bgcolor=#ffffff valign=top align=right><font face=arial size=-1>");
    mb.append("<b>Create Your Own Web Address!</b>");
    mb.append("</font>");
    mb.append("<br>");
    mb.append("<font face=arial size=-2 color=#000000>");
    //mb.append("This is the URL (web location) where your logs are published.  Once your account is created you can decide to keep these logs private, share them with specific people, or share them with the world!");
    mb.append("</font>");
    mb.append("</td>");
    mb.append("<td bgcolor=#e6e6e6 valign=top nowrap align=left colspan=2><font face=arial size=-1>");
    if (userSession.getPl().getUsedynamicdns()){
        mb.append("<b>"+request.getScheme() + ":// <input type='text' name='siteurl' value='" + reger.core.Util.cleanForHtml(siteurl) + "' size='10' maxlength='49'> ." + userSession.getPl().getPlbasedomain() + "/ </b>");
    } else {
        mb.append("<b>"+userSession.getPl().getPlBaseUrl(userSession)+"/~ <input type='text' name='siteurl' value='" + reger.core.Util.cleanForHtml(siteurl) + "' size='10' maxlength='49'> /</b>");

    }
    mb.append("</font>");
    mb.append("<br>");
    mb.append("<font face=arial size=-2 color=#000000><b>");
    mb.append("Valid characters: letters, numbers and dash -.<br>Can't start with a dash.");
    mb.append("</b></font>");
    mb.append("</td>");
    mb.append("</tr>");




    //Email
    mb.append("<tr>");
    mb.append("<td valign=top align=right bgcolor=#ffffff>");
    mb.append("<font face=arial size=-1>");
    mb.append("<b>Email Address:</b>");
    mb.append("</font>");
    mb.append("<br><font face=arial size=-2>");
    mb.append("This will be your login.");
    mb.append("</font>");
    mb.append("</td>");
    mb.append("<td valign=top align=left bgcolor=#ffffff colspan=2>");
    mb.append("<input type=text name=email value=\""+email+"\" size=30 maxlength=100>");
    mb.append("</td>");
    mb.append("</tr>");


    //Password
    mb.append("<tr>");
    mb.append("<td valign=top align=right bgcolor=#ffffff>");
    mb.append("<font face=arial size=-1>");
    mb.append("<b>Password:</b>");
    mb.append("</font>");
    mb.append("<br>");
    mb.append("<font face=arial size=-2>");
    PasswordVerifier pwdv = new PasswordVerifier(userSession.getPl());
    //mb.append(pwdv.getPasswordRequirementsAsHtml());
    mb.append("</font>");
    mb.append("</td>");
    mb.append("<td valign=top align=left bgcolor=#ffffff>");
    mb.append("<input type=password name=password value='' size=15 maxlength=50>");
    mb.append("</td>");
    mb.append("<td valign=top align=left bgcolor=#ffffff rowspan=2 width=25% >");
    mb.append(pwdv.getPasswordRequirementsAsHtml());
    mb.append("</td>");
    mb.append("</tr>");

    //Password Verify
    mb.append("<tr>");
    mb.append("<td valign=top align=right bgcolor=#ffffff>");
    mb.append("<font face=arial size=-1>");
    mb.append("<b>Retype Password:</b>");
    mb.append("</font>");
    mb.append("<br>");
    mb.append("<font face=arial size=-2>");
    //mb.append("Please retype your password for higher security.");
    mb.append("</font>");
    mb.append("</td>");
    mb.append("<td valign=top align=left bgcolor=#ffffff>");
    mb.append("<input type=password name=passwordverify value='' size=15 maxlength=50>");
    mb.append("</td>");
    mb.append("</tr>");



    //usertimezoneid
    mb.append("<tr>");
    mb.append("<td valign=top align=right bgcolor=#ffffff>");
    mb.append("<font face=arial size=-1>");
    mb.append("<b>Timezone:</b>");
    mb.append("</font>");
    mb.append("<br><font face=arial size=-2>");
    mb.append("</font>");
    mb.append("</td>");
    mb.append("<td valign=top align=left bgcolor=#ffffff colspan=2>");
    mb.append("<select name=usertimezoneid style=\"font-size: 10px;\">");
    String[] timezone = TimeZone.getAvailableIDs();
    TreeSet timezoneids = new TreeSet();
    //Add the timezoneid's to a treeset
    for (int i = 0; i < timezone.length; i++) {
        timezoneids.add(timezone[i]);
    }
    //Output to the screen
    for (Iterator iterator = timezoneids.iterator(); iterator.hasNext();) {
        String tzid = (String) iterator.next();
        mb.append("<option value=\""+reger.core.Util.cleanForHtml(tzid)+"\" ");
        if (usertimezoneid!=null && usertimezoneid.equalsIgnoreCase(tzid)) {
            mb.append("selected");
        }
        mb.append(">");
        mb.append(tzid);
        mb.append("</option>");
    }
    mb.append("</select>");
    mb.append("</td>");
    mb.append("</tr>");

    //Captcha
    //mb.append("<tr>");
    //mb.append("<td valign=top nowrap align=left bgcolor=#cccccc colspan=3>");
    //mb.append("<font face=arial size=-1 color=#000000><b>Prove that You're Human</b></font><br>");
    //mb.append("</td>");
    //mb.append("</tr>");
    mb.append("<tr>");
    mb.append("<td bgcolor=#ffffff valign=top align=right>");
    mb.append("<font face=arial size=-1 color=#000000><b>Type the Letters:</b></font><br>");
//    mb.append("<font face=arial size=-2 color=#000000>");
//    mb.append("Type the letters you see in the box to the right.  This is done to prove that you're human, not an automated spam bot.");
//    mb.append("</font>");
    mb.append("</td>");
    mb.append("<td bgcolor=#ffffff valign=top nowrap align=left colspan=2>");
    mb.append("<input type='text' name='j_captcha_response' value=''>");
    mb.append("<br>");
    mb.append("<div style=\"background: #e6e6e6; padding: 8px;\">");
    mb.append("<img src=\"/jcaptcha\" style=\"border-color: #e6e6e6; border-width: 10px;\">");
    mb.append("</div>");
    mb.append("</td>");



    mb.append("</td>");
    mb.append("</tr>");


    //Terms of use
    //mb.append(reger.core.Util.popup());
    //mb.append("<tr>");
    //mb.append("<td valign=top nowrap align=left bgcolor=#cccccc colspan=3>");
    //mb.append("<font face=arial size=-1 color=#000000><b>"+userSession.getPl().getTermsofuselinktext()+"</b></font><br>");
    //mb.append("</td>");
    //mb.append("</tr>");
    //
    //mb.append("<tr>");
    //mb.append("<td valign=top nowrap align=center bgcolor=#ffffff colspan=3>");
    //mb.append("<textarea cols='55' rows='5' name='termsofservice' style=\"font-size: 12px;font-face: arial; background: #ffffff; color: #000000;\" disabled=\"true\">"+Util.cleanForHtml(userSession.getPl().getTermsofservice())+"</textarea>");
    //mb.append("<br>");
    //mb.append("<input type=checkbox name=iagreetoterms value=1> ");
    //mb.append("<font face=arial size=-1 color=#000000><b>I agree to the <a href='terms-of-service.log' onclick=\"javascript:NewWindow(this.href,'name','0','0','yes');return false;\">"+userSession.getPl().getTermsofuselinktext()+"</a></b></font><br>");
    //mb.append("</td>");
    //mb.append("</tr>");
    //
    //
    //
    ////Submit
    //mb.append("<tr>");
    //mb.append("<td bgcolor='#ffffff' align=center valign=top colspan=3>");
    //mb.append("<input type='submit' value='Create datablogging Account'>");
    //mb.append("</td>");
    //mb.append("</tr>");



    mb.append(reger.core.Util.popup());
    mb.append("<tr>");
    mb.append("<td bgcolor=#ffffff valign=top align=right>");
    mb.append(" ");
    mb.append("</td>");
    mb.append("<td bgcolor=#ffffff valign=top nowrap align=left colspan=2>");
    mb.append("<input type=checkbox name=iagreetoterms value=1> ");
    mb.append("<font face=arial size=-1 color=#000000><b>I agree to the <a href='terms-of-service.log' onclick=\"javascript:NewWindow(this.href,'name','0','0','yes');return false;\">"+userSession.getPl().getTermsofuselinktext()+"</a></b></font><br>");
    mb.append("</td>");
    mb.append("</tr>");

    mb.append("<tr>");
    mb.append("<td bgcolor=#ffffff valign=top align=right>");
    mb.append(" ");
    mb.append("</td>");
    mb.append("<td bgcolor=#ffffff valign=top nowrap align=left colspan=2>");
    mb.append("<input type='submit' value='Complete Signup'>");
    mb.append("</td>");
    mb.append("</tr>");



    mb.append("</table>");
    mb.append("</form>");
    mb.append(reger.ui.ShadowBox.end(pageProps.pathToAppRoot));



    mb.append("<br><br>");

} else {
    mb.append("Sorry, Sign Up is currently disabled.");
}


mb.append("<br><br><br><br><br>");



%>

<%
/*----------------------------------------------------*/
/*                  Side Column                       */
        StringBuffer sc = new StringBuffer();
/*----------------------------------------------------*/
%>


<%@ include file="../globalfooter.jsp" %>

