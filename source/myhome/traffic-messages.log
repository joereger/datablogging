<%@ page import="reger.core.db.Db"%>
<%@ page import="reger.cache.EntryCache"%>
<%@ page import="reger.cache.EntryCache"%>
<%@ page import="reger.AccountCounts"%>
<%@ page import="reger.cache.AccountCountCache"%>
<%
/*----------------------------------------------------*/
/*                  Page Config                       */
reger.pageFramework.PageProps pageProps = new reger.pageFramework.PageProps();
pageProps.siteSection=pageProps.ADMINSITE;
pageProps.title = "Traffic: Messages";
pageProps.isPasswordProtected = true;
pageProps.navButtonName = "trafficmessages";
pageProps.aclObjectName = "TRAFFIC";
pageProps.trafficType=reger.Vars.TRAFFICTYPEADMINMISC;
pageProps.pathToAppRoot="../";
/*----------------------------------------------------*/
%>

<%@ include file="../globalheader.jsp" %>

<%
/*----------------------------------------------------*/
/*                  Main Body                         */
        StringBuffer mb = new StringBuffer();
/*----------------------------------------------------*/

String trafficSection = "Messages";



//Deal with updates
if (pageProps.action.equals("togglestatus")) {
    if (request.getParameter("tostatus")!=null && reger.core.Util.isinteger(request.getParameter("tostatus")) && request.getParameter("messageid")!=null && reger.core.Util.isinteger(request.getParameter("messageid"))){
        //Make sure this messageid is tied to this account
        //-----------------------------------
        //-----------------------------------
        String[][] rstChkMsg= Db.RunSQL("SELECT messageid, event.eventid FROM message, event WHERE messageid='"+request.getParameter("messageid")+"' AND accountid='"+userSession.getAccount().getAccountid()+"' AND message.eventid=event.eventid");
        //-----------------------------------
        //-----------------------------------
        if (rstChkMsg!=null && rstChkMsg.length>0){
            //And if it is, update the status
        	//-----------------------------------
            //-----------------------------------
            int count = Db.RunSQLUpdate("UPDATE message SET isapproved='"+request.getParameter("tostatus")+"' WHERE messageid='"+request.getParameter("messageid")+"'");
            //-----------------------------------
            //-----------------------------------

            //Refresh the entry cache
            EntryCache.flush(Integer.parseInt(rstChkMsg[0][1]));

            //Refresh account counts
            AccountCountCache.flushByAccountid(userSession.getAccount().getAccountid());

            //Send out email notifications if this message is being approved
            if (Integer.parseInt(request.getParameter("tostatus"))==1){
                reger.MessageListHtml.emailNotifications(userSession, Integer.parseInt(rstChkMsg[0][1]));
            }

        }
    }
}

//Deal with deletes
if (pageProps.action.equals("delete")) {
    if (request.getParameter("messageid")!=null && reger.core.Util.isinteger(request.getParameter("messageid"))){
        //Make sure this messageid is tied to this account
        //-----------------------------------
        //-----------------------------------
        String[][] rstChkMsg= Db.RunSQL("SELECT messageid, event.eventid FROM message, event WHERE messageid='"+request.getParameter("messageid")+"' AND accountid='"+userSession.getAccount().getAccountid()+"' AND message.eventid=event.eventid");
        //-----------------------------------
        //-----------------------------------
        if (rstChkMsg!=null && rstChkMsg.length>0){
            //And if it is, delete it
        	//-----------------------------------
            //-----------------------------------
            int count = Db.RunSQLUpdate("DELETE FROM message WHERE messageid='"+request.getParameter("messageid")+"'");
            //-----------------------------------
            //-----------------------------------

            //Refresh the entry cache
            EntryCache.flush(Integer.parseInt(rstChkMsg[0][1]));

            //Update the AccountCounts cache
            AccountCountCache.flushByAccountid(userSession.getAccount().getAccountid());

        }
    }
}

//Output the list
mb.append(reger.MessagesAdmin.htmlOut(userSession, 25, request, true, "Reader Messages", pageProps.pathToAppRoot));


%>

<%
/*----------------------------------------------------*/
/*                  Side Column                       */
        StringBuffer sc = new StringBuffer();
/*----------------------------------------------------*/

//sc.append("This is a ");
//sc.append("side column section.");
%>


<%@ include file="../globalfooter.jsp" %>
