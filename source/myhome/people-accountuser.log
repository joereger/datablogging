<%@ page import="reger.core.db.Db,
                 java.util.TimeZone,
                 java.util.Iterator,
                 java.util.TreeSet"%>
<%@ page import="reger.cache.LogCache"%>

<%
/*----------------------------------------------------*/
/*                  Page Config                       */
reger.pageFramework.PageProps pageProps = new reger.pageFramework.PageProps();
pageProps.siteSection=pageProps.ADMINSITE;
pageProps.title = "User Settings";
pageProps.isPasswordProtected = true;
pageProps.navButtonName = "peoplespecialaccess";
pageProps.aclObjectName = "PEOPLE";
pageProps.trafficType=reger.Vars.TRAFFICTYPEADMINMISC;
pageProps.pathToAppRoot="../";
/*----------------------------------------------------*/
%>

<%@ include file="../globalheader.jsp" %>

<%
/*----------------------------------------------------*/
/*                  Main Body                         */
        StringBuffer mb = new StringBuffer();
/*----------------------------------------------------*/


String errortext="";

int tempAccountuserid = -1;
if (request.getParameter("accountuserid")!=null && !request.getParameter("accountuserid").equals("") && reger.core.Util.isinteger(request.getParameter("accountuserid"))){
    tempAccountuserid=Integer.parseInt(request.getParameter("accountuserid"));
}

//If starting an add
if (pageProps.action.equals("newstart") || pageProps.action.equals("new")){
    tempAccountuserid = -1;
    pageProps.title = "Add a New Author";
    pageProps.navButtonName = "peopleaddauthor";
}


//Create an accountuser object... this is not the one held in userSession
reger.Accountuser au = new reger.Accountuser(userSession.getAccount().getAccountid(), tempAccountuserid);

//Grab data from the request
au.populateFromRequest(request);

//Do the work of deleting an author
if (pageProps.action.equals("deleteauthor")){
    au.deleteAccountuser(userSession.getAccountuser());
    //Update the AccountCounts cache
    reger.cache.AccountCountCache.flushByAccountid(userSession.getAccount().getAccountid());

    response.sendRedirect(pageProps.pathToAppRoot + "myhome/people-authors.log");
    return;

}

//Revoke permissions
if (pageProps.action.equals("removepermissions")){
    if (userSession.getAccountuser().userCanDoAcl("MANAGEACCOUNTS", userSession.getAccount().getAccountid())){
        if (!au.isInAclgroup("SiteOwner", userSession.getAccount().getAccountid()) && !au.userCanDoAcl("MASTERADMIN", userSession.getAccount().getAccountid())){
            au.revokeAllPermissionsForAnAccount(userSession.getAccount().getAccountid());
            response.sendRedirect("people-authors.log");
            return;
        }
    }
}

//Delete user
if (pageProps.action.equals("deleteuser")){
    if (userSession.getAccountuser().userCanDoAcl("MANAGEACCOUNTS", userSession.getAccount().getAccountid())){
        if (!au.isInAclgroup("SiteOwner", userSession.getAccount().getAccountid()) && !au.userCanDoAcl("MASTERADMIN", userSession.getAccount().getAccountid())){
            if (au.getAccountid()==userSession.getAccount().getAccountid()){
                au.deleteAccountuser(userSession.getAccountuser());
                //Update the AccountCounts cache
                reger.cache.AccountCountCache.flushByAccountid(userSession.getAccount().getAccountid());
                response.sendRedirect("people-authors.log");
                return;
            }
        }
    }
}


//Do the work of editing
if (pageProps.action.equals("edit") || pageProps.action.equals("new")){

    //User must have permission to do this
    if (!userSession.getAccountuser().userCanDoAcl("MANAGEACCOUNTS", userSession.getAccount().getAccountid()) && (au.getAccountuserid()!=userSession.getAccountuser().getAccountuserid())){
        errortext=errortext+"Your account does not have permission to manage other accounts.<br>";
    }

    //Create an account if we need to
    if (pageProps.action.equals("new")){
        au.setIsactive(true);
        au.newAccountuser(userSession.getPl());
    }


    //Only do something if we have good data.
    if (errortext.equals("")){

        //Do the account edits
        errortext = errortext + au.saveSettings(userSession.getPl());

        //Accountuser permissions
        au.permissionsUpdateFromRequest(request, userSession.getAccountuser(), userSession.getAccount().getAccountid());

        //Accountuser logaccess
        au.logaccessUpdateFromRequest(request, userSession);

        //If it's the current logged-in user, repopulate the account
        if (au.getAccountuserid()==userSession.getAccountuser().getAccountuserid()){
            userSession.getAccount().refresh();
            userSession.getAccountuser().populate();
        }

        //Repopulate the object
        au = new reger.Accountuser(userSession.getAccount().getAccountid(), au.getAccountuserid());

    }

    if (pageProps.action.equals("new")){
        //Update the AccountCounts cache
        reger.cache.AccountCountCache.flushByAccountid(userSession.getAccount().getAccountid());
    }

}



//Display error messages
if (!errortext.equals("")){
    mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEERROR, pageProps.pathToAppRoot, errortext));
}






mb.append("<form action=people-accountuser.log method=post>");
if (pageProps.action.equals("newstart") || pageProps.action.equals("new")){
    mb.append("<input type=hidden name=action value=new>");
} else {
    mb.append("<input type=hidden name=action value=edit>");
}

if (au.getAccountuserid()!=-1){
    mb.append("<input type=hidden name=accountuserid value='"+au.getAccountuserid()+"'>");
}



//Display the title
mb.append("<table cellpadding=3 cellspacing=1 width=100% border=0>");
mb.append("<tr>");
mb.append("<td valign=top align=left bgcolor=#ffffff>");
mb.append("<font face=arial size=+2 color=#666666>");
if (!au.getFriendlyname().equals("")){
    mb.append(au.getFriendlyname());
} else if (!au.getUsername().equals("")) {
    mb.append(au.getUsername());
}
mb.append("</font>");
mb.append("</td>");
mb.append("</tr>");
mb.append("<tr>");
mb.append("<td valign=top align=left bgcolor=#cccccc>");
if (userSession.getAccountuser().userCanDoAcl("MANAGEACCOUNTS", userSession.getAccount().getAccountid())){
    if (!au.isInAclgroup("SiteOwner", userSession.getAccount().getAccountid()) && !au.userCanDoAcl("MASTERADMIN", userSession.getAccount().getAccountid())){
        if (au.getAccountid()!=userSession.getAccount().getAccountid()){
            mb.append("<font face=arial size=-2>");
            mb.append("<b>");
            mb.append("<a href='people-accountuser.log?action=removepermissions&accountuserid="+au.getAccountuserid()+"'>");
            mb.append("Remove This User's Special Permissions");
            mb.append("</a>");
            mb.append("</b>");
            mb.append("</font>");
        } else {
            mb.append("<font face=arial size=-2>");
            mb.append("<b>");
            mb.append("<a href='people-accountuser.log?action=deleteuser&accountuserid="+au.getAccountuserid()+"'>");
            mb.append("Delete this Author");
            mb.append("</a>");
            mb.append("</b>");
            mb.append("</font>");
        }
    }
}
mb.append("</td>");
mb.append("</tr>");
mb.append("</table>");


if (userSession.getAccountuser().getAccountuserid()==au.getAccountuserid()){
    //It's your account
    mb.append(au.accountSettingsHtmlForm(userSession.getPl()));
} else if (pageProps.action.equals("newstart") || pageProps.action.equals("new")) {
    //It's a new account
    mb.append(au.accountSettingsHtmlForm(userSession.getPl()));
} else if (userSession.getAccountuser().getAccountid()==au.getAccountid() && userSession.getAccountuser().userCanDoAcl("MANAGEACCOUNTS", userSession.getAccount().getAccountid())) {
    //This account is the accountuser's home account and you're able to manage accounts for this account
    mb.append(au.accountSettingsHtmlForm(userSession.getPl()));
}

//Wrapper table
mb.append("<table cellpadding=3 cellspacing=1 width=100% border=0>");
mb.append("<tr>");
mb.append("<td valign=top align=left width=50% bgcolor=#ffffff>");





//Private logs this user is allowed to view
//Only display logs that the logged-in user can view.
mb.append("<table cellpadding=5 cellspacing=1 width=100% border=0>");
mb.append("<tr>");
mb.append("<td valign=top align=left bgcolor=#e6e6e6 colspan=3>");
mb.append("<b>");
mb.append("<font face=arial size=-1>");
mb.append("Log Access Permissions");
mb.append("</font>");
mb.append("</b>");
mb.append("</td>");
mb.append("</tr>");
mb.append("<tr>");
mb.append("<td valign=top align=center bgcolor=#eeeeee>");
mb.append("<b>");
mb.append("<font face=arial size=-1>");
mb.append("Read");
mb.append("</font>");
mb.append("</b>");
mb.append("</td>");
mb.append("<td valign=top align=center bgcolor=#eeeeee>");
mb.append("<b>");
mb.append("<font face=arial size=-1>");
mb.append("Author");
mb.append("</font>");
mb.append("</b>");
mb.append("</td>");
mb.append("<td valign=top align=center bgcolor=#eeeeee>");
mb.append("&nbsp;");
mb.append("</td>");
mb.append("</tr>");
//-----------------------------------
//-----------------------------------
String[][] rsAllLgs=Db.RunSQL("SELECT logid FROM megalog WHERE accountid='"+ userSession.getAccount().getAccountid() +"' AND "+userSession.getAccountuser().LogsUserCanAdministerQueryend(userSession.getAccount().getAccountid())+" ORDER BY name ASC");
//-----------------------------------
//-----------------------------------
if (rsAllLgs!=null && rsAllLgs.length>0){
    for(int i=0; i<rsAllLgs.length; i++){

        reger.Log log = LogCache.get(Integer.parseInt(rsAllLgs[i][0]));

        //If the logged-in user can view this log
        if (log!=null && userSession.getAccountuser().userCanViewLog(log.getLogid())){
            mb.append("<tr>");
            mb.append("<td bgcolor='#ffffff' valign=top align=center>");
            if (!au.isInAclgroup("SiteOwner", userSession.getAccount().getAccountid())){
                if (log.getLogaccess()==reger.Vars.LOGACCESSPUBLIC){
                    mb.append("<font face=arial size=-2 color=#cccccc>");
                    mb.append("Yes.  This is a public log.");
                    mb.append("</font>");
                } else {
                    if (au.userCanViewLog(log.getLogid()) || (request.getParameter("action")!=null && request.getParameter("action").equals("newstart"))){
                        mb.append("<input type=checkbox name='canviewlogid-"+log.getLogid()+"' value='1' checked>");
                    } else {
                        mb.append("<input type=checkbox name='canviewlogid-"+log.getLogid()+"' value='1'>");
                    }
                }
            } else {
                mb.append("<font face=arial size=-2>");
                mb.append("Yes.  This is the site owner.");
                mb.append("</font>");
            }
            mb.append("</td>");
            mb.append("<td bgcolor='#ffffff' valign=top align=center>");
            if (!au.isInAclgroup("SiteOwner", userSession.getAccount().getAccountid())){
                if (au.userCanAuthorLog(log.getLogid()) || (request.getParameter("action")!=null && request.getParameter("action").equals("newstart"))){
                    mb.append("<input type=checkbox name='canauthorlogid-"+log.getLogid()+"' value='1' checked>");
                } else {
                    mb.append("<input type=checkbox name='canauthorlogid-"+log.getLogid()+"' value='1'>");
                }
            } else {
                mb.append("<font face=arial size=-2>");
                mb.append("Yes.  This is the site owner.");
                mb.append("</font>");
            }
            mb.append("</td>");
            mb.append("<td valign=top align=left width=200 bgcolor=#ffffff>");
            mb.append("<font face=arial size=-1>");
            mb.append("<b>");
            mb.append(log.getName());
            mb.append("</b> ");
            mb.append("</font>");
            mb.append("</td>");
            mb.append("</tr>");

        }
    }
} else {
    mb.append("<tr>");
    mb.append("<td valign=top align=left bgcolor=#ffffff colspan=2>");
    mb.append("<font face=arial size=-1>");
    mb.append("This account does not have any logs.");
    mb.append("</font>");
    mb.append("</td>");
    mb.append("</tr>");
}
mb.append("</table>");




//Wrapper table
mb.append("</td>");
mb.append("<td valign=top align=left bgcolor=#ffffff>");

//Permissions
mb.append("<table cellpadding=5 cellspacing=1 width=100% border=0>");
mb.append("<tr>");
mb.append("<td valign=top align=left bgcolor=#e6e6e6 colspan=2>");
mb.append("<b>");
mb.append("<font face=arial size=-1>");
mb.append("Action Permissions");
mb.append("</font>");
mb.append("</b>");
mb.append("</td>");
mb.append("</tr>");


//Iterate on all acl objects
reger.acl.AclObject[] allAclObjects = reger.acl.AllAclObjects.getAllAclObjects();
for (int i = 0; i < allAclObjects.length; i++) {
    reger.acl.AclObject aclObject = allAclObjects[i];

    //Only display the permission if the logged-in user can do it for this account
    if (userSession.getAccountuser().userCanDoAcl(aclObject.aclobjectid, userSession.getAccount().getAccountid())){
        mb.append("<tr>");
        mb.append("<td valign=top align=left bgcolor=#ffffff>");
        if (au.isInAclgroup("SiteOwner", userSession.getAccount().getAccountid())){
            mb.append("<font face=arial size=-2 color=#cccccc>");
            mb.append("Owner Guaranteed Permission");
            mb.append("</font>");
        } else {
            mb.append("<input type=checkbox name=aclobjectid-"+aclObject.aclobjectid+" value=1");
            //Check the actual user's account... not the logged-in user's account
            if ((au.getAccountuserid()!=-1 && (au.userCanDoAcl(aclObject.aclobjectid, userSession.getAccount().getAccountid()))) || (request.getParameter("aclobjectid-"+aclObject.aclobjectid)!=null && request.getParameter("aclobjectid-"+aclObject.aclobjectid).equals("1")) || (request.getParameter("action")!=null && request.getParameter("action").equals("newstart"))){
                mb.append(" checked");
            }
            mb.append(">");
        }
        mb.append("</td>");
        mb.append("<td valign=top align=left bgcolor=#ffffff>");
        mb.append("<font face=arial size=-1><b>");
        mb.append(aclObject.aclfriendlyname);
        mb.append("</b></font>");
        mb.append("<br>");
        mb.append("<font face=arial size=-2>");
        mb.append(aclObject.acldesc);
        mb.append("</font>");
        mb.append("</td>");
        mb.append("</tr>");
    }

}
mb.append("</table>");


//Wrapper table
mb.append("</td>");
mb.append("</tr>");
mb.append("</table>");

//Action buttons
mb.append("<table cellpadding=3 cellspacing=1 width=100% border=0>");
mb.append("<tr>");
mb.append("<td valign=top align=center bgcolor=#ffffff colspan=2>");
mb.append("<br>");
mb.append("<input type=submit value='Save Changes'>");
mb.append("</form>");

mb.append("</td>");
mb.append("</tr>");
mb.append("</table>");
//End action buttons












%>

<%
/*----------------------------------------------------*/
/*                  Side Column                       */
        StringBuffer sc = new StringBuffer();
/*----------------------------------------------------*/

//sc.append("This is a ");
//sc.append("side column section.");
%>


<%@ include file="../globalfooter.jsp" %>
