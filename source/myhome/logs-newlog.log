<%@ page import="reger.core.db.Db,
                 reger.MegaLogType,
                 java.util.Vector"%>
<%
/*----------------------------------------------------*/
/*                  Page Config                       */
reger.pageFramework.PageProps pageProps = new reger.pageFramework.PageProps();
pageProps.siteSection=pageProps.ADMINSITE;
pageProps.title = "<img src='../images/icon-log-med-notext.gif' align=top> Create a New Log";
pageProps.isPasswordProtected = true;
pageProps.navButtonName = "logsnewlog";
pageProps.aclObjectName = "NEWLOG";
pageProps.trafficType=reger.Vars.TRAFFICTYPEADMINMISC;
pageProps.pathToAppRoot="../";
/*----------------------------------------------------*/
%>

<%@ include file="../globalheader.jsp" %>

<%
/*----------------------------------------------------*/
/*                  Main Body                         */
        StringBuffer mb = new StringBuffer();
/*----------------------------------------------------*/

if (userSession.getAccountuser().userCanDoAcl("NEWLOG", userSession.getAccount().getAccountid()) && pageProps.action.equals("addlogtype")){

    //Get the name and eventtypeid
    int eventtypeid = reger.Vars.DEFAULTLOGEVENTTYPEID;
    String logname = reger.Vars.DEFAULTLOGNAME;
    MegaLogType logTypeToAdd = reger.AllMegaLogTypesInSystem.getMegaLogTypeByEventtypeid(eventtypeid);
    if (request.getParameter("eventtypeid")!=null && reger.core.Util.isinteger(request.getParameter("eventtypeid"))){
        eventtypeid = Integer.parseInt(request.getParameter("eventtypeid"));
        logTypeToAdd = reger.AllMegaLogTypesInSystem.getMegaLogTypeByEventtypeid(eventtypeid);
        if (logTypeToAdd!=null){
            logname = logTypeToAdd.getMegalogname();
        }
    }
    if (request.getParameter("logname")!=null && !request.getParameter("logname").equals("")){
        logname = request.getParameter("logname");
    }

    //Inherit the show on homepage setting from the event type
    String showonhomepage = "1";
    if (!reger.AllMegaLogTypesInSystem.getMegaLogTypeByEventtypeid(eventtypeid).getShowonhomepage()){
        showonhomepage = "0";
    }

    //Set ordering info by finding all on first level and getting highest
    reger.nestednav.NestedNavCollection collection = userSession.getAccount().getNestedNavCollection();
    reger.nestednav.NestedNavItem[] topLevelNavItems = collection.getAllChildrenApplyNoPermissions(new reger.nestednav.NestedNavItemBase());
    int currentMaxOrder = reger.nestednav.NestedNavCollection.getMaxOrder(topLevelNavItems);


    //@todo Check for plid membership of this log type

    if (logTypeToAdd!=null){

        //Use the current max order in the account to calculate the newLogOrder for this log
        int newLogOrder = currentMaxOrder + 1;

        //Insert the new log
        //-----------------------------------
        //-----------------------------------
        int newlogid = Db.RunSQLInsert("INSERT INTO megalog(accountid, name, eventtypeid, logaccess, showonhomepage, nestednavparenttype, nestednavparentid, nestednavorder) VALUES('"+ userSession.getAccount().getAccountid() +"', '"+reger.core.Util.cleanForSQL(logname)+"', '"+ logTypeToAdd.getEventtypeid() +"', '"+reger.Vars.LOGACCESSPUBLIC+"', '"+showonhomepage+"', '0', '0', '"+newLogOrder+"')");
        //-----------------------------------
        //-----------------------------------

        //Important to refresh the AllLogsInSystem object after megalog changes
        reger.AllLogsInSystem.refresh(newlogid);

        //Make sure the user who added the log can view it.
        userSession.getAccountuser().grantLogAccess(newlogid);

        //Repopulate the object
        userSession.getAccount().refresh();

        response.sendRedirect("index.log?msg=logadded");
        return;

    }

}



//Display the page
if (pageProps.action.equals("search")){
    mb.append(reger.MegaLogTypeListHtmlRenderer.getSearchResults(request.getParameter("searchterms"), "logs-newlog.log", "logs-newlog.log", "logs-newlog-detail.log", request, response, userSession, pageProps));
} else {
    mb.append(reger.MegaLogTypeListHtmlRenderer.getLogTypeList("logs-newlog.log", "logs-newlog.log", "logs-newlog-detail.log", request, response, userSession, pageProps));
}







%>

<%
/*----------------------------------------------------*/
/*                  Side Column                       */
    StringBuffer sc = new StringBuffer();
/*----------------------------------------------------*/

//sc.append("This is a ");
//sc.append("side column section.");
%>


<%@ include file="../globalfooter.jsp" %>
