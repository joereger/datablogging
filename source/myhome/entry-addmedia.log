
<%
/*----------------------------------------------------*/
/*                  Page Config                       */
reger.pageFramework.PageProps pageProps = new reger.pageFramework.PageProps();
pageProps.siteSection=pageProps.ADMINSITE;
pageProps.title = "Add Images/Media";
pageProps.isPasswordProtected = true;
pageProps.navButtonName = "entries";
pageProps.aclObjectName = "ADDMEDIA";
pageProps.onunloadJavascriptMethod = "returnToEntryPage()";
pageProps.trafficType=reger.Vars.TRAFFICTYPEADMINLOGSECTION;
pageProps.pathToAppRoot="../";
/*----------------------------------------------------*/
%>

<%@ include file="../globalheader.jsp" %>

<%@ page import="reger.core.Debug"%>
<%@ page import="org.apache.commons.io.FilenameUtils"%>
<%@ page import="java.util.Calendar"%>
<%@ page import="reger.files.*"%>
<%@ page import="reger.core.db.Db"%>
<%@ page import="java.text.NumberFormat"%>
<%@ page import="java.text.DecimalFormat"%>

<%
/*----------------------------------------------------*/
/*                  Main Body                         */
        StringBuffer mb = new StringBuffer();
/*----------------------------------------------------*/



//Return to entry javascript
mb.append(reger.core.Util.popupCloseReturnToEntryJavascript());
mb.append(reger.ui.BubbleBox.start("", pageProps.pathToAppRoot));
mb.append("<center>");
mb.append("<font face=arial size=-1>");
mb.append("<a href=\"javascript:returnToEntryPage()\">");
mb.append("Back to the entry.");
mb.append("</a>");
mb.append("</font>");
mb.append("</center>");
mb.append(reger.ui.BubbleBox.end(pageProps.pathToAppRoot));
mb.append("<br>");


boolean showFileBrowser = true;
String thispagename = FilenameUtils.getName(request.getServletPath());

String path = "";
if (request.getParameter("path")!=null){
    path = FilenameUtils.normalize(request.getParameter("path"));
}
if (path==null || path.equals(java.io.File.separator)){
    path = "";
}
String file = "";
if (request.getParameter("file")!=null){
    file =  request.getParameter("file");
}
int eventid=0;
if (request.getParameter("eventid")!=null && reger.core.Util.isinteger(request.getParameter("eventid"))){
    eventid = Integer.parseInt(request.getParameter("eventid"));
}

if(request.getParameter("msg")!=null && !request.getParameter("msg").equals("")){
    mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEINFO, pageProps.pathToAppRoot, request.getParameter("msg")));
}

if (request.getParameter("action")!=null){

    showFileBrowser = false;

    if (request.getParameter("action").equals("deletefilesstart")){
        mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEINFO, pageProps.pathToAppRoot, "Are you sure you want to permanently delete these files?<br><br>They will be removed from any entries that used them."));
        mb.append("<form action='"+thispagename+"' method=post>");
        mb.append("<input type=hidden name=action value='deletefilesend'>");
        mb.append("<input type=submit value='Yes, Delete Them'>");
        mb.append("<br>");
        mb.append("<font size=-2 face=arial>");
        if (request.getParameterValues("file")!=null){
            String[] files = request.getParameterValues("file");
            for (int i = 0; i < files.length; i++) {
                java.lang.String filename = files[i];
                mb.append("<input type=hidden name='file' value=\""+reger.core.Util.cleanForHtml(FilenameUtils.normalize(filename))+"\">");
                mb.append("<br>\\My Files\\"+filename);
            }
        }
        mb.append("</font>");
        mb.append("</form>");
    } else if (request.getParameter("action").equals("deletefilesend")){
        if (request.getParameterValues("file")!=null){
            String[] files = request.getParameterValues("file");
            for (int i = 0; i < files.length; i++) {
                java.lang.String filename = FilenameUtils.normalize(files[i]);
                File fileObj = new File(userSession.getAccount(), filename);
                fileObj.delete();
            }
        }
        showFileBrowser = true;
        mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Success!  The files have been deleted."));
    } else if (request.getParameter("action").equals("movefilesstart")){
        mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEINFO, pageProps.pathToAppRoot, "Where would you like to move them to?"));
        mb.append(DirectoryChooser.listDirectoriesForFileMove(new java.io.File(userSession.getAccount().getPathToAccountFiles()), 0, userSession.getAccount(), pageProps, request.getParameterValues("file"), thispagename));
    } else if (request.getParameter("action").equals("movefilesend")){
        if (request.getParameterValues("file")!=null){
            String[] files = request.getParameterValues("file");
            for (int i = 0; i < files.length; i++) {
                java.lang.String filename = FilenameUtils.normalize(files[i]);
                File fileObj = new File(userSession.getAccount(), filename);
                String filenamealone = FilenameUtils.getName(filename);
                String oldpath = FilenameUtils.getPath(filename);
                reger.core.Debug.debug(5, "files.log", "calling fileObj.move("+FilenameUtils.normalize(request.getParameter("moveto")) +"/"+ filenamealone+")");
                fileObj.move(FilenameUtils.normalize(request.getParameter("moveto")) +"/" +filenamealone);
            }
        }
        showFileBrowser = true;
        mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Success!  The files have been moved."));
    } else if (request.getParameter("action").equals("renamefilesstart")){
        mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEINFO, pageProps.pathToAppRoot, "What would you like to rename these files?"));
        mb.append("<form action='"+thispagename+"' method=post>");
        mb.append("<input type=hidden name=action value='renamefilesend'>");
        mb.append("<input type=submit value='Finish Renaming Files'>");
        mb.append("<br><br>");
        mb.append("<font size=-2 face=arial>");
        if (request.getParameterValues("file")!=null){
            String[] files = request.getParameterValues("file");
            mb.append("<input type=hidden name='numberoffiles' value=\""+files.length+"\">");
            for (int i = 0; i < files.length; i++) {
                java.lang.String filename = files[i];
                mb.append("<input type=hidden name='file"+i+"' value=\""+reger.core.Util.cleanForHtml(filename)+"\">");
                mb.append("<input type=text name='filename"+i+"' size=50 maxlength=255 value=\""+reger.core.Util.cleanForHtml(FilenameUtils.getName(filename))+"\">");
                mb.append("<br><br>");
            }
        }
        mb.append("</font>");
        mb.append("</form>");
    } else if (request.getParameter("action").equals("renamefilesend")){
        if (request.getParameterValues("numberoffiles")!=null && reger.core.Util.isinteger(request.getParameter("numberoffiles"))){
            int numberoffiles = Integer.parseInt(request.getParameter("numberoffiles"));
            for(int i=0; i<numberoffiles; i++){
                String filename = request.getParameter("file"+i);
                String newname = request.getParameter("filename"+i);
                newname = newname.replaceAll("\\\\", "");
                newname = newname.replaceAll("/", "");
                String dirname = FilenameUtils.getPath(filename);
                File fileObj = new File(userSession.getAccount(), filename);
                fileObj.move(FilenameUtils.normalize(dirname)+newname);
            }
        }
        showFileBrowser = true;
        mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Success!  The files have been renamed."));
    } else if (request.getParameter("action").equals("addfilestoentrystart")){
        if (request.getParameterValues("file")!=null){
            if (eventid>0){
                if (request.getParameterValues("file")!=null){
                    String[] files = request.getParameterValues("file");
                    for (int i = 0; i < files.length; i++) {
                        java.lang.String filename = FilenameUtils.normalize(files[i]);
                        //-----------------------------------
                        //-----------------------------------
                        int identity = Db.RunSQLInsert("INSERT INTO image(eventid, image, sizeinbytes, image.order, accountuserid, originalfilename, accountid, filename) VALUES('"+eventid+"', '"+reger.core.Util.cleanForSQL(filename)+"', '"+0+"', '"+reger.ImageOrder.getOrderForNewImage(eventid)+"', '"+0+"', '"+reger.core.Util.cleanForSQL(filename)+"', '"+userSession.getAccount().getAccountid()+"', '"+reger.core.Util.cleanForSQL(filename)+"')");
                        //-----------------------------------
                        //-----------------------------------
                    }
                }
                showFileBrowser = true;
                mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Success!  The files have been added to the entry."));
            } else {
                mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEINFO, pageProps.pathToAppRoot, "Which entry would you like to add these files to?"));
                //-----------------------------------
                //-----------------------------------
                String[][] rstLastentries= Db.RunSQL("SELECT event.eventid, event.title, event.date FROM event, megalog WHERE event.logid=megalog.logid AND event.accountid='"+ userSession.getAccount().getAccountid() +"' AND "+userSession.getAccountuser().LogsUserCanAdministerQueryend(userSession.getAccount().getAccountid())+" AND event.istemporary='0' ORDER BY event.date DESC LIMIT 0,100");
                //-----------------------------------
                //-----------------------------------
                if (rstLastentries!=null && rstLastentries.length>0){
                    mb.append("<table cellpadding=3 cellspacing=2 border=0>");
                    for(int i=0; i<rstLastentries.length; i++){
                        mb.append("<tr>");
                        mb.append("<td bgcolor=#ffffff valign=top><font face=arial size=-2>"+reger.core.TimeUtils.agoText(reger.core.TimeUtils.dbstringtocalendar(rstLastentries[i][2]))+"</font></td>");
                        mb.append("<td bgcolor=#ffffff valign=top><font face=arial size=-1><strong>"+reger.core.Util.truncateString(reger.core.Util.cleanForHtml(rstLastentries[i][1]), 100)+"</strong></font></td>");
                        mb.append("<td bgcolor=#ffffff valign=top>");
                        mb.append("<form action='"+thispagename+"' method=post style=\"border: 0px; margin: 0px;\">");
                        mb.append("<input type=hidden name=action value='addfilestoentrystart'>");
                        mb.append("<input type=hidden name=eventid value=\""+rstLastentries[i][0]+"\">");
                        mb.append("<input type=submit value='Add to this Entry' style=\"font-size: 12px;\">");
                        String[] files = request.getParameterValues("file");
                        for (int j = 0; j < files.length; j++) {
                            java.lang.String filename = files[j];
                            mb.append("<input type=hidden name='file' value=\""+reger.core.Util.cleanForHtml(filename)+"\">");
                        }
                        mb.append("</form>");
                        mb.append("</td>");
                        mb.append("</tr>");
                    }
                    mb.append("<table>");
                } else {
                    mb.append("<font face=arial size=-2>You don't have any entries in the system yet.</font>");
                }
            }
        } else {
            showFileBrowser = true;
            mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEERROR, pageProps.pathToAppRoot, "You must choose at least one file that you'd like to add to an entry."));
        }
    } else if (request.getParameter("action").equals("newdirectorystart")){
        mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEINFO, pageProps.pathToAppRoot, "What would you like to name the new directory?"));
        mb.append("<form action='"+thispagename+"' method=post>");
        mb.append("<input type=hidden name=action value='newdirectoryend'>");
        mb.append("<input type=submit value='Create New Directory'>");
        mb.append("<br><br>");
        mb.append("<font size=-2 face=arial>");
        mb.append("<input type=hidden name='path' value=\""+reger.core.Util.cleanForHtml(path)+"\">");
        mb.append("<input type=text name='newdirname' size=50 maxlength=255 value=\"\">");
        mb.append("</font>");
        mb.append("</form>");
    } else if (request.getParameter("action").equals("newdirectoryend")){
        String newdirname = FilenameUtils.normalize(request.getParameter("newdirname"));
        newdirname = newdirname.replaceAll("\\\\", "");
        newdirname = newdirname.replaceAll("/", "");
        java.io.File newDir = new java.io.File(userSession.getAccount().getPathToAccountFiles()+path+java.io.File.separator+newdirname);
        newDir.mkdirs();
        java.io.File newThumbsDir = new java.io.File(userSession.getAccount().getPathToAccountFiles()+path+java.io.File.separator+newdirname+java.io.File.separator+".thumbnails");
        newThumbsDir.mkdirs();
        showFileBrowser = true;
        mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Success!  The directory has been created."));
    } else if (request.getParameter("action").equals("uploadstart")){
        if (path.equals("")){
            //Calculate the new dated directory name
            Calendar cal = Calendar.getInstance();
            int year = cal.get(Calendar.YEAR);
            int month = cal.get(Calendar.MONTH)+1;
            String monthStr = String.valueOf(month);
            if (monthStr.length()==1){
                monthStr = "0"+monthStr;
            }
            String datedDirectoryName = year+java.io.File.separator+monthStr;
            path = datedDirectoryName;
        }
        mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEINFO, pageProps.pathToAppRoot, "Please browse for files to upload to \\My Files\\"+path+"\\"));
        mb.append("<form action='upload-requestprocessor.log' method=post enctype='multipart/form-data'>");
        mb.append("<input type=hidden name=returnurl value=\""+thispagename+"?path="+reger.core.Util.cleanForHtml(path)+"&eventid="+eventid+"\">");
        mb.append("<input type=hidden name='path' value=\""+reger.core.Util.cleanForHtml(path)+"\">");
        mb.append("<input type=submit value='Upload Files'>");
        mb.append("<br><br>");
        mb.append("<font size=-2 face=arial>");
        for(int i=0; i<15; i++){
            mb.append("<input type='file' size=50 name='file"+i+"'>");
            mb.append("<br>");
        }
        mb.append("</font>");
        mb.append("</form>");
    } else if (request.getParameter("action").equals("uploadend")){

    } else if (request.getParameter("action").equals("renamedirectorystart")){
        if(!path.equals("")){
            mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEINFO, pageProps.pathToAppRoot, "What would you like to rename this directory to?"));
            mb.append("<form action='"+thispagename+"' method=post>");
            mb.append("<input type=hidden name=action value='renamedirectoryend'>");
            mb.append("<input type=submit value='Finish Renaming Directory'>");
            mb.append("<br><br>");
            mb.append("<font size=-2 face=arial>");
            String directoryname = path.substring(FilenameUtils.indexOfLastSeparator(path)+1, path.length());
            mb.append("<input type=hidden name='path' value=\""+reger.core.Util.cleanForHtml(path)+"\">");
            mb.append("<input type=text name='renameto' size=50 maxlength=255 value=\""+reger.core.Util.cleanForHtml(directoryname)+"\">");
            mb.append("</font>");
            mb.append("</form>");
        } else{
            showFileBrowser = true;
            mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEERROR, pageProps.pathToAppRoot, "Oops!  You can't do that to the base directory."));
        }
    } else if (request.getParameter("action").equals("renamedirectoryend")){
        if (!path.equals("")){
            String renameto = FilenameUtils.normalize(request.getParameter("renameto"));
            renameto = renameto.replaceAll("\\\\", "");
            renameto = renameto.replaceAll("/", "");
            File fileObj = new File(userSession.getAccount(), path);
            String parentdirectoryname = "";
            if (FilenameUtils.indexOfLastSeparator(path)>0){
                parentdirectoryname = path.substring(0, FilenameUtils.indexOfLastSeparator(path)) + java.io.File.separator;
            }
            String pathtomoveto = FilenameUtils.normalize(parentdirectoryname + renameto);
            reger.core.Debug.debug(5, "files.log", "calling fileObj.move("+pathtomoveto+") to rename a directory");
            fileObj.move(pathtomoveto);
            showFileBrowser = true;
            mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Success!  The directory has been renamed."));
        }else{
            showFileBrowser = true;
            mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEERROR, pageProps.pathToAppRoot, "Oops!  You can't do that to the base directory."));
        }
    } else if (request.getParameter("action").equals("deletedirectorystart")){
        if (!path.equals("")){
            mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEINFO, pageProps.pathToAppRoot, "\\My Files\\"+request.getParameter("path")+"<br><br>Are you sure you want to permanently delete this directory?<br><br>All files and sub-directories will also be deleted and they will be removed from any entries that reference them."));
            mb.append("<form action='"+thispagename+"' method=post>");
            mb.append("<input type=hidden name=action value='deletedirectoryend'>");
            mb.append("<input type=hidden name=path value='"+request.getParameter("path")+"'>");
            mb.append("<input type=submit value='Yes, Delete This Directory and All Files In It'>");
            mb.append("</font>");
            mb.append("</form>");
        }else{
            showFileBrowser = true;
            mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEERROR, pageProps.pathToAppRoot, "Oops!  You can't do that to the base directory."));
        }
    } else if (request.getParameter("action").equals("deletedirectoryend")){
        if(!path.equals("")){
            File fileObj = new File(userSession.getAccount(), path);
            fileObj.delete();
            showFileBrowser = true;
            mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Success!  The directory and all files in it have been deleted."));
        }else{
            showFileBrowser = true;
            mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEERROR, pageProps.pathToAppRoot, "Oops!  You can't do that to the base directory."));
        }
    } else if (request.getParameter("action").equals("movedirectorystart")){
        if(!path.equals("")){
            mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEINFO, pageProps.pathToAppRoot, "Where would you like to move this directory to?"));
            mb.append(DirectoryChooser.listDirectoriesForDirectoryMove(new java.io.File(userSession.getAccount().getPathToAccountFiles()), 0, userSession.getAccount(), pageProps, request.getParameter("path"), thispagename));
        }else{
            showFileBrowser = true;
            mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEERROR, pageProps.pathToAppRoot, "Oops!  You can't do that to the base directory."));
        }
    } else if (request.getParameter("action").equals("movedirectoryend")){
        if (!path.equals("")){
            String moveto = FilenameUtils.normalize(request.getParameter("moveto"));
            File fileObj = new File(userSession.getAccount(), path);
            String directoryname = path.substring(FilenameUtils.indexOfLastSeparator(path)+1, path.length());
            String pathtomoveto = FilenameUtils.normalize(moveto + java.io.File.separator + directoryname);
            reger.core.Debug.debug(5, "files.log", "calling fileObj.move("+pathtomoveto+") to move a directory");
            fileObj.move(pathtomoveto);
            showFileBrowser = true;
            mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Success!  The directory has been moved."));
        }else{
            showFileBrowser = true;
            mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPEERROR, pageProps.pathToAppRoot, "Oops!  You can't do that to the base directory."));
        }
    }
} else {

}

//mb.append("<div style=\"float: right; width: 200px; margin: 10px;\" class=greybox>");
//mb.append("<font face=arial size=+1 color=#000000>");
//mb.append("Storage Space:");
//mb.append("</font>");
//mb.append("<br>");
//mb.append("<font face=arial size=-2>");
//NumberFormat formatter = new DecimalFormat("####.##");
//if (userSession.getAccount().getMaxspaceinbytes()>0){
//    mb.append(reger.core.Util.getHtmlBarChart(userSession.getAccount().getSpaceused(), userSession.getAccount().getMaxspaceinbytes()));
//    mb.append(formatter.format((double)userSession.getAccount().getSpaceused()/(double)1000000)+ "Mb / "+((double)userSession.getAccount().getMaxspaceinbytes()/(double)1000000)+"Mb Used (" + (100-(int)(((double)userSession.getAccount().getSpaceused()/(double)userSession.getAccount().getMaxspaceinbytes())*100)) + "% Free)");
//} else {
//    mb.append(formatter.format((double)userSession.getAccount().getSpaceused()/(double)1000000)+ "Mb");
//}
//mb.append("</font>");
//mb.append("</div>");

if(showFileBrowser){
    mb.append(reger.ui.BubbleBox.start("", pageProps.pathToAppRoot));
    //Output the current browser html
    FileBrowser fb = new FileBrowser(userSession, path, pageProps, thispagename, eventid);
    fb.addActionForAllCheckedFiles(new FileBrowserFileAction("addfilestoentrystart", thispagename, "Add Checked To Entry"));
    fb.addActionForAllCheckedFiles(new FileBrowserFileAction("deletefilesstart", thispagename, "Delete Checked"));
    fb.addActionForAllCheckedFiles(new FileBrowserFileAction("movefilesstart", thispagename, "Move Checked"));
    fb.addActionForAllCheckedFiles(new FileBrowserFileAction("renamefilesstart", thispagename, "Rename Checked"));
    fb.addLinkToCurrentDirectory(new FileBrowserDirectoryLink("New Directory", thispagename+"?action=newdirectorystart&path=", "add.gif"));
    fb.addLinkToCurrentDirectory(new FileBrowserDirectoryLink("Upload Files", thispagename+"?action=uploadstart&path=", "upload.gif"));
    fb.addLinkToCurrentDirectory(new FileBrowserDirectoryLink("Rename", thispagename+"?action=renamedirectorystart&path=", "rename.gif"));
    fb.addLinkToCurrentDirectory(new FileBrowserDirectoryLink("Move", thispagename+"?action=movedirectorystart&path=", "rename.gif"));
    fb.addLinkToCurrentDirectory(new FileBrowserDirectoryLink("Delete", thispagename+"?action=deletedirectorystart&path=", "delete.gif"));
    fb.process();
    mb.append(fb.getHtml());
    mb.append(reger.ui.BubbleBox.end(pageProps.pathToAppRoot));
}












//debug
Debug.debug(5, "", reger.core.ErrorDissect.ServletUtilsdissect(request));









mb.append("<br><br>");


//if (!reger.systemproperties.AllSystemProperties.getProp("SSLISON").equals("1")){
//    mb.append(reger.ui.BubbleBox.start("Advanced Upload", pageProps.pathToAppRoot));
//
//    mb.append("<center>");
//    mb.append("<br><font face=arial size=-1>");
//    mb.append("Or, you can use the Advanced Upload Tool.");
//    mb.append("</font>");
//
//    mb.append("<form action=entry-addmedia-advanced.log method=get>");
//    mb.append("<input type=hidden name=eventid value="+localEventid+">");
//
//    mb.append("<font face=arial size=-2>");
//    mb.append("Choose a category to upload to:");
//    mb.append("</font>");
//    mb.append("<br>");
//
//    String helpImagetags2 = Help.tip("Keyword Tags", "Keyword Tags help you organize and retrieve your files.  Type words that relate to the file.  For example: \"car outside oldsmobile\".  Separate keywords with a space.", false, pageProps.pathToAppRoot);
//    mb.append("<br>");
//    mb.append("<font face=arial size=-2>Optional Keyword Tags "+helpImagetags2+":</font><br><input type='text' name='imagetags' value=\"\" size='35' maxlength='254' style=\"font-size: 10px;\">");
//    mb.append("<br>");
//    mb.append("<input type='submit' name='Submit' value='Start Advanced Upload'/>");
//    mb.append("</form>");
//
//    mb.append("</center>");
//
//    //End the page
//    mb.append(reger.ui.BubbleBox.end(pageProps.pathToAppRoot));
//}


//Output the page
out.println(mb.toString());

%>

<%
/*----------------------------------------------------*/
/*                  Side Column                       */
        StringBuffer sc = new StringBuffer();
/*----------------------------------------------------*/

//sc.append("This is a ");
//sc.append("side column section.");
%>


<%//@ include file="../globalfooter.jsp" %>
