<%@ page import="reger.core.db.Db,
                 java.util.Calendar,
                 reger.pageFramework.PageProps,
                 reger.Help,
                 reger.Log,
                 java.util.Hashtable,
                 java.util.Enumeration"%>

<%@ page import="java.text.*"%>
<%@ page import="reger.core.Debug"%>
<%@ page import="java.util.HashMap"%>
<%@ page import="reger.nestednav.NestedNavItem" %>


<%
/*----------------------------------------------------*/
/*                  Page Config                       */
reger.pageFramework.PageProps pageProps = new reger.pageFramework.PageProps();
pageProps.siteSection=pageProps.ADMINSITE;
pageProps.title = "&nbsp;";
pageProps.isPasswordProtected = true;
pageProps.navButtonName = "adminhome";
pageProps.aclObjectName = "ADMINHOME";
pageProps.trafficType=reger.Vars.TRAFFICTYPEADMINHOMEPAGE;
pageProps.pathToAppRoot="../";
//pageProps.onloadJavascriptMethod="init();";
pageProps.helpText="This is the control center of your site.  All of the tools you need to manage your weblog are at your fingertips.<br><br>To start blogging, click on a log and you'll be taken to a form where you can add an entry.";
/*----------------------------------------------------*/
%>

<%@ include file="../globalheader.jsp" %>

<%

//Display page performance in milliseconds
//out.println("Top of page: " + reger.debugInfo.exececutionTimeOutput(executionTime.getElapsedMillis()));


/*----------------------------------------------------*/
/*                  Main Body                         */
        StringBuffer mb = new StringBuffer();
/*----------------------------------------------------*/


//Do friendinvitationid work
if (request.getParameter("friendinvitationid")!=null && reger.core.Util.isinteger(request.getParameter("friendinvitationid"))){
    if (request.getParameter("friendinvitationkey")!=null){
        reger.InvitationProcessor.process(userSession.getAccountuser(), Integer.parseInt(request.getParameter("friendinvitationid")), request.getParameter("friendinvitationkey"));
        userSession.getAccountuser().populate();
    }
}

//Toggle help
if (pageProps.action.equals("togglehelp")){
    userSession.getAccountuser().toggleHelp();
    response.sendRedirect("index.log");
    return;
}




//Display page performance in milliseconds
//out.println("Before special messages: " + reger.debugInfo.exececutionTimeOutput(executionTime.getElapsedMillis()));


//Special Messages Section Start
if (request.getParameter("msg")!=null) {
	if (request.getParameter("msg").equals("entryedited")) {
		//mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Your log entry has been saved!<br><a href=../entry-logid"+request.getParameter("logid")+"-eventid"+request.getParameter("eventid")+".log>View It</a> | <a href=entry.log?eventid="+request.getParameter("eventid")+"&logid="+request.getParameter("logid")+">Edit It</a>"));
	    StringBuffer afterPost = new StringBuffer();
	    afterPost.append("Post saved! ");
        afterPost.append("<div class=\"btn-group\">" + "\n");
        afterPost.append("<a class=\"btn btn-success\" href=\"entry.log?eventid="+request.getParameter("eventid")+"&action=edit\"><i class=\"icon-edit icon-white\"></i> Edit</a>" + "\n");
        afterPost.append("<a class=\"btn dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">" + "\n");
        afterPost.append("<span class=\"caret\"></span>" + "\n");
        afterPost.append("</a>" + "\n");
        afterPost.append("<ul class=\"dropdown-menu\">" + "\n");
        afterPost.append("<li><a href=\"../entry.log?eventid="+request.getParameter("eventid")+"\">View</a></li>" + "\n");
        afterPost.append("<li><a href=\"entry-move.log?eventid="+request.getParameter("eventid")+"\">Move</a></li>" + "\n");
        afterPost.append("<li><a href=\"entry-delete.log?eventid="+request.getParameter("eventid")+"\">Delete</a></li>" + "\n");
        afterPost.append("</ul>" + "\n");
        afterPost.append("</div>" + "\n");
	    mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, afterPost.toString()));
    } else if (request.getParameter("msg").equals("entryediteddone")) {
        StringBuffer afterPost = new StringBuffer();
	    afterPost.append("Post saved! ");
        afterPost.append("<div class=\"btn-group\">" + "\n");
        afterPost.append("<a class=\"btn btn-success\" href=\"entry.log?eventid="+request.getParameter("eventid")+"&action=edit\"><i class=\"icon-edit icon-white\"></i> Edit</a>" + "\n");
        afterPost.append("<a class=\"btn dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">" + "\n");
        afterPost.append("<span class=\"caret\"></span>" + "\n");
        afterPost.append("</a>" + "\n");
        afterPost.append("<ul class=\"dropdown-menu\">" + "\n");
        afterPost.append("<li><a href=\"../entry.log?eventid="+request.getParameter("eventid")+"\">View</a></li>" + "\n");
        afterPost.append("<li><a href=\"entry-move.log?eventid="+request.getParameter("eventid")+"\">Move</a></li>" + "\n");
        afterPost.append("<li><a href=\"entry-delete.log?eventid="+request.getParameter("eventid")+"\">Delete</a></li>" + "\n");
        afterPost.append("</ul>" + "\n");
        afterPost.append("</div>" + "\n");
        mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, afterPost.toString()));
	} else if (request.getParameter("msg").equals("newlog")) {
		mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Log(s) added. You can add entries by chosing a log below."));
	} else if (request.getParameter("msg").equals("eventdeleted")) {
		mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Event Deleted."));
	} else if (request.getParameter("msg").equals("namesupdated")) {
		mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Log names and messages updated."));
	} else if (request.getParameter("msg").equals("signupcomplete")) {
		mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Congratulations!  Signup is complete.  You can add entries to your weblog.  Note your site URLs.  Keep your email and password.  Enjoy!"));
	} else if (request.getParameter("msg").equals("passwordwasreset")) {
		mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Your password has successfully been reset.  Please store it in a safe place."));
	} else if (request.getParameter("msg").equals("logadded")) {
		mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "Your log has been created.  Add an entry to it below.  You can also change its name and customize other properties of it."));
	    userSession.getAccount().refresh();
	}
}


//ReturnUrl Link
if (request.getParameter("returnurl")!=null && !request.getParameter("returnurl").equals("")){
    Debug.debug(5, "", "/myhome/index.log<br>java.net.URLDecoder.decode(returnurl, \"UTF-8\")=" + java.net.URLDecoder.decode(request.getParameter("returnurl"), "UTF-8"));
    String theLink = java.net.URLDecoder.decode(request.getParameter("returnurl"), "UTF-8");
    mb.append(reger.InfoBox.get(reger.InfoBox.BOXTYPECOMPLETE, pageProps.pathToAppRoot, "You are logged-in.  We noticed that you were trying to go <a href='"+theLink+"'>here</a>. Please note that you still may not be able to access that resource, depending on your credentials.  Give it a shot."));
}



    mb.append("<div class=\"hero-unit\">"+"\n");
    mb.append("    <h1>dashboard</h1>"+"\n");
    mb.append("    <p>manage your blog</p>"+"\n");
    mb.append("</div>"+"\n");




mb.append("<div class=\"row\">");
mb.append("<div class=\"col-md-4\">");
mb.append("<h1>Logs and Pages</h1>");
reger.nestednav.NestedNavDisplayLayoutManager navMgrDisplay = new reger.nestednav.NestedNavDisplayLayoutManager();
mb.append(navMgrDisplay.outputNavBarHtml(userSession.getAccount().getNestedNavCollection(), userSession, request));
mb.append("</div>");




mb.append("<div class=\"col-md-4\">");
    mb.append("<h1>Recent Posts</h1>");

    mb.append("<table class=\"table table-striped\">");
    //@todo Add paging to /myhome/entries.log list
    //-----------------------------------
    //-----------------------------------
    String[][] rstLastentries= Db.RunSQL("SELECT event.eventid, event.title, event.date FROM event, megalog WHERE event.logid=megalog.logid AND event.accountid='"+ userSession.getAccount().getAccountid() +"' AND "+userSession.getAccountuser().LogsUserCanAdministerQueryend(userSession.getAccount().getAccountid())+" AND event.istemporary='0' ORDER BY event.date DESC LIMIT 0,25");
    //-----------------------------------
    //-----------------------------------
    if (rstLastentries!=null && rstLastentries.length>0){
        for(int i=0; i<rstLastentries.length; i++){
            mb.append("<tr>");
            //@todo Check /myhome/entries.log for timezone
            //@todo Add /myhome/entries.log Agotext


            mb.append("<td><strong>"+reger.core.Util.truncateString(reger.core.Util.cleanForHtml(rstLastentries[i][1]), 100)+"</strong><br/><h6>"+reger.core.TimeUtils.agoText(reger.core.TimeUtils.dbstringtocalendar(rstLastentries[i][2]))+"</h6></td>");
            mb.append("<td style=\"width:100px;\" nowrap>");

            mb.append("<div class=\"btn-group\">" + "\n");
            mb.append("<a class=\"btn btn-success\" href=\"entry.log?eventid="+rstLastentries[i][0]+"&action=edit\"><i class=\"icon-pencil icon-white\"></i> Edit</a>" + "\n");
            mb.append("<a class=\"btn dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">" + "\n");
            mb.append("<span class=\"caret\"></span>" + "\n");
            mb.append("</a>" + "\n");
            mb.append("<ul class=\"dropdown-menu\">" + "\n");
            mb.append("<li><a href=\"../entry.log?eventid="+rstLastentries[i][0]+"\">View</a></li>" + "\n");
            mb.append("<li><a href=\"entry-move.log?eventid="+rstLastentries[i][0]+"\">Move</a></li>" + "\n");
            mb.append("<li><a href=\"entry-delete.log?eventid="+rstLastentries[i][0]+"\">Delete</a></li>" + "\n");
            mb.append("</ul>" + "\n");
            mb.append("</div>" + "\n");

            mb.append("</td>");

            mb.append("</tr>");
        }
    }


    mb.append("</table>");
    mb.append("<!-- End last edited -->");


 mb.append("</div>");




mb.append("<div class=\"col-md-4\">");
    mb.append("<h1>Drafts</h1>");

    //Draft entries start
    mb.append("<!-- Start Draft List -->");
    mb.append("<table class=\"table table-striped\">");

    //-----------------------------------
    //-----------------------------------
    String[][] rstDrafts= reger.core.db.Db.RunSQL("SELECT eventid, event.eventtypeid, title, date, name, accountuser.friendlyname FROM event, megalog, accountuser WHERE event.accountuserid=accountuser.accountuserid AND event.accountid='"+ userSession.getAccount().getAccountid() +"' AND event.isdraft='1' AND megalog.logid=event.logid AND "+userSession.getAccountuser().LogsUserCanAdministerQueryend(userSession.getAccount().getAccountid())+" ORDER BY date DESC");
    //-----------------------------------
    //-----------------------------------
    if (rstDrafts!=null && rstDrafts.length>0){
        for(int i=0; i<rstDrafts.length; i++){
            mb.append("<tr>");

            mb.append("<td><strong>"+reger.core.Util.truncateString(reger.core.Util.cleanForHtml(rstDrafts[i][2]), 100)+"</strong><br/><h6>"+reger.core.TimeUtils.agoText(reger.core.TimeUtils.dbstringtocalendar(rstDrafts[i][3]))+"</h6></td>");

            mb.append("<td style=\"width:150px;\" nowrap>");
            mb.append("<div class=\"btn-group\">" + "\n");
            mb.append("<a class=\"btn btn-success\" href=\"entry.log?eventid="+rstDrafts[i][0]+"&action=edit\"><i class=\"icon-pencil icon-white\"></i> Edit</a>" + "\n");
            mb.append("<a class=\"btn dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">" + "\n");
            mb.append("<span class=\"caret\"></span>" + "\n");
            mb.append("</a>" + "\n");
            mb.append("<ul class=\"dropdown-menu\">" + "\n");
            mb.append("<li><a href=\"../entry.log?eventid="+rstDrafts[i][0]+"\">View</a></li>" + "\n");
            mb.append("<li><a href=\"entry-move.log?eventid="+rstDrafts[i][0]+"\">Move</a></li>" + "\n");
            mb.append("<li><a href=\"entry-delete.log?eventid="+rstDrafts[i][0]+"\">Delete</a></li>" + "\n");
            mb.append("</ul>" + "\n");
            mb.append("</div>" + "\n");
            mb.append("</td>");

            mb.append("</tr>");

        }
    } else {
        mb.append("<tr><td bgcolor=#ffffff valign=top colspan=5>");
        mb.append("<font face=arial size=-2>None</font>");
        mb.append("</td></tr>");
    }
    mb.append("</table>");
    mb.append("<!-- End Draft List -->");
    //Draft entries end


    //Start Alerts... there are many many sections to alerts
    mb.append("<!-- Start Alerts -->");
    boolean haveAlerts=false;
    mb.append("<br/><br/>");
    mb.append("<h1>Alerts</h1>");
    mb.append("<hr>");

    mb.append("<table width=100% cellpadding=3 cellspacing=1 border=0>");
    //Alerts... Messages
    int totalmessages=0;
    //-----------------------------------
    //-----------------------------------
    String[][] rstMessageCount= Db.RunSQL("SELECT count(*) FROM message, event, megalog WHERE message.isapproved='0' AND message.eventid=event.eventid AND event.accountid='"+userSession.getAccount().getAccountid()+"' AND event.logid=megalog.logid AND "+userSession.getAccountuser().LogsUserCanAdministerQueryend(userSession.getAccount().getAccountid())+" ORDER BY message.messagedate DESC");
    //-----------------------------------
    //-----------------------------------
    if (rstMessageCount!=null && rstMessageCount.length>0){
        totalmessages=Integer.parseInt(rstMessageCount[0][0]);
        if (totalmessages>0){
            haveAlerts=true;
            mb.append("<tr>");
            mb.append("<td valign=middle>");
            mb.append("<a href='traffic-messages.log'>");
            mb.append("<i class=\"icon-exclamation-sign\"></i> ");
            mb.append(totalmessages);
            mb.append(" ");
            mb.append("Unapproved Message");
            if (totalmessages>1){
                mb.append("s");
            }
            mb.append("</a>");
            mb.append("</td>");
            mb.append("</tr>");
        }
    }

    //Alerts... Trackbacks
    if (userSession.getAccount().getIstrackbackon() && userSession.getPl().getIstrackbackenabled()){

        int totaltrackback=0;
        //-----------------------------------
        //-----------------------------------
        String[][] rstTbC= Db.RunSQL("SELECT count(*) FROM trackback, event WHERE trackback.isapproved='0' AND trackback.eventid=event.eventid AND event.accountid='"+userSession.getAccount().getAccountid()+"' AND "+userSession.getAccountuser().LogsUserCanViewQueryendNoMegalog(userSession.getAccount().getAccountid())+" AND trackback.isoutbound='0' ORDER BY trackback.datetime DESC");
        //-----------------------------------
        //-----------------------------------
        if (rstTbC!=null && rstTbC.length>0){
            totaltrackback=Integer.parseInt(rstTbC[0][0]);
            if (totaltrackback>0){
                haveAlerts=true;
                mb.append("<tr>");
                mb.append("<td valign=middle>");
                mb.append("<a href='traffic-trackback.log'>");
                mb.append("<i class=\"icon-exclamation-sign\"></i> ");
                mb.append(totaltrackback);
                mb.append(" ");
                mb.append("Unapproved Trackback");
                if (totaltrackback>1){
                    mb.append("s");
                }
                mb.append("</a>");
                mb.append("</td>");
                mb.append("</tr>");
            }
        }
    }

    //Alerts... Inbox
    int totalinbox = 0;
    //-----------------------------------
    //-----------------------------------
    String[][] rstInboxCount= Db.RunSQL("SELECT count(*) FROM friendmessage, friendmessagerecipient WHERE friendmessagerecipient.isread='0' AND friendmessagerecipient.accountuserid='"+userSession.getAccountuser().getAccountuserid()+"' AND friendmessagerecipient.friendmessageid=friendmessage.friendmessageid");
    //-----------------------------------
    //-----------------------------------
    if (rstInboxCount!=null && rstInboxCount.length>0){
        totalinbox = Integer.parseInt(rstInboxCount[0][0]);
        if (totalinbox>0){
            haveAlerts=true;
            mb.append("<tr>");
            mb.append("<a href='people-inbox.log'>");
            mb.append("<i class=\"icon-exclamation-sign\"></i> ");
            mb.append(totalinbox);
            mb.append(" ");
            mb.append("New Inbox Message");
            if (totalinbox>1){
                mb.append("s");
            }
            mb.append("</a>");
            mb.append("</td>");
            mb.append("</tr>");
        }
    }


    //Alerts... Require Approval
    int totalrequireapproval = 0;
    if (userSession.getAccountuser().userCanDoAcl("APPROVEENTRIES", userSession.getAccount().getAccountid())){
        //-----------------------------------
        //-----------------------------------
        String[][] rstApprovals= reger.core.db.Db.RunSQL("SELECT count(*) FROM event, megalog, accountuser WHERE event.accountuserid=accountuser.accountuserid AND event.accountid='"+ userSession.getAccount().getAccountid() +"' AND event.isapproved='0' AND event.istemporary='0' AND megalog.logid=event.logid AND "+userSession.getAccountuser().LogsUserCanAdministerQueryend(userSession.getAccount().getAccountid())+"");
        //-----------------------------------
        //-----------------------------------
        if (rstApprovals!=null && rstApprovals.length>0){
            totalrequireapproval = Integer.parseInt(rstApprovals[0][0]);
            if (totalrequireapproval>0){
                haveAlerts=true;
                mb.append("<tr>");
                mb.append("<a href='entries-requireapproval.log'>");
                mb.append("<i class=\"icon-exclamation-sign\"></i> ");
                mb.append(totalrequireapproval);
                mb.append(" ");
                if (totalrequireapproval>1){
                    mb.append("Entries Require Approval");
                } else {
                    mb.append("Entry Requires Approval");
                }
                mb.append("</a>");
                mb.append("</td>");
                mb.append("</tr>");
            }
        }
    }


    //Alerts... Declined by Moderator
    int totaldeclines = 0;
    //-----------------------------------
    //-----------------------------------
    String[][] rstDeclines= reger.core.db.Db.RunSQL("SELECT count(*) FROM event, megalog, accountuser WHERE event.accountuserid=accountuser.accountuserid AND event.accountid='"+ userSession.getAccount().getAccountid() +"' AND event.isdraft='0' AND event.istemporary='0' AND event.ismoderatorapproved='0' AND event.requiresmoderatorapproval='0' AND megalog.logid=event.logid AND "+userSession.getAccountuser().LogsUserCanAdministerQueryend(userSession.getAccount().getAccountid())+"");
    //-----------------------------------
    //-----------------------------------
    if (rstDeclines!=null && rstDeclines.length>0){
        totaldeclines = Integer.parseInt(rstDeclines[0][0]);
        if (totaldeclines>0){
            haveAlerts=true;
            mb.append("<tr>");
            mb.append("<a href='entries-moderatordeclined.log'>");
            mb.append("<i class=\"icon-exclamation-sign\"></i> ");
            mb.append(totaldeclines);
            mb.append(" ");
            mb.append("Declined by Moderator");
            mb.append("</a>");
            mb.append("</td>");
            mb.append("</tr>");
        }
    }


    //Alerts... Waiting for Moderator
    int totalwaitingmoderator = 0;
    if (userSession.getPl().getDoallpostsneedtobeapproved() || userSession.getPl().getDoesflaggedcontentneedtobeapproved()){
        //-----------------------------------
        //-----------------------------------
        String[][] rstApprovals= reger.core.db.Db.RunSQL("SELECT count(*) FROM event, megalog, accountuser WHERE event.accountuserid=accountuser.accountuserid AND event.accountid='"+ userSession.getAccount().getAccountid() +"' AND event.istemporary='0' AND event.isdraft='0' AND event.ismoderatorapproved='0' AND event.requiresmoderatorapproval='1' AND megalog.logid=event.logid AND "+userSession.getAccountuser().LogsUserCanAdministerQueryend(userSession.getAccount().getAccountid())+"");
        //-----------------------------------
        //-----------------------------------
        if (rstApprovals!=null && rstApprovals.length>0){
            totalwaitingmoderator = Integer.parseInt(rstApprovals[0][0]);
            if (totalwaitingmoderator>0){
                haveAlerts=true;
                mb.append("<tr>");
                mb.append("<a href='entries-awaitingmoderator.log'>");
                mb.append("<i class=\"icon-exclamation-sign\"></i> ");
                mb.append(totalwaitingmoderator);
                mb.append(" ");
                mb.append("Waiting for Moderator");
                mb.append("</a>");
                mb.append("</td>");
                mb.append("</tr>");
            }
        }
    }


    //Alerts... Make sure this account has enough free space
    if (userSession.getAccount().getMaxspaceinbytes()>0 && userSession.getAccount().getSpaceused()>userSession.getAccount().getMaxspaceinbytes()){
        haveAlerts=true;
        mb.append("<tr>");
        mb.append("<a href='accountstatus.log'>");
        mb.append("<i class=\"icon-exclamation-sign\"></i> ");
        mb.append("Your account has exceeded its storage limit.  This means that you will not be able to add anything (text or images) to your site.");
        mb.append("</a>");
        mb.append("</td>");
        mb.append("</tr>");
    } else if (userSession.getAccount().getMaxspaceinbytes()>0 && userSession.getAccount().getSpaceused()>(userSession.getAccount().getMaxspaceinbytes()*.9)){
        haveAlerts=true;
        mb.append("<tr>");
        mb.append("<a href='accountstatus.log'>");
        mb.append("<i class=\"icon-exclamation-sign\"></i> ");
        mb.append("Your account is within 10% of its storage limit.  This means that soon you will not be able to add anything (text or images) to your site.");
        mb.append("</a>");
        mb.append("</td>");
        mb.append("</tr>");
    }

    //Alerts... Make sure this account has enough free hits to be serving pages
    if (userSession.getAccount().getMaxbandwidth()>0 && userSession.getAccount().getBandwidthused()>userSession.getAccount().getMaxbandwidth()){
        haveAlerts=true;
        mb.append("<tr>");
        mb.append("<a href='accountstatus.log'>");
        mb.append("<i class=\"icon-exclamation-sign\"></i> ");
        mb.append("Your account has exceeded its bandwidth limit.  This means that for the remainder of this month visitors will not be able to see your site.");
        mb.append("</a>");
        mb.append("</td>");
        mb.append("</tr>");
    } else if (userSession.getAccount().getMaxbandwidth()>0 && userSession.getAccount().getBandwidthused()>(userSession.getAccount().getMaxbandwidth()*.9)){
        haveAlerts=true;
        mb.append("<tr>");
        mb.append("<a href='accountstatus.log'>");
        mb.append("<i class=\"icon-exclamation-sign\"></i> ");
        mb.append("Your account is within 10% of its bandwidth limit.  If the bandwidth limit is exceeded then for the remainder of this month visitors will not be able to see your site.");
        mb.append("</a>");
        mb.append("</td>");
        mb.append("</tr>");
    }


    //No Alerts
    if (!haveAlerts){
        mb.append("<tr>");
        mb.append("<td valign=middle>");
        mb.append("None.");
        mb.append("</td>");
        mb.append("</tr>");
    }

    mb.append("</table>");
    mb.append("<!-- End Alerts -->");





    //Other Sites Start
    mb.append("<!-- Other Site Start -->");
    mb.append("<br/><br/>");
    mb.append("<h1>Sites</h1>");
    mb.append("<hr>");

    HashMap accts = userSession.getAccountuser().getAccountsUserHasAccessTo();
    if (accts!=null){

        java.util.Iterator keyValuePairs = accts.entrySet().iterator();
        for (int i = 0; i < accts.size(); i++){
            java.util.Map.Entry mapentry = (java.util.Map.Entry) keyValuePairs.next();
            Integer accountid = (Integer)mapentry.getKey();
            String sitename = (String)mapentry.getValue();


            reger.Account acct = userSession.getAccount();
            if (accountid.intValue()!=userSession.getAccount().getAccountid()){
                Debug.debug(5, "", "/myhome/index.log - About to call on cache for accountid=" + accountid.intValue());
                acct = reger.cache.AccountCache.get(accountid.intValue());
                Debug.debug(5, "", "/myhome/index.log - Done calling on cache for accountid=" + accountid.intValue());
            }

            mb.append("<a href='"+ acct.getSiteRootUrl(userSession) + "/'>");
            mb.append("<b>");
            mb.append(acct.getHomepagetitle());
            mb.append("</b>");
            mb.append("</a>");
            mb.append("<br/>");

        }

    }
    mb.append("<a href='sites.log'>");
    mb.append("<b>Manage Sites</b>");
    mb.append("</a>");



    mb.append("<!-- Other Site End -->");
    //Other Sites End





    //Account Usage start
    mb.append("<!-- Start Account Usage -->");
    mb.append("<br/><br/>");
    mb.append("<h1>Account Usage</h1>");
    mb.append("<hr>");

    mb.append("<table width=100% cellpadding=0 cellspacing=1 border=0>");
    mb.append("<tr>");
    mb.append("<td valign=top align=left >");
    mb.append("Bandwidth Usage This Month");
    mb.append("</td>");

    mb.append("</tr>");
    mb.append("<tr>");


    NumberFormat formatter = new DecimalFormat("####.##");

    mb.append("<td valign=top align=left>");
    if (userSession.getAccount().getMaxbandwidth()>0){
        mb.append(reger.core.Util.getHtmlBarChart(userSession.getAccount().getBandwidthused(), userSession.getAccount().getMaxbandwidth()));
        mb.append(formatter.format((double)userSession.getAccount().getBandwidthused()/(double)1000000000)+ "Gb / "+((double)userSession.getAccount().getMaxbandwidth()/(double)1000000000)+"Gb Used<br>(" + (100-(long)(((double)userSession.getAccount().getBandwidthused()/(double)userSession.getAccount().getMaxbandwidth())*(double)100)) + "% Remaining)");
    } else {
        mb.append(formatter.format((double)userSession.getAccount().getBandwidthused()/(double)1000000000)+ "Gb");
    }
    mb.append("</td>");


    mb.append("</tr>");
    mb.append("<tr>");

    mb.append("<td valign=top align=left>");
    mb.append("Storage Space");
    mb.append("</td>");

    mb.append("</tr>");
    mb.append("<tr>");

    mb.append("<td valign=top align=left  bgcolor=#ffffff>");
    if (userSession.getAccount().getMaxspaceinbytes()>0){
        mb.append(reger.core.Util.getHtmlBarChart(userSession.getAccount().getSpaceused(), userSession.getAccount().getMaxspaceinbytes()));
        mb.append(formatter.format((double)userSession.getAccount().getSpaceused()/(double)1000000)+ "Mb / "+((double)userSession.getAccount().getMaxspaceinbytes()/(double)1000000)+"Mb Used<br>(" + (100-(int)(((double)userSession.getAccount().getSpaceused()/(double)userSession.getAccount().getMaxspaceinbytes())*100)) + "% Free)");
    } else {
        mb.append(formatter.format((double)userSession.getAccount().getSpaceused()/(double)1000000)+ "Mb");
    }
    mb.append("</td>");


    mb.append("</tr>");

    mb.append("</table>");


    mb.append("<!-- End Account Usage -->");
    //Account Usage end



mb.append("</div>");




mb.append("</div>");





mb.append("<br>");






%>

<%
/*----------------------------------------------------*/
/*                  Side Column                       */
        StringBuffer sc = new StringBuffer();
/*----------------------------------------------------*/
//sc.append("This is a ");
//sc.append("side column section.");



//sc.append("<!-- Start account stuff -->");
////sc.append("<img src='../images/clear.gif' width='10' height='90' alt='' border='0'>");
//sc.append(reger.ui.BubbleBox.start("", pageProps.pathToAppRoot));
//sc.append("<table width=100% cellpadding=3 cellspacing=1 border=0>");
////sc.append("<tr><td bgcolor=#cccccc colspan=2><font face=arial size=+1 color=#000000>Your Account</font></td></tr>");
//sc.append("<tr>");
//sc.append("<td bgcolor='#ffffff' align=left valign=top colspan=4>");
//if (userSession.getAccount().isPro()) {
//    sc.append("<center>");
//    sc.append("<a href='accountstatus.log'>");
//    sc.append("<img src='images/pro-yel.gif' alt='This is a Pro account.' border=0>");
//    mb.append("</a>");
//    mb.append("<br>");
//    mb.append("<a href='accountstatus.log'>");
//    mb.append("<font face=arial size=-2><strong>Account Status</strong></font>");
//    mb.append("</a>");
//    mb.append("</center>");
//} else {
//    mb.append("<center><img src='images/free-yel.gif' alt='This is a Free account.' border=0>");
//    mb.append("<br>");
//    mb.append("<font face=arial size=-2>You're certainly welcome to use the site for free, but you're missing out on all the great Pro features.  And upgrading removes all banner ads from your site.</font>");
//    mb.append("<br>");
//    mb.append("<a href='accountstatus.log'>");
//    mb.append("<font face=arial size=-2><strong>See what you're missing.</strong></font>");
//    mb.append("</a>");
//    mb.append("</center>");
//}
//mb.append("</td>");
//mb.append("</tr>");
//
//mb.append("</table>");
//mb.append(reger.ui.BubbleBox.end(pageProps.pathToAppRoot));
//mb.append("<!-- End account stuff -->");









//mb.append("<!-- Start URL's -->");
//mb.append("<img src='../images/clear.gif' width='10' height='10' alt='' border='0'>");
//mb.append(reger.ui.BubbleBox.start("Your URLs", pageProps.pathToAppRoot));
//mb.append("<table width=100% cellpadding=3 cellspacing=1 border=0>");
////mb.append("<tr><td bgcolor=#cccccc><font face=arial size=+1 color=#000000><strong>Your URLs</strong></font></td></tr>");
//mb.append("<tr>");
//mb.append("<td>");
//mb.append("<font face=arial size=-1 color=#000000><b>Make log entries:");
//mb.append("</b></font><br>");
//mb.append("<font face=arial size=-2 color=#000000><a href='"+userSession.getAccount().getSiteRootUrl(userSession) +"/myhome/'>"+userSession.getAccount().getSiteRootUrl(userSession) +"/myhome/</a></font><br>");
//mb.append("</td>");
//mb.append("</tr>");
//
//mb.append("<tr>");
//mb.append("<td>");
//mb.append("<font face=arial size=-1 color=#000000><b>Your log entries are published on your public site:</b></font><br><font face=arial size=-2 color=#000000><a href='"+userSession.getAccount().getSiteRootUrl(userSession) +"/' target=new>"+ userSession.getAccount().getSiteRootUrl(userSession) +"/</a></font><br>");
//mb.append("</td></tr>");
//
//
//mb.append("</table>");
//mb.append(reger.ui.BubbleBox.end(pageProps.pathToAppRoot));
//mb.append("<!-- End URL's -->");










////Search Site Start
//mb.append("<!-- Search Site Start -->");
//mb.append("<img src='../images/clear.gif' width='10' height='10' alt='' border='0'>");
//mb.append(reger.ui.BubbleBox.start("Search Your Site", pageProps.pathToAppRoot));
////mb.append("<form action=entries.log method=post>");
////mb.append("<input type=hidden name=action value=search>");
////mb.append("<br>");
////mb.append("<input type=text name=searchterms value=\"\">");
////mb.append("<br>");
////mb.append("<input type=submit value='Search'>");
////mb.append("<br>");
////mb.append("<font face=arial size=-2>");
////mb.append("<a href='entries.log'>");
////mb.append("Advanced Search / Search Other Sites");
////mb.append("</a>");
////mb.append("</font>");
////mb.append("</form>");
//mb.append("<a href='entries-simplesearch.log'>");
//mb.append("<font face=arial size=-2>");
//mb.append("Click Here");
//mb.append("</font>");
//mb.append("</a>");
//mb.append(reger.ui.BubbleBox.end(pageProps.pathToAppRoot));
//mb.append("<!-- Search Site End -->");
////Search Site End









////Version Start
//mb.append("<!-- Version Start -->");
//mb.append("<img src='../images/clear.gif' width='10' height='10' alt='' border='0'>");
//mb.append(reger.ui.BubbleBox.start("You're Using", pageProps.pathToAppRoot));
////mb.append("<center>");
////mb.append("<a href='versions.log?versionid="+reger.versioninfo.VersionInfo.getCURRENTVERSIONID()+"'>");
//mb.append("<font face=arial size=+2 color=#cccccc>");
//mb.append("<b>");
//mb.append("Version " + reger.versioninfo.VersionInfo.getCURRENTVERSIONNAME());
//mb.append("</b>");
//mb.append("</font>");
////mb.append("</a>");
//mb.append("<br>");
//mb.append("<a href='versions.log'>");
//mb.append("<font face=arial size=-2>");
//mb.append("List All Versions");
//mb.append("</font>");
//mb.append("</a>");
////mb.append("</center>");
//mb.append(reger.ui.BubbleBox.end(pageProps.pathToAppRoot));
//mb.append("<!-- Version End -->");
////Version End



mb.append("<br>");



%>


<%@ include file="../globalfooter.jsp" %>
