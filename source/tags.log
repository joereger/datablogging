<%@ page import="reger.AccountCounts" %>
<%@ page import="java.util.HashMap" %>
<%@ page import="java.util.Iterator" %>
<%@ page import="java.util.TreeMap"%>
<%@ page import="java.math.BigDecimal"%>
<%
    /*----------------------------------------------------*/
/*                  Page Config                       */
    reger.pageFramework.PageProps pageProps = new reger.pageFramework.PageProps();
    pageProps.siteSection = reger.pageFramework.PageProps.PUBLICSITE;
    pageProps.isPasswordProtected = false;
    pageProps.isLogidRequired = false;
    pageProps.isEventidRequired = false;
    pageProps.trafficType = reger.Vars.TRAFFICTYPEPUBLICMISC;
    pageProps.pathToAppRoot = "";
/*----------------------------------------------------*/
%>

<%@ include file="globalheader.jsp" %>

<%
    /*----------------------------------------------------*/
/*                  Main Body                         */
    StringBuffer mb = new StringBuffer();
/*----------------------------------------------------*/

    mb.append(reger.SideColumn.sideColTableStart("Smart Tags"));
    mb.append(reger.SideColumn.sideColHeaderRow("Smart Tags"));

    StringBuffer qs = new StringBuffer();
    qs.append("<table cellpadding=0 width=100% cellspacing=0 border=0>");
    qs.append("<tr>");
    qs.append("<td>");
    try {
        AccountCounts acctCounts = reger.cache.AccountCountCache.get(userSession.getAccount(), userSession.getAccountuser());
        HashMap smartTagMap = acctCounts.getSmartTagMap();
        if (smartTagMap != null && smartTagMap.size() > 0) {
            Iterator iter = smartTagMap.keySet().iterator();
            String tagId;
            HashMap tempTagMap = null;
            HashMap tagMap = new HashMap();
            TreeMap tempMap = new TreeMap();
            String tag;
            int size;
            int minSize = 8;
            int maxSize = 35;
            while (iter.hasNext()) {
                tagId = (String) iter.next();
                tagId = tagId.substring(0, tagId.indexOf("_"));
                size = 0;
                if (smartTagMap.containsKey(tagId + "_img")) {
                    tempTagMap = (HashMap) smartTagMap.get(tagId+"_img");
                    size += tempTagMap.size();
                }
                if (smartTagMap.containsKey(tagId + "_event")) {
                    tempTagMap = (HashMap) smartTagMap.get(tagId+"_event");
                    size += tempTagMap.size();
                }
                if (tempTagMap != null && tempTagMap.size() > 0) {
                    tag = (String)(tempTagMap.values().iterator().next());
                    tempTagMap = new HashMap();
                    tempTagMap.put(tag, new Integer(size));
                    tagMap.put(tagId, tempTagMap);
                    tempMap.put(new Integer(size), tagId);
                }
            }

            if ( (tempMap != null) && (tempMap.size() > 0) ) {
                int maxTagSize = ((Integer)tempMap.lastKey()).intValue();
                iter = tagMap.keySet().iterator();
                while (iter.hasNext()) {
                    tagId = (String) iter.next();
                    tempTagMap = (HashMap) tagMap.get(tagId);
                    tag = (String) tempTagMap.keySet().iterator().next();
                    size = ((Integer)tempTagMap.get(tag)).intValue();
                    int fontSize = new BigDecimal(size).divide(new BigDecimal(maxTagSize)).multiply(new BigDecimal(maxSize)).intValue();
                    if ( fontSize < minSize) {
                        fontSize += minSize;
                    } else if (fontSize > maxSize) {
                        fontSize -= maxSize;
                    }
                    //double fontSize = (new Double(size).doubleValue()/new Double(maxSize).doubleValue())*35;
                    qs.append("<a href=tag-detail.log?tagid=" + tagId + "&tag=" + tag + " style=font-size:" + fontSize + "px; class=SmartTag>" + tag + "</a>");
                    qs.append(" ");
                }
            }
        } else {
            qs.append("No Smart Tags Found.");
        }
    } catch (Exception e) {
        Debug.errorsave(e, "Exception occurred in tags.log");
    }

    qs.append("</td>");
    qs.append("</tr>");
    qs.append("</table>");

   mb.append(reger.SideColumn.sideColContentRow(qs.toString()));
   mb.append(reger.SideColumn.sideColTableEnd("Smart Tags"));
%>

<%
    /*----------------------------------------------------*/
/*                  Side Column                       */
    StringBuffer sc = new StringBuffer();
/*----------------------------------------------------*/


%>

<%@ include file="globalfooter.jsp" %>