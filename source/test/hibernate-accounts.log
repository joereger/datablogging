<%@ page import="reger.SideColumn,
                 java.util.*,
                 org.hibernate.*,
                 reger.hibernate.HibernateUtil,
                 org.hibernate.Transaction"%>
<%@ page import="org.hibernate.cfg.reveng.DelegatingReverseEngineeringStrategy"%>
<%@ page import="reger.dao.hibernate.*"%>
<%@ page import="reger.InfoBox"%>
<%@ page import="reger.hibernate.HibValEx"%>


<%
/*----------------------------------------------------*/
/*                  Page Config                       */
reger.pageFramework.PageProps pageProps = new reger.pageFramework.PageProps();
pageProps.siteSection=pageProps.PUBLICSITE;
pageProps.isPasswordProtected = false;
pageProps.trafficType=reger.Vars.TRAFFICTYPEPUBLICHOMEPAGE;
pageProps.pathToAppRoot="";
/*----------------------------------------------------*/
%>

<%@ include file="../globalheader.jsp" %>

<%
/*----------------------------------------------------*/
/*                  Main Body                         */
            StringBuffer mb = new StringBuffer();
/*----------------------------------------------------*/

if (request.getParameter("action")==null){
    mb.append(InfoBox.get(InfoBox.BOXTYPEINFO, "../", "Enjoy the show."));
}

//select count(*) from traffic where accountid in (select accountid from account where isactiveaccount='0');

//select * from account where accountid NOT IN (4891, 2474, 3315, 2350, 3381, 84, 3119, 2396, 8063, 4914, 1, 4791, 4253, 7075, 6081, 7376, 2420, 49, 51, 2333, 322, 201, 2385, 3336, 5630, 410, 4911, 2489, 5771, 2982, 2621, 5001, 5005, 4908, 55, 50, 52, 5713, 5643, 3119, 5012, 3051, 2765, 3397, 4046, 2535. 4964, 4681, 3161, 2282, 3386, 1703, 4971, 3903, 5206, 2295, 928, 2628, 4933);
    
//if (request.getParameter("action")!=null && request.getParameter("action").equals("delete")){
//    if (request.getParameter("accountid")!=null && reger.core.Util.isinteger(request.getParameter("accountid"))){
//        int accountid = Integer.parseInt(request.getParameter("accountid"));
//        Account account = (Account)HibernateUtil.load(Account.class, accountid);
//        HibernateUtil.delete(account);
//        mb.append(InfoBox.get(InfoBox.BOXTYPECOMPLETE, "../", "Accountid="+accountid+" deleted."));
//    }
//}




mb.append("<br><br><a href='hibernate-accounts.log'>Refresh</a><br>");


List events = HibernateUtil.getSession().createQuery("from Account").setMaxResults(20).list();
for (int i = 0; i < events.size(); i++) {
    Account account = (Account) events.get(i);
    mb.append("<font face=arial size=-1>");
    mb.append("<br><br>"+account.getAccounturl()+" event.getEventid(): " + account.getAccountid());
    mb.append(" <a href='hibernate-accounts.log?action=delete&accountid="+account.getAccountid()+"'>Delete</a>");
    mb.append("</font>");
}


mb.append("<br><br>");






mb.append("<br><br><br><br><br>");

%>

<%
/*----------------------------------------------------*/
/*                  Side Column                       */
            StringBuffer sc = new StringBuffer();
/*----------------------------------------------------*/

%>

<%@ include file="../globalfooter.jsp" %>

