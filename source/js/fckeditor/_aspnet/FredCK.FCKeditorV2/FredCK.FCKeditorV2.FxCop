<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.3" Name="FCKeditor V2">
 <ProjectOptions>
  <SharedProject>False</SharedProject>
  <Stylesheet Apply="False">c:\program files\microsoft fxcop 1.21\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="False" />
  <PermitAnalysis>True</PermitAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>100</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>10</RuleExceptionsThreshold>
  <Spelling Locale="en-us" />
 </ProjectOptions>
 <Targets>
  <Target Name="bin\Debug\FredCK.FCKeditorV2.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\ComRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.3" LastAnalysis="2004-05-27 17:07:20Z">
  <Namespaces>
   <Namespace Name="FredCK.FCKeditorV2">
    <Messages>
     <Message ID="Keditor" Status="Excluded" Created="2004-01-14 00:37:50Z">
      <Rule TypeName="NamespaceNamesShouldBeSpelledCorrectly" />
      <Issues>
       <Issue Certainty="50" Level="CriticalWarning">
        <Resolution>
         <Data>
          <Items>
           <Item>FredCK.FCKeditorV2</Item>
           <Item>Keditor</Item>
          </Items>
         </Data>
        </Resolution>
       </Issue>
      </Issues>
      <Notes>
       <User Name="fredck">
        <Note ID="3" />
       </User>
      </Notes>
     </Message>
    </Messages>
   </Namespace>
  </Namespaces>
  <Targets>
   <Target Name="bin\Debug\FredCK.FCKeditorV2.dll">
    <Messages>
     <Message Status="Active" Created="2004-05-19 14:38:32Z">
      <Rule TypeName="AssembliesHavePermissionRequests" />
      <Issues>
       <Issue Certainty="99" Level="CriticalError">
        <Resolution>
         <Data>
          <Items>
           <Item>FredCK.FCKeditorV2</Item>
          </Items>
         </Data>
        </Resolution>
       </Issue>
      </Issues>
     </Message>
    </Messages>
    <Modules>
     <Module Name="fredck.fckeditorv2.dll">
      <Namespaces>
       <Namespace Name="FredCK.FCKeditorV2">
        <Classes>
         <Class Name="Editor">
          <Methods>
           <Method Name="Render(System.Web.UI.HtmlTextWriter):System.Void">
            <Messages>
             <Message Status="Active" Created="2004-05-19 14:48:27Z">
              <Rule TypeName="VirtualMethodsAndOverridesRequireSameLinkDemands" />
              <Issues>
               <Issue Certainty="33" Level="CriticalError">
                <SourceCode Path="D:\Work\FCKEditor\www\FCKeditor.V2\_aspnet\FredCK.FCKeditorV2" File="Editor.cs" Line="102" />
                <Resolution>
                 <Data>
                  <Items>
                   <Item>Render</Item>
                   <Item>Render</Item>
                   <Item>Control</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
           <Method Name="RaisePostDataChangedEvent():System.Void">
            <Messages>
             <Message Status="Active" Created="2004-05-19 14:48:27Z">
              <Rule TypeName="EventsShouldBeUsed" />
              <Issues>
               <Issue Certainty="75" Level="Warning">
                <SourceCode Path="D:\Work\FCKEditor\www\FCKeditor.V2\_aspnet\FredCK.FCKeditorV2" File="Editor.cs" Line="141" />
                <Resolution>
                 <Data>
                  <Items>
                   <Item>RaisePostDataChangedEvent</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
             </Message>
            </Messages>
           </Method>
          </Methods>
         </Class>
         <Class Name="FileBrowserConnector">
          <Methods>
           <Method Name="CreateFolder(System.Xml.XmlNode,System.String,System.String):System.Void">
            <Messages>
             <Message Status="Excluded" Created="2004-05-27 17:07:20Z">
              <Rule TypeName="ExceptionAndSystemExceptionTypesAreNotCaught" />
              <Issues>
               <Issue Certainty="95" Level="CriticalError">
                <SourceCode Path="D:\Work\FCKEditor\www\FCKeditor.V2\_aspnet\FredCK.FCKeditorV2" File="FileBrowserConnector.cs" Line="185" />
                <Resolution>
                 <Data>
                  <Items>
                   <Item>CreateFolder</Item>
                   <Item>Exception</Item>
                  </Items>
                 </Data>
                </Resolution>
               </Issue>
              </Issues>
              <Notes>
               <User Name="fredck">
                <Note ID="1" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Method>
          </Methods>
         </Class>
         <Class Name="FCKeditorConfigurations">
          <Messages>
           <Message ID="Keditor" Status="Excluded" Created="2004-05-27 17:05:04Z">
            <Rule TypeName="TypeNamesShouldBeSpelledCorrectly" />
            <Issues>
             <Issue Certainty="75" Level="CriticalWarning">
              <Resolution>
               <Data>
                <Items>
                 <Item>FCKeditorConfigurations</Item>
                 <Item>Keditor</Item>
                </Items>
               </Data>
              </Resolution>
             </Issue>
            </Issues>
            <Notes>
             <User Name="fredck">
              <Note ID="2" />
             </User>
            </Notes>
           </Message>
          </Messages>
         </Class>
        </Classes>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Notes>
   <User Name="fredck">
    <Note ID="1" Modified="2004-05-27 17:08:08Z">The exception is handled in the right way in this case.</Note>
    <Note ID="2" Modified="2004-05-27 17:08:48Z">FxCop was confused with the editor name.</Note>
    <Note ID="3" Modified="2004-05-27 17:12:26Z">FxCop was confused with the editor name.</Note>
   </User>
  </Notes>
  <Rules>
   <Rule TypeName="AssembliesHavePermissionRequests">
    <Name>Assemblies specify permission requests</Name>
    <Description>Permission requests prevent security exceptions from being thrown after code in an assembly has already begun executing. With permission requests, the assembly does not load if it has insufficient permissions. This rule will fire if you have specified a permission request incorrectly, or incompletely. If you have specified requests but FxCop reports a violation for this rule, use the PermView.exe tool to view the security permissions in the assembly. An unenforceable permission appears as an empty permission set.</Description>
    <LongDescription>You should add attributes specifying what permissions your assembly will demand, might demand, and what permissions it does not want granted.  For example, the following attribute indicates that an assembly will, at minimum, require read access to the USERNAME environment variable: [assembly:EnvironmentPermissionAttribute(SecurityAction.RequestMinimum,
Read="USERNAME")]. To specify permissions that the assembly might demand, use SecurityAction.RequestOptional. To specify permissions that the assembly must not be granted, use SecurityAction.RequestRefuse.</LongDescription>
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/UsageRules/AssembliesPermissionRequests.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="99">CriticalError</MessageLevel>
    <File Name="UsageRules.dll" Version="1.30.0.0" />
   </Rule>
   <Rule TypeName="EventsShouldBeUsed">
    <Name>The .NET event model should be used whenever appropriate</Name>
    <Description>A method name suggestive of event functionality was encountered.</Description>
    <LongDescription />
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/DesignRules/EventsShouldBeUsed.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <File Name="DesignRules.dll" Version="1.30.0.0" />
   </Rule>
   <Rule TypeName="ExceptionAndSystemExceptionTypesAreNotCaught">
    <Name>System.Exception and System.SystemException are not caught</Name>
    <Description>You should not catch Exception or SystemException.</Description>
    <LongDescription>Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</LongDescription>
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/DesignRules/ExceptionAndSystemException.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="95">CriticalError</MessageLevel>
    <File Name="DesignRules.dll" Version="1.30.0.0" />
   </Rule>
   <Rule TypeName="NamespaceNamesShouldBeSpelledCorrectly">
    <Name>Namespace names should consist of correctly spelled words</Name>
    <Description>The individual words that make up a namespace should not be abbreviated and should be spelled correctly.</Description>
    <LongDescription>If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</LongDescription>
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/UsageRules/NamespaceSpelling.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="50">CriticalWarning</MessageLevel>
    <File Name="UsageRules.dll" Version="1.30.0.0" />
   </Rule>
   <Rule TypeName="TypeNamesShouldBeSpelledCorrectly">
    <Name>Type names should consist of correctly spelled words</Name>
    <Description>The individual words that make up a type name should not be abbreviated and should be spelled correctly.</Description>
    <LongDescription>If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</LongDescription>
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/UsageRules/TypeSpelling.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
    <File Name="UsageRules.dll" Version="1.30.0.0" />
   </Rule>
   <Rule TypeName="VirtualMethodsAndOverridesRequireSameLinkDemands">
    <Name>Virtual methods and their overrides require the same LinkDemand status</Name>
    <Description>If a virtual method has a LinkDemand, in many cases, so should any override of it, and if an override has a LinkDemand, so should the overridden virtual method.</Description>
    <LongDescription>As it is possible to call any of the overrides of a virtual method explicitly, they should all have the same LinkDemand status or, if not, should be reviewed. This also applies to LinkDemand security checks for methods that part of an interface implementation, because the caller might use an interface-typed reference to access the method.</LongDescription>
    <GroupOwner>MS FxCopDev</GroupOwner>
    <DevOwner />
    <Url>http://www.gotdotnet.com/team/fxcop/docs/rules/SecurityRules/VirtualMethodsAndOverrides.html</Url>
    <Email>askfxcop@microsoft.com</Email>
    <MessageLevel Certainty="33">CriticalError</MessageLevel>
    <File Name="SecurityRules.dll" Version="1.30.0.0" />
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
