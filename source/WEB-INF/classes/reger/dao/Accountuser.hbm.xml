<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated Mar 7, 2006 3:43:28 PM by Hibernate Tools 3.1.0.beta4 -->
<hibernate-mapping>
    <class name="reger.dao.Accountuser" table="accountuser">
        <cache usage="transactional"/>
        <id name="accountuserid" type="int">
            <column name="accountuserid" />
            <generator class="native" />
        </id>

        <set name="accountuseracls" inverse="true" cascade="all-delete-orphan">
            <cache usage="transactional"/>
            <key column="accountuserid"></key>
            <one-to-many class="reger.dao.Accountuseracl" not-found="ignore"></one-to-many>
        </set>

        <set name="aclgroups" table="accountuseraclgroup" cascade="save-update">
            <cache usage="transactional"/>
            <key column="accountuserid"></key>
            <many-to-many class="reger.dao.Aclgroup" column="aclgroupid" fetch="select" not-found="ignore"></many-to-many>
        </set>

        <set name="accountuserfields" inverse="true" cascade="all-delete-orphan">
            <cache usage="transactional"/>
            <key column="accountuserid"></key>
            <one-to-many class="reger.dao.Accountuserfield" not-found="ignore"></one-to-many>
        </set>

        <set name="accountuserlogaccesses" inverse="true" cascade="all-delete-orphan">
            <cache usage="transactional"/>
            <key column="accountuserid"></key>
            <one-to-many class="reger.dao.Accountuserlogaccess" not-found="ignore"></one-to-many>
        </set>

        <set name="accountuserpersistentlogins" inverse="true" cascade="all-delete-orphan">
            <cache usage="transactional"/>
            <key column="accountuserid"></key>
            <one-to-many class="reger.dao.Accountuserpersistentlogin" not-found="ignore"></one-to-many>
        </set>

        <set name="accountuserpladmins" inverse="true" cascade="all-delete-orphan">
            <cache usage="transactional"/>
            <key column="accountuserid"></key>
            <one-to-many class="reger.dao.Accountuserpladmin" not-found="ignore"></one-to-many>
        </set>

        <set name="friends" table="friend" cascade="save-update">
            <cache usage="transactional"/>
            <key column="accountuseridsource"></key>
            <many-to-many class="reger.dao.Accountuser" column="accountuseridtarget" fetch="select" not-found="ignore"></many-to-many>
        </set>

        <!-- Note save-update -->
        <set name="sentfriendmessages" inverse="true" cascade="save-update">
            <cache usage="transactional"/>
            <key column="accountuserid"></key>
            <one-to-many class="reger.dao.Friendmessage" not-found="ignore"></one-to-many>
        </set>

        <set name="receivedfriendmessages" table="friendmessagerecipient" cascade="save-update">
            <cache usage="transactional"/>
            <key column="accountuserid"></key>
            <many-to-many class="reger.dao.Friendmessage" column="friendmessageid" fetch="select" not-found="ignore"></many-to-many>
        </set>


        <property name="isactive" type="boolean">
            <column name="isactive" />
        </property>
        <property name="accountid" type="int">
            <column name="accountid" not-null="true" />
        </property>
        <property name="password" type="string">
            <column name="password" not-null="true" />
        </property>
        <property name="username" type="string">
            <column name="username" length="50" not-null="true" />
        </property>
        <property name="friendlyname" type="string">
            <column name="friendlyname" length="100" />
        </property>
        <property name="onelinesummary" type="string">
            <column name="onelinesummary" />
        </property>
        <property name="passphrasequestion" type="string">
            <column name="passphrasequestion" not-null="true" />
        </property>
        <property name="passphraseanswer" type="string">
            <column name="passphraseanswer" length="50" not-null="true" />
        </property>
        <property name="email" type="string">
            <column name="email" length="100" />
        </property>
        <property name="lastlogindate" type="timestamp">
            <column name="lastlogindate" length="19" />
        </property>
        <property name="entrymode" type="int">
            <column name="entrymode" not-null="true" />
        </property>
        <property name="usertimezoneid" type="string">
            <column name="usertimezoneid" not-null="true" />
        </property>
        <property name="createdate" type="timestamp">
            <column name="createdate" length="19" not-null="true" />
        </property>
        <property name="ishelpon" type="boolean">
            <column name="ishelpon" />
        </property>
        <property name="isactivatedbyemail" type="boolean">
            <column name="isactivatedbyemail" />
        </property>
        <property name="emailactivationkey" type="string">
            <column name="emailactivationkey" />
        </property>
        <property name="emailactivationlastsent" type="timestamp">
            <column name="emailactivationlastsent" length="19" />
        </property>
        <property name="profileimageid" type="java.lang.Integer">
            <column name="profileimageid" />
        </property>
    </class>
</hibernate-mapping>
