package reger.dao.finders;

import reger.core.db.Db;
import java.util.ArrayList;
import reger.dao.db.PlDAO;

/**
 * Finder for the 'pl' DAO
 * 
 * DO NOT EDIT MANUALLY
 * 
 *   ______             ____  _____         _     ________        __   _   _   
 *  |_   _ `.          |_   \|_   _|       / |_  |_   __  |      |  ] (_) / |_ 
 *    | | `. \  .--.     |   \ | |   .--. `| |-'   | |_ \_|  .--.| |  __ `| |-'
 *    | |  | |/ .'`\ \   | |\ \| | / .'`\ \| |     |  _| _ / /'`\' | [  | | |  
 *   _| |_.' /| \__. |  _| |_\   |_| \__. || |,   _| |__/ || \__/  |  | | | |, 
 *  |______.'  '.__.'  |_____|\____|'.__.' \__/  |________| '.__.;__][___]\__/
 * 
 */

public class PlFinder {


    public static ArrayList<PlDAO> findByPlid(int plid) {
        return findByPlid(plid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlid(int plid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlname(String plname) {
        return findByPlname(plname, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlname(String plname, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomain(String plbasedomain) {
        return findByPlbasedomain(plbasedomain, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomain(String plbasedomain, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebar(String titlebar) {
        return findByTitlebar(titlebar, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebar(String titlebar, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByComments(String comments) {
        return findByComments(comments, 0, 50000);
    }

    public static ArrayList<PlDAO> findByComments(String comments, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIslive(boolean islive) {
        return findByIslive(islive, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIslive(boolean islive, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabled(boolean issignupenabled) {
        return findByIssignupenabled(issignupenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabled(boolean issignupenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingon(boolean iscontentflaggingon) {
        return findByIscontentflaggingon(iscontentflaggingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingon(boolean iscontentflaggingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapproved(boolean doesflaggedcontentneedtobeapproved) {
        return findByDoesflaggedcontentneedtobeapproved(doesflaggedcontentneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapproved(boolean doesflaggedcontentneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapproved(boolean doallpostsneedtobeapproved) {
        return findByDoallpostsneedtobeapproved(doallpostsneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapproved(boolean doallpostsneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdns(boolean usedynamicdns) {
        return findByUsedynamicdns(usedynamicdns, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdns(boolean usedynamicdns, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignup(int defaultaccounttypeidatsignup) {
        return findByDefaultaccounttypeidatsignup(defaultaccounttypeidatsignup, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignup(int defaultaccounttypeidatsignup, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytes(int defaultmaxspaceinbytes) {
        return findByDefaultmaxspaceinbytes(defaultmaxspaceinbytes, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytes(int defaultmaxspaceinbytes, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofservice(String termsofservice) {
        return findByTermsofservice(termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofservice(String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapproval(boolean newaccountsrequireadminapproval) {
        return findByNewaccountsrequireadminapproval(newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapproval(boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsites(boolean forcelogintoviewsites) {
        return findByForcelogintoviewsites(forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsites(boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingon(boolean isweblogscompingon) {
        return findByIsweblogscompingon(isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingon(boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccounts(String emailtonotifyofnewaccounts) {
        return findByEmailtonotifyofnewaccounts(emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccounts(String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifier(String emailapiuniqueidentifier) {
        return findByEmailapiuniqueidentifier(emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifier(String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidth(int defaultmaxbandwidth) {
        return findByDefaultmaxbandwidth(defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidth(int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordchars(int minpasswordchars) {
        return findByMinpasswordchars(minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordchars(int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasechars(int minpassworduppercasechars) {
        return findByMinpassworduppercasechars(minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasechars(int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasechars(int minpasswordlowercasechars) {
        return findByMinpasswordlowercasechars(minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasechars(int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialchars(int minpasswordspecialchars) {
        return findByMinpasswordspecialchars(minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialchars(int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericchars(int minpasswordnumericchars) {
        return findByMinpasswordnumericchars(minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericchars(int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemail(boolean ispasswordsentviaemail) {
        return findByIspasswordsentviaemail(ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemail(boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktext(String termsofuselinktext) {
        return findByTermsofuselinktext(termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktext(String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktext(String feedbacklinktext) {
        return findByFeedbacklinktext(feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktext(String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetopro(boolean doapplyplusertemplatetopro) {
        return findByDoapplyplusertemplatetopro(doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetopro(boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateid(int publicsitetemplateid) {
        return findByPublicsitetemplateid(publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateid(int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateid(int entlisttemplateid) {
        return findByEntlisttemplateid(entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateid(int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateid(int hptemplateid) {
        return findByHptemplateid(hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateid(int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateid(int marketingsitetemplateid) {
        return findByMarketingsitetemplateid(marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateid(int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateid(int marketingsitehptemplateid) {
        return findByMarketingsitehptemplateid(marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateid(int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeid(int defaulteventtypeid) {
        return findByDefaulteventtypeid(defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeid(int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicense(String encryptedlicense) {
        return findByEncryptedlicense(encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicense(String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountprice(double baseaccountprice) {
        return findByBaseaccountprice(baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountprice(double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorage(double priceper100mbstorage) {
        return findByPriceper100mbstorage(priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorage(double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidth(double pricepergbbandwidth) {
        return findByPricepergbbandwidth(pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidth(double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIstrackbackenabled(boolean istrackbackenabled) {
        return findByIstrackbackenabled(istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIstrackbackenabled(boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlusertemplateid(int plusertemplateid) {
        return findByPlusertemplateid(plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlusertemplateid(int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannerone(String bannerone) {
        return findByBannerone(bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannerone(String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannertwo(String bannertwo) {
        return findByBannertwo(bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannertwo(String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannerthree(String bannerthree) {
        return findByBannerthree(bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannerthree(String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByShowbannertagsonpro(boolean showbannertagsonpro) {
        return findByShowbannertagsonpro(showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByShowbannertagsonpro(boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsemailactivationofaccountsrequired(boolean isemailactivationofaccountsrequired) {
        return findByIsemailactivationofaccountsrequired(isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsemailactivationofaccountsrequired(boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtextactivationmessage(String emailtextactivationmessage) {
        return findByEmailtextactivationmessage(emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtextactivationmessage(String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailsubjectactivationmessage(String emailsubjectactivationmessage) {
        return findByEmailsubjectactivationmessage(emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailsubjectactivationmessage(String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtextwelcomemessage(String emailtextwelcomemessage) {
        return findByEmailtextwelcomemessage(emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtextwelcomemessage(String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailsubjectwelcomemessage(String emailsubjectwelcomemessage) {
        return findByEmailsubjectwelcomemessage(emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailsubjectwelcomemessage(String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByAccountupgradeurl(String accountupgradeurl) {
        return findByAccountupgradeurl(accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByAccountupgradeurl(String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidPlname(int plid, String plname) {
        return findByPlidPlname(plid, plname, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidPlname(int plid, String plname, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', plname='"+reger.core.Util.cleanForSQL(plname)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidPlbasedomain(int plid, String plbasedomain) {
        return findByPlidPlbasedomain(plid, plbasedomain, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidPlbasedomain(int plid, String plbasedomain, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidTitlebar(int plid, String titlebar) {
        return findByPlidTitlebar(plid, titlebar, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidTitlebar(int plid, String titlebar, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidComments(int plid, String comments) {
        return findByPlidComments(plid, comments, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidComments(int plid, String comments, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', comments='"+reger.core.Util.cleanForSQL(comments)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidIslive(int plid, boolean islive) {
        return findByPlidIslive(plid, islive, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidIslive(int plid, boolean islive, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', islive='"+reger.core.Util.booleanAsSQLText(islive)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidIssignupenabled(int plid, boolean issignupenabled) {
        return findByPlidIssignupenabled(plid, issignupenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidIssignupenabled(int plid, boolean issignupenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidIscontentflaggingon(int plid, boolean iscontentflaggingon) {
        return findByPlidIscontentflaggingon(plid, iscontentflaggingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidIscontentflaggingon(int plid, boolean iscontentflaggingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidDoesflaggedcontentneedtobeapproved(int plid, boolean doesflaggedcontentneedtobeapproved) {
        return findByPlidDoesflaggedcontentneedtobeapproved(plid, doesflaggedcontentneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidDoesflaggedcontentneedtobeapproved(int plid, boolean doesflaggedcontentneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidDoallpostsneedtobeapproved(int plid, boolean doallpostsneedtobeapproved) {
        return findByPlidDoallpostsneedtobeapproved(plid, doallpostsneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidDoallpostsneedtobeapproved(int plid, boolean doallpostsneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidUsedynamicdns(int plid, boolean usedynamicdns) {
        return findByPlidUsedynamicdns(plid, usedynamicdns, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidUsedynamicdns(int plid, boolean usedynamicdns, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidDefaultaccounttypeidatsignup(int plid, int defaultaccounttypeidatsignup) {
        return findByPlidDefaultaccounttypeidatsignup(plid, defaultaccounttypeidatsignup, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidDefaultaccounttypeidatsignup(int plid, int defaultaccounttypeidatsignup, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidDefaultmaxspaceinbytes(int plid, int defaultmaxspaceinbytes) {
        return findByPlidDefaultmaxspaceinbytes(plid, defaultmaxspaceinbytes, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidDefaultmaxspaceinbytes(int plid, int defaultmaxspaceinbytes, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidTermsofservice(int plid, String termsofservice) {
        return findByPlidTermsofservice(plid, termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidTermsofservice(int plid, String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidNewaccountsrequireadminapproval(int plid, boolean newaccountsrequireadminapproval) {
        return findByPlidNewaccountsrequireadminapproval(plid, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidNewaccountsrequireadminapproval(int plid, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidForcelogintoviewsites(int plid, boolean forcelogintoviewsites) {
        return findByPlidForcelogintoviewsites(plid, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidForcelogintoviewsites(int plid, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidIsweblogscompingon(int plid, boolean isweblogscompingon) {
        return findByPlidIsweblogscompingon(plid, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidIsweblogscompingon(int plid, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidEmailtonotifyofnewaccounts(int plid, String emailtonotifyofnewaccounts) {
        return findByPlidEmailtonotifyofnewaccounts(plid, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidEmailtonotifyofnewaccounts(int plid, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidEmailapiuniqueidentifier(int plid, String emailapiuniqueidentifier) {
        return findByPlidEmailapiuniqueidentifier(plid, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidEmailapiuniqueidentifier(int plid, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidDefaultmaxbandwidth(int plid, int defaultmaxbandwidth) {
        return findByPlidDefaultmaxbandwidth(plid, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidDefaultmaxbandwidth(int plid, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidMinpasswordchars(int plid, int minpasswordchars) {
        return findByPlidMinpasswordchars(plid, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidMinpasswordchars(int plid, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidMinpassworduppercasechars(int plid, int minpassworduppercasechars) {
        return findByPlidMinpassworduppercasechars(plid, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidMinpassworduppercasechars(int plid, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidMinpasswordlowercasechars(int plid, int minpasswordlowercasechars) {
        return findByPlidMinpasswordlowercasechars(plid, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidMinpasswordlowercasechars(int plid, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidMinpasswordspecialchars(int plid, int minpasswordspecialchars) {
        return findByPlidMinpasswordspecialchars(plid, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidMinpasswordspecialchars(int plid, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidMinpasswordnumericchars(int plid, int minpasswordnumericchars) {
        return findByPlidMinpasswordnumericchars(plid, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidMinpasswordnumericchars(int plid, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidIspasswordsentviaemail(int plid, boolean ispasswordsentviaemail) {
        return findByPlidIspasswordsentviaemail(plid, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidIspasswordsentviaemail(int plid, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidTermsofuselinktext(int plid, String termsofuselinktext) {
        return findByPlidTermsofuselinktext(plid, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidTermsofuselinktext(int plid, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidFeedbacklinktext(int plid, String feedbacklinktext) {
        return findByPlidFeedbacklinktext(plid, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidFeedbacklinktext(int plid, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidDoapplyplusertemplatetopro(int plid, boolean doapplyplusertemplatetopro) {
        return findByPlidDoapplyplusertemplatetopro(plid, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidDoapplyplusertemplatetopro(int plid, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidPublicsitetemplateid(int plid, int publicsitetemplateid) {
        return findByPlidPublicsitetemplateid(plid, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidPublicsitetemplateid(int plid, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidEntlisttemplateid(int plid, int entlisttemplateid) {
        return findByPlidEntlisttemplateid(plid, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidEntlisttemplateid(int plid, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidHptemplateid(int plid, int hptemplateid) {
        return findByPlidHptemplateid(plid, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidHptemplateid(int plid, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidMarketingsitetemplateid(int plid, int marketingsitetemplateid) {
        return findByPlidMarketingsitetemplateid(plid, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidMarketingsitetemplateid(int plid, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidMarketingsitehptemplateid(int plid, int marketingsitehptemplateid) {
        return findByPlidMarketingsitehptemplateid(plid, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidMarketingsitehptemplateid(int plid, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidDefaulteventtypeid(int plid, int defaulteventtypeid) {
        return findByPlidDefaulteventtypeid(plid, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidDefaulteventtypeid(int plid, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidEncryptedlicense(int plid, String encryptedlicense) {
        return findByPlidEncryptedlicense(plid, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidEncryptedlicense(int plid, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidBaseaccountprice(int plid, double baseaccountprice) {
        return findByPlidBaseaccountprice(plid, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidBaseaccountprice(int plid, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidPriceper100mbstorage(int plid, double priceper100mbstorage) {
        return findByPlidPriceper100mbstorage(plid, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidPriceper100mbstorage(int plid, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidPricepergbbandwidth(int plid, double pricepergbbandwidth) {
        return findByPlidPricepergbbandwidth(plid, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidPricepergbbandwidth(int plid, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidIstrackbackenabled(int plid, boolean istrackbackenabled) {
        return findByPlidIstrackbackenabled(plid, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidIstrackbackenabled(int plid, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidPlusertemplateid(int plid, int plusertemplateid) {
        return findByPlidPlusertemplateid(plid, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidPlusertemplateid(int plid, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidBannerone(int plid, String bannerone) {
        return findByPlidBannerone(plid, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidBannerone(int plid, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidBannertwo(int plid, String bannertwo) {
        return findByPlidBannertwo(plid, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidBannertwo(int plid, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidBannerthree(int plid, String bannerthree) {
        return findByPlidBannerthree(plid, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidBannerthree(int plid, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidShowbannertagsonpro(int plid, boolean showbannertagsonpro) {
        return findByPlidShowbannertagsonpro(plid, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidShowbannertagsonpro(int plid, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidIsemailactivationofaccountsrequired(int plid, boolean isemailactivationofaccountsrequired) {
        return findByPlidIsemailactivationofaccountsrequired(plid, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidIsemailactivationofaccountsrequired(int plid, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidEmailtextactivationmessage(int plid, String emailtextactivationmessage) {
        return findByPlidEmailtextactivationmessage(plid, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidEmailtextactivationmessage(int plid, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidEmailsubjectactivationmessage(int plid, String emailsubjectactivationmessage) {
        return findByPlidEmailsubjectactivationmessage(plid, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidEmailsubjectactivationmessage(int plid, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidEmailtextwelcomemessage(int plid, String emailtextwelcomemessage) {
        return findByPlidEmailtextwelcomemessage(plid, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidEmailtextwelcomemessage(int plid, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidEmailsubjectwelcomemessage(int plid, String emailsubjectwelcomemessage) {
        return findByPlidEmailsubjectwelcomemessage(plid, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidEmailsubjectwelcomemessage(int plid, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlidAccountupgradeurl(int plid, String accountupgradeurl) {
        return findByPlidAccountupgradeurl(plid, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlidAccountupgradeurl(int plid, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plid='"+plid+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnamePlbasedomain(String plname, String plbasedomain) {
        return findByPlnamePlbasedomain(plname, plbasedomain, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnamePlbasedomain(String plname, String plbasedomain, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameTitlebar(String plname, String titlebar) {
        return findByPlnameTitlebar(plname, titlebar, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameTitlebar(String plname, String titlebar, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameComments(String plname, String comments) {
        return findByPlnameComments(plname, comments, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameComments(String plname, String comments, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', comments='"+reger.core.Util.cleanForSQL(comments)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameIslive(String plname, boolean islive) {
        return findByPlnameIslive(plname, islive, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameIslive(String plname, boolean islive, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', islive='"+reger.core.Util.booleanAsSQLText(islive)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameIssignupenabled(String plname, boolean issignupenabled) {
        return findByPlnameIssignupenabled(plname, issignupenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameIssignupenabled(String plname, boolean issignupenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameIscontentflaggingon(String plname, boolean iscontentflaggingon) {
        return findByPlnameIscontentflaggingon(plname, iscontentflaggingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameIscontentflaggingon(String plname, boolean iscontentflaggingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameDoesflaggedcontentneedtobeapproved(String plname, boolean doesflaggedcontentneedtobeapproved) {
        return findByPlnameDoesflaggedcontentneedtobeapproved(plname, doesflaggedcontentneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameDoesflaggedcontentneedtobeapproved(String plname, boolean doesflaggedcontentneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameDoallpostsneedtobeapproved(String plname, boolean doallpostsneedtobeapproved) {
        return findByPlnameDoallpostsneedtobeapproved(plname, doallpostsneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameDoallpostsneedtobeapproved(String plname, boolean doallpostsneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameUsedynamicdns(String plname, boolean usedynamicdns) {
        return findByPlnameUsedynamicdns(plname, usedynamicdns, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameUsedynamicdns(String plname, boolean usedynamicdns, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameDefaultaccounttypeidatsignup(String plname, int defaultaccounttypeidatsignup) {
        return findByPlnameDefaultaccounttypeidatsignup(plname, defaultaccounttypeidatsignup, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameDefaultaccounttypeidatsignup(String plname, int defaultaccounttypeidatsignup, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameDefaultmaxspaceinbytes(String plname, int defaultmaxspaceinbytes) {
        return findByPlnameDefaultmaxspaceinbytes(plname, defaultmaxspaceinbytes, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameDefaultmaxspaceinbytes(String plname, int defaultmaxspaceinbytes, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameTermsofservice(String plname, String termsofservice) {
        return findByPlnameTermsofservice(plname, termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameTermsofservice(String plname, String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameNewaccountsrequireadminapproval(String plname, boolean newaccountsrequireadminapproval) {
        return findByPlnameNewaccountsrequireadminapproval(plname, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameNewaccountsrequireadminapproval(String plname, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameForcelogintoviewsites(String plname, boolean forcelogintoviewsites) {
        return findByPlnameForcelogintoviewsites(plname, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameForcelogintoviewsites(String plname, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameIsweblogscompingon(String plname, boolean isweblogscompingon) {
        return findByPlnameIsweblogscompingon(plname, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameIsweblogscompingon(String plname, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameEmailtonotifyofnewaccounts(String plname, String emailtonotifyofnewaccounts) {
        return findByPlnameEmailtonotifyofnewaccounts(plname, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameEmailtonotifyofnewaccounts(String plname, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameEmailapiuniqueidentifier(String plname, String emailapiuniqueidentifier) {
        return findByPlnameEmailapiuniqueidentifier(plname, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameEmailapiuniqueidentifier(String plname, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameDefaultmaxbandwidth(String plname, int defaultmaxbandwidth) {
        return findByPlnameDefaultmaxbandwidth(plname, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameDefaultmaxbandwidth(String plname, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameMinpasswordchars(String plname, int minpasswordchars) {
        return findByPlnameMinpasswordchars(plname, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameMinpasswordchars(String plname, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameMinpassworduppercasechars(String plname, int minpassworduppercasechars) {
        return findByPlnameMinpassworduppercasechars(plname, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameMinpassworduppercasechars(String plname, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameMinpasswordlowercasechars(String plname, int minpasswordlowercasechars) {
        return findByPlnameMinpasswordlowercasechars(plname, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameMinpasswordlowercasechars(String plname, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameMinpasswordspecialchars(String plname, int minpasswordspecialchars) {
        return findByPlnameMinpasswordspecialchars(plname, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameMinpasswordspecialchars(String plname, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameMinpasswordnumericchars(String plname, int minpasswordnumericchars) {
        return findByPlnameMinpasswordnumericchars(plname, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameMinpasswordnumericchars(String plname, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameIspasswordsentviaemail(String plname, boolean ispasswordsentviaemail) {
        return findByPlnameIspasswordsentviaemail(plname, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameIspasswordsentviaemail(String plname, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameTermsofuselinktext(String plname, String termsofuselinktext) {
        return findByPlnameTermsofuselinktext(plname, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameTermsofuselinktext(String plname, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameFeedbacklinktext(String plname, String feedbacklinktext) {
        return findByPlnameFeedbacklinktext(plname, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameFeedbacklinktext(String plname, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameDoapplyplusertemplatetopro(String plname, boolean doapplyplusertemplatetopro) {
        return findByPlnameDoapplyplusertemplatetopro(plname, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameDoapplyplusertemplatetopro(String plname, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnamePublicsitetemplateid(String plname, int publicsitetemplateid) {
        return findByPlnamePublicsitetemplateid(plname, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnamePublicsitetemplateid(String plname, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameEntlisttemplateid(String plname, int entlisttemplateid) {
        return findByPlnameEntlisttemplateid(plname, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameEntlisttemplateid(String plname, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameHptemplateid(String plname, int hptemplateid) {
        return findByPlnameHptemplateid(plname, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameHptemplateid(String plname, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameMarketingsitetemplateid(String plname, int marketingsitetemplateid) {
        return findByPlnameMarketingsitetemplateid(plname, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameMarketingsitetemplateid(String plname, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameMarketingsitehptemplateid(String plname, int marketingsitehptemplateid) {
        return findByPlnameMarketingsitehptemplateid(plname, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameMarketingsitehptemplateid(String plname, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameDefaulteventtypeid(String plname, int defaulteventtypeid) {
        return findByPlnameDefaulteventtypeid(plname, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameDefaulteventtypeid(String plname, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameEncryptedlicense(String plname, String encryptedlicense) {
        return findByPlnameEncryptedlicense(plname, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameEncryptedlicense(String plname, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameBaseaccountprice(String plname, double baseaccountprice) {
        return findByPlnameBaseaccountprice(plname, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameBaseaccountprice(String plname, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnamePriceper100mbstorage(String plname, double priceper100mbstorage) {
        return findByPlnamePriceper100mbstorage(plname, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnamePriceper100mbstorage(String plname, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnamePricepergbbandwidth(String plname, double pricepergbbandwidth) {
        return findByPlnamePricepergbbandwidth(plname, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnamePricepergbbandwidth(String plname, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameIstrackbackenabled(String plname, boolean istrackbackenabled) {
        return findByPlnameIstrackbackenabled(plname, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameIstrackbackenabled(String plname, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnamePlusertemplateid(String plname, int plusertemplateid) {
        return findByPlnamePlusertemplateid(plname, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnamePlusertemplateid(String plname, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameBannerone(String plname, String bannerone) {
        return findByPlnameBannerone(plname, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameBannerone(String plname, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameBannertwo(String plname, String bannertwo) {
        return findByPlnameBannertwo(plname, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameBannertwo(String plname, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameBannerthree(String plname, String bannerthree) {
        return findByPlnameBannerthree(plname, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameBannerthree(String plname, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameShowbannertagsonpro(String plname, boolean showbannertagsonpro) {
        return findByPlnameShowbannertagsonpro(plname, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameShowbannertagsonpro(String plname, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameIsemailactivationofaccountsrequired(String plname, boolean isemailactivationofaccountsrequired) {
        return findByPlnameIsemailactivationofaccountsrequired(plname, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameIsemailactivationofaccountsrequired(String plname, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameEmailtextactivationmessage(String plname, String emailtextactivationmessage) {
        return findByPlnameEmailtextactivationmessage(plname, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameEmailtextactivationmessage(String plname, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameEmailsubjectactivationmessage(String plname, String emailsubjectactivationmessage) {
        return findByPlnameEmailsubjectactivationmessage(plname, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameEmailsubjectactivationmessage(String plname, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameEmailtextwelcomemessage(String plname, String emailtextwelcomemessage) {
        return findByPlnameEmailtextwelcomemessage(plname, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameEmailtextwelcomemessage(String plname, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameEmailsubjectwelcomemessage(String plname, String emailsubjectwelcomemessage) {
        return findByPlnameEmailsubjectwelcomemessage(plname, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameEmailsubjectwelcomemessage(String plname, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlnameAccountupgradeurl(String plname, String accountupgradeurl) {
        return findByPlnameAccountupgradeurl(plname, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlnameAccountupgradeurl(String plname, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plname='"+reger.core.Util.cleanForSQL(plname)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainTitlebar(String plbasedomain, String titlebar) {
        return findByPlbasedomainTitlebar(plbasedomain, titlebar, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainTitlebar(String plbasedomain, String titlebar, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainComments(String plbasedomain, String comments) {
        return findByPlbasedomainComments(plbasedomain, comments, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainComments(String plbasedomain, String comments, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', comments='"+reger.core.Util.cleanForSQL(comments)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainIslive(String plbasedomain, boolean islive) {
        return findByPlbasedomainIslive(plbasedomain, islive, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainIslive(String plbasedomain, boolean islive, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', islive='"+reger.core.Util.booleanAsSQLText(islive)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainIssignupenabled(String plbasedomain, boolean issignupenabled) {
        return findByPlbasedomainIssignupenabled(plbasedomain, issignupenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainIssignupenabled(String plbasedomain, boolean issignupenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainIscontentflaggingon(String plbasedomain, boolean iscontentflaggingon) {
        return findByPlbasedomainIscontentflaggingon(plbasedomain, iscontentflaggingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainIscontentflaggingon(String plbasedomain, boolean iscontentflaggingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainDoesflaggedcontentneedtobeapproved(String plbasedomain, boolean doesflaggedcontentneedtobeapproved) {
        return findByPlbasedomainDoesflaggedcontentneedtobeapproved(plbasedomain, doesflaggedcontentneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainDoesflaggedcontentneedtobeapproved(String plbasedomain, boolean doesflaggedcontentneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainDoallpostsneedtobeapproved(String plbasedomain, boolean doallpostsneedtobeapproved) {
        return findByPlbasedomainDoallpostsneedtobeapproved(plbasedomain, doallpostsneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainDoallpostsneedtobeapproved(String plbasedomain, boolean doallpostsneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainUsedynamicdns(String plbasedomain, boolean usedynamicdns) {
        return findByPlbasedomainUsedynamicdns(plbasedomain, usedynamicdns, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainUsedynamicdns(String plbasedomain, boolean usedynamicdns, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainDefaultaccounttypeidatsignup(String plbasedomain, int defaultaccounttypeidatsignup) {
        return findByPlbasedomainDefaultaccounttypeidatsignup(plbasedomain, defaultaccounttypeidatsignup, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainDefaultaccounttypeidatsignup(String plbasedomain, int defaultaccounttypeidatsignup, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainDefaultmaxspaceinbytes(String plbasedomain, int defaultmaxspaceinbytes) {
        return findByPlbasedomainDefaultmaxspaceinbytes(plbasedomain, defaultmaxspaceinbytes, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainDefaultmaxspaceinbytes(String plbasedomain, int defaultmaxspaceinbytes, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainTermsofservice(String plbasedomain, String termsofservice) {
        return findByPlbasedomainTermsofservice(plbasedomain, termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainTermsofservice(String plbasedomain, String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainNewaccountsrequireadminapproval(String plbasedomain, boolean newaccountsrequireadminapproval) {
        return findByPlbasedomainNewaccountsrequireadminapproval(plbasedomain, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainNewaccountsrequireadminapproval(String plbasedomain, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainForcelogintoviewsites(String plbasedomain, boolean forcelogintoviewsites) {
        return findByPlbasedomainForcelogintoviewsites(plbasedomain, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainForcelogintoviewsites(String plbasedomain, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainIsweblogscompingon(String plbasedomain, boolean isweblogscompingon) {
        return findByPlbasedomainIsweblogscompingon(plbasedomain, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainIsweblogscompingon(String plbasedomain, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainEmailtonotifyofnewaccounts(String plbasedomain, String emailtonotifyofnewaccounts) {
        return findByPlbasedomainEmailtonotifyofnewaccounts(plbasedomain, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainEmailtonotifyofnewaccounts(String plbasedomain, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainEmailapiuniqueidentifier(String plbasedomain, String emailapiuniqueidentifier) {
        return findByPlbasedomainEmailapiuniqueidentifier(plbasedomain, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainEmailapiuniqueidentifier(String plbasedomain, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainDefaultmaxbandwidth(String plbasedomain, int defaultmaxbandwidth) {
        return findByPlbasedomainDefaultmaxbandwidth(plbasedomain, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainDefaultmaxbandwidth(String plbasedomain, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainMinpasswordchars(String plbasedomain, int minpasswordchars) {
        return findByPlbasedomainMinpasswordchars(plbasedomain, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainMinpasswordchars(String plbasedomain, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainMinpassworduppercasechars(String plbasedomain, int minpassworduppercasechars) {
        return findByPlbasedomainMinpassworduppercasechars(plbasedomain, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainMinpassworduppercasechars(String plbasedomain, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainMinpasswordlowercasechars(String plbasedomain, int minpasswordlowercasechars) {
        return findByPlbasedomainMinpasswordlowercasechars(plbasedomain, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainMinpasswordlowercasechars(String plbasedomain, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainMinpasswordspecialchars(String plbasedomain, int minpasswordspecialchars) {
        return findByPlbasedomainMinpasswordspecialchars(plbasedomain, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainMinpasswordspecialchars(String plbasedomain, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainMinpasswordnumericchars(String plbasedomain, int minpasswordnumericchars) {
        return findByPlbasedomainMinpasswordnumericchars(plbasedomain, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainMinpasswordnumericchars(String plbasedomain, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainIspasswordsentviaemail(String plbasedomain, boolean ispasswordsentviaemail) {
        return findByPlbasedomainIspasswordsentviaemail(plbasedomain, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainIspasswordsentviaemail(String plbasedomain, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainTermsofuselinktext(String plbasedomain, String termsofuselinktext) {
        return findByPlbasedomainTermsofuselinktext(plbasedomain, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainTermsofuselinktext(String plbasedomain, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainFeedbacklinktext(String plbasedomain, String feedbacklinktext) {
        return findByPlbasedomainFeedbacklinktext(plbasedomain, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainFeedbacklinktext(String plbasedomain, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainDoapplyplusertemplatetopro(String plbasedomain, boolean doapplyplusertemplatetopro) {
        return findByPlbasedomainDoapplyplusertemplatetopro(plbasedomain, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainDoapplyplusertemplatetopro(String plbasedomain, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainPublicsitetemplateid(String plbasedomain, int publicsitetemplateid) {
        return findByPlbasedomainPublicsitetemplateid(plbasedomain, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainPublicsitetemplateid(String plbasedomain, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainEntlisttemplateid(String plbasedomain, int entlisttemplateid) {
        return findByPlbasedomainEntlisttemplateid(plbasedomain, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainEntlisttemplateid(String plbasedomain, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainHptemplateid(String plbasedomain, int hptemplateid) {
        return findByPlbasedomainHptemplateid(plbasedomain, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainHptemplateid(String plbasedomain, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainMarketingsitetemplateid(String plbasedomain, int marketingsitetemplateid) {
        return findByPlbasedomainMarketingsitetemplateid(plbasedomain, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainMarketingsitetemplateid(String plbasedomain, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainMarketingsitehptemplateid(String plbasedomain, int marketingsitehptemplateid) {
        return findByPlbasedomainMarketingsitehptemplateid(plbasedomain, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainMarketingsitehptemplateid(String plbasedomain, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainDefaulteventtypeid(String plbasedomain, int defaulteventtypeid) {
        return findByPlbasedomainDefaulteventtypeid(plbasedomain, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainDefaulteventtypeid(String plbasedomain, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainEncryptedlicense(String plbasedomain, String encryptedlicense) {
        return findByPlbasedomainEncryptedlicense(plbasedomain, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainEncryptedlicense(String plbasedomain, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainBaseaccountprice(String plbasedomain, double baseaccountprice) {
        return findByPlbasedomainBaseaccountprice(plbasedomain, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainBaseaccountprice(String plbasedomain, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainPriceper100mbstorage(String plbasedomain, double priceper100mbstorage) {
        return findByPlbasedomainPriceper100mbstorage(plbasedomain, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainPriceper100mbstorage(String plbasedomain, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainPricepergbbandwidth(String plbasedomain, double pricepergbbandwidth) {
        return findByPlbasedomainPricepergbbandwidth(plbasedomain, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainPricepergbbandwidth(String plbasedomain, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainIstrackbackenabled(String plbasedomain, boolean istrackbackenabled) {
        return findByPlbasedomainIstrackbackenabled(plbasedomain, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainIstrackbackenabled(String plbasedomain, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainPlusertemplateid(String plbasedomain, int plusertemplateid) {
        return findByPlbasedomainPlusertemplateid(plbasedomain, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainPlusertemplateid(String plbasedomain, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainBannerone(String plbasedomain, String bannerone) {
        return findByPlbasedomainBannerone(plbasedomain, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainBannerone(String plbasedomain, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainBannertwo(String plbasedomain, String bannertwo) {
        return findByPlbasedomainBannertwo(plbasedomain, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainBannertwo(String plbasedomain, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainBannerthree(String plbasedomain, String bannerthree) {
        return findByPlbasedomainBannerthree(plbasedomain, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainBannerthree(String plbasedomain, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainShowbannertagsonpro(String plbasedomain, boolean showbannertagsonpro) {
        return findByPlbasedomainShowbannertagsonpro(plbasedomain, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainShowbannertagsonpro(String plbasedomain, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainIsemailactivationofaccountsrequired(String plbasedomain, boolean isemailactivationofaccountsrequired) {
        return findByPlbasedomainIsemailactivationofaccountsrequired(plbasedomain, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainIsemailactivationofaccountsrequired(String plbasedomain, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainEmailtextactivationmessage(String plbasedomain, String emailtextactivationmessage) {
        return findByPlbasedomainEmailtextactivationmessage(plbasedomain, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainEmailtextactivationmessage(String plbasedomain, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainEmailsubjectactivationmessage(String plbasedomain, String emailsubjectactivationmessage) {
        return findByPlbasedomainEmailsubjectactivationmessage(plbasedomain, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainEmailsubjectactivationmessage(String plbasedomain, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainEmailtextwelcomemessage(String plbasedomain, String emailtextwelcomemessage) {
        return findByPlbasedomainEmailtextwelcomemessage(plbasedomain, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainEmailtextwelcomemessage(String plbasedomain, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainEmailsubjectwelcomemessage(String plbasedomain, String emailsubjectwelcomemessage) {
        return findByPlbasedomainEmailsubjectwelcomemessage(plbasedomain, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainEmailsubjectwelcomemessage(String plbasedomain, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlbasedomainAccountupgradeurl(String plbasedomain, String accountupgradeurl) {
        return findByPlbasedomainAccountupgradeurl(plbasedomain, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlbasedomainAccountupgradeurl(String plbasedomain, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plbasedomain='"+reger.core.Util.cleanForSQL(plbasedomain)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarComments(String titlebar, String comments) {
        return findByTitlebarComments(titlebar, comments, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarComments(String titlebar, String comments, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', comments='"+reger.core.Util.cleanForSQL(comments)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarIslive(String titlebar, boolean islive) {
        return findByTitlebarIslive(titlebar, islive, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarIslive(String titlebar, boolean islive, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', islive='"+reger.core.Util.booleanAsSQLText(islive)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarIssignupenabled(String titlebar, boolean issignupenabled) {
        return findByTitlebarIssignupenabled(titlebar, issignupenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarIssignupenabled(String titlebar, boolean issignupenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarIscontentflaggingon(String titlebar, boolean iscontentflaggingon) {
        return findByTitlebarIscontentflaggingon(titlebar, iscontentflaggingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarIscontentflaggingon(String titlebar, boolean iscontentflaggingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarDoesflaggedcontentneedtobeapproved(String titlebar, boolean doesflaggedcontentneedtobeapproved) {
        return findByTitlebarDoesflaggedcontentneedtobeapproved(titlebar, doesflaggedcontentneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarDoesflaggedcontentneedtobeapproved(String titlebar, boolean doesflaggedcontentneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarDoallpostsneedtobeapproved(String titlebar, boolean doallpostsneedtobeapproved) {
        return findByTitlebarDoallpostsneedtobeapproved(titlebar, doallpostsneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarDoallpostsneedtobeapproved(String titlebar, boolean doallpostsneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarUsedynamicdns(String titlebar, boolean usedynamicdns) {
        return findByTitlebarUsedynamicdns(titlebar, usedynamicdns, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarUsedynamicdns(String titlebar, boolean usedynamicdns, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarDefaultaccounttypeidatsignup(String titlebar, int defaultaccounttypeidatsignup) {
        return findByTitlebarDefaultaccounttypeidatsignup(titlebar, defaultaccounttypeidatsignup, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarDefaultaccounttypeidatsignup(String titlebar, int defaultaccounttypeidatsignup, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarDefaultmaxspaceinbytes(String titlebar, int defaultmaxspaceinbytes) {
        return findByTitlebarDefaultmaxspaceinbytes(titlebar, defaultmaxspaceinbytes, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarDefaultmaxspaceinbytes(String titlebar, int defaultmaxspaceinbytes, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarTermsofservice(String titlebar, String termsofservice) {
        return findByTitlebarTermsofservice(titlebar, termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarTermsofservice(String titlebar, String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarNewaccountsrequireadminapproval(String titlebar, boolean newaccountsrequireadminapproval) {
        return findByTitlebarNewaccountsrequireadminapproval(titlebar, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarNewaccountsrequireadminapproval(String titlebar, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarForcelogintoviewsites(String titlebar, boolean forcelogintoviewsites) {
        return findByTitlebarForcelogintoviewsites(titlebar, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarForcelogintoviewsites(String titlebar, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarIsweblogscompingon(String titlebar, boolean isweblogscompingon) {
        return findByTitlebarIsweblogscompingon(titlebar, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarIsweblogscompingon(String titlebar, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarEmailtonotifyofnewaccounts(String titlebar, String emailtonotifyofnewaccounts) {
        return findByTitlebarEmailtonotifyofnewaccounts(titlebar, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarEmailtonotifyofnewaccounts(String titlebar, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarEmailapiuniqueidentifier(String titlebar, String emailapiuniqueidentifier) {
        return findByTitlebarEmailapiuniqueidentifier(titlebar, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarEmailapiuniqueidentifier(String titlebar, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarDefaultmaxbandwidth(String titlebar, int defaultmaxbandwidth) {
        return findByTitlebarDefaultmaxbandwidth(titlebar, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarDefaultmaxbandwidth(String titlebar, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarMinpasswordchars(String titlebar, int minpasswordchars) {
        return findByTitlebarMinpasswordchars(titlebar, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarMinpasswordchars(String titlebar, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarMinpassworduppercasechars(String titlebar, int minpassworduppercasechars) {
        return findByTitlebarMinpassworduppercasechars(titlebar, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarMinpassworduppercasechars(String titlebar, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarMinpasswordlowercasechars(String titlebar, int minpasswordlowercasechars) {
        return findByTitlebarMinpasswordlowercasechars(titlebar, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarMinpasswordlowercasechars(String titlebar, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarMinpasswordspecialchars(String titlebar, int minpasswordspecialchars) {
        return findByTitlebarMinpasswordspecialchars(titlebar, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarMinpasswordspecialchars(String titlebar, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarMinpasswordnumericchars(String titlebar, int minpasswordnumericchars) {
        return findByTitlebarMinpasswordnumericchars(titlebar, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarMinpasswordnumericchars(String titlebar, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarIspasswordsentviaemail(String titlebar, boolean ispasswordsentviaemail) {
        return findByTitlebarIspasswordsentviaemail(titlebar, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarIspasswordsentviaemail(String titlebar, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarTermsofuselinktext(String titlebar, String termsofuselinktext) {
        return findByTitlebarTermsofuselinktext(titlebar, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarTermsofuselinktext(String titlebar, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarFeedbacklinktext(String titlebar, String feedbacklinktext) {
        return findByTitlebarFeedbacklinktext(titlebar, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarFeedbacklinktext(String titlebar, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarDoapplyplusertemplatetopro(String titlebar, boolean doapplyplusertemplatetopro) {
        return findByTitlebarDoapplyplusertemplatetopro(titlebar, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarDoapplyplusertemplatetopro(String titlebar, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarPublicsitetemplateid(String titlebar, int publicsitetemplateid) {
        return findByTitlebarPublicsitetemplateid(titlebar, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarPublicsitetemplateid(String titlebar, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarEntlisttemplateid(String titlebar, int entlisttemplateid) {
        return findByTitlebarEntlisttemplateid(titlebar, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarEntlisttemplateid(String titlebar, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarHptemplateid(String titlebar, int hptemplateid) {
        return findByTitlebarHptemplateid(titlebar, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarHptemplateid(String titlebar, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarMarketingsitetemplateid(String titlebar, int marketingsitetemplateid) {
        return findByTitlebarMarketingsitetemplateid(titlebar, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarMarketingsitetemplateid(String titlebar, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarMarketingsitehptemplateid(String titlebar, int marketingsitehptemplateid) {
        return findByTitlebarMarketingsitehptemplateid(titlebar, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarMarketingsitehptemplateid(String titlebar, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarDefaulteventtypeid(String titlebar, int defaulteventtypeid) {
        return findByTitlebarDefaulteventtypeid(titlebar, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarDefaulteventtypeid(String titlebar, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarEncryptedlicense(String titlebar, String encryptedlicense) {
        return findByTitlebarEncryptedlicense(titlebar, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarEncryptedlicense(String titlebar, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarBaseaccountprice(String titlebar, double baseaccountprice) {
        return findByTitlebarBaseaccountprice(titlebar, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarBaseaccountprice(String titlebar, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarPriceper100mbstorage(String titlebar, double priceper100mbstorage) {
        return findByTitlebarPriceper100mbstorage(titlebar, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarPriceper100mbstorage(String titlebar, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarPricepergbbandwidth(String titlebar, double pricepergbbandwidth) {
        return findByTitlebarPricepergbbandwidth(titlebar, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarPricepergbbandwidth(String titlebar, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarIstrackbackenabled(String titlebar, boolean istrackbackenabled) {
        return findByTitlebarIstrackbackenabled(titlebar, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarIstrackbackenabled(String titlebar, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarPlusertemplateid(String titlebar, int plusertemplateid) {
        return findByTitlebarPlusertemplateid(titlebar, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarPlusertemplateid(String titlebar, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarBannerone(String titlebar, String bannerone) {
        return findByTitlebarBannerone(titlebar, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarBannerone(String titlebar, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarBannertwo(String titlebar, String bannertwo) {
        return findByTitlebarBannertwo(titlebar, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarBannertwo(String titlebar, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarBannerthree(String titlebar, String bannerthree) {
        return findByTitlebarBannerthree(titlebar, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarBannerthree(String titlebar, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarShowbannertagsonpro(String titlebar, boolean showbannertagsonpro) {
        return findByTitlebarShowbannertagsonpro(titlebar, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarShowbannertagsonpro(String titlebar, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarIsemailactivationofaccountsrequired(String titlebar, boolean isemailactivationofaccountsrequired) {
        return findByTitlebarIsemailactivationofaccountsrequired(titlebar, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarIsemailactivationofaccountsrequired(String titlebar, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarEmailtextactivationmessage(String titlebar, String emailtextactivationmessage) {
        return findByTitlebarEmailtextactivationmessage(titlebar, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarEmailtextactivationmessage(String titlebar, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarEmailsubjectactivationmessage(String titlebar, String emailsubjectactivationmessage) {
        return findByTitlebarEmailsubjectactivationmessage(titlebar, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarEmailsubjectactivationmessage(String titlebar, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarEmailtextwelcomemessage(String titlebar, String emailtextwelcomemessage) {
        return findByTitlebarEmailtextwelcomemessage(titlebar, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarEmailtextwelcomemessage(String titlebar, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarEmailsubjectwelcomemessage(String titlebar, String emailsubjectwelcomemessage) {
        return findByTitlebarEmailsubjectwelcomemessage(titlebar, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarEmailsubjectwelcomemessage(String titlebar, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTitlebarAccountupgradeurl(String titlebar, String accountupgradeurl) {
        return findByTitlebarAccountupgradeurl(titlebar, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTitlebarAccountupgradeurl(String titlebar, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE titlebar='"+reger.core.Util.cleanForSQL(titlebar)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsIslive(String comments, boolean islive) {
        return findByCommentsIslive(comments, islive, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsIslive(String comments, boolean islive, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', islive='"+reger.core.Util.booleanAsSQLText(islive)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsIssignupenabled(String comments, boolean issignupenabled) {
        return findByCommentsIssignupenabled(comments, issignupenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsIssignupenabled(String comments, boolean issignupenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsIscontentflaggingon(String comments, boolean iscontentflaggingon) {
        return findByCommentsIscontentflaggingon(comments, iscontentflaggingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsIscontentflaggingon(String comments, boolean iscontentflaggingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsDoesflaggedcontentneedtobeapproved(String comments, boolean doesflaggedcontentneedtobeapproved) {
        return findByCommentsDoesflaggedcontentneedtobeapproved(comments, doesflaggedcontentneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsDoesflaggedcontentneedtobeapproved(String comments, boolean doesflaggedcontentneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsDoallpostsneedtobeapproved(String comments, boolean doallpostsneedtobeapproved) {
        return findByCommentsDoallpostsneedtobeapproved(comments, doallpostsneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsDoallpostsneedtobeapproved(String comments, boolean doallpostsneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsUsedynamicdns(String comments, boolean usedynamicdns) {
        return findByCommentsUsedynamicdns(comments, usedynamicdns, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsUsedynamicdns(String comments, boolean usedynamicdns, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsDefaultaccounttypeidatsignup(String comments, int defaultaccounttypeidatsignup) {
        return findByCommentsDefaultaccounttypeidatsignup(comments, defaultaccounttypeidatsignup, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsDefaultaccounttypeidatsignup(String comments, int defaultaccounttypeidatsignup, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsDefaultmaxspaceinbytes(String comments, int defaultmaxspaceinbytes) {
        return findByCommentsDefaultmaxspaceinbytes(comments, defaultmaxspaceinbytes, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsDefaultmaxspaceinbytes(String comments, int defaultmaxspaceinbytes, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsTermsofservice(String comments, String termsofservice) {
        return findByCommentsTermsofservice(comments, termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsTermsofservice(String comments, String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsNewaccountsrequireadminapproval(String comments, boolean newaccountsrequireadminapproval) {
        return findByCommentsNewaccountsrequireadminapproval(comments, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsNewaccountsrequireadminapproval(String comments, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsForcelogintoviewsites(String comments, boolean forcelogintoviewsites) {
        return findByCommentsForcelogintoviewsites(comments, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsForcelogintoviewsites(String comments, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsIsweblogscompingon(String comments, boolean isweblogscompingon) {
        return findByCommentsIsweblogscompingon(comments, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsIsweblogscompingon(String comments, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsEmailtonotifyofnewaccounts(String comments, String emailtonotifyofnewaccounts) {
        return findByCommentsEmailtonotifyofnewaccounts(comments, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsEmailtonotifyofnewaccounts(String comments, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsEmailapiuniqueidentifier(String comments, String emailapiuniqueidentifier) {
        return findByCommentsEmailapiuniqueidentifier(comments, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsEmailapiuniqueidentifier(String comments, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsDefaultmaxbandwidth(String comments, int defaultmaxbandwidth) {
        return findByCommentsDefaultmaxbandwidth(comments, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsDefaultmaxbandwidth(String comments, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsMinpasswordchars(String comments, int minpasswordchars) {
        return findByCommentsMinpasswordchars(comments, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsMinpasswordchars(String comments, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsMinpassworduppercasechars(String comments, int minpassworduppercasechars) {
        return findByCommentsMinpassworduppercasechars(comments, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsMinpassworduppercasechars(String comments, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsMinpasswordlowercasechars(String comments, int minpasswordlowercasechars) {
        return findByCommentsMinpasswordlowercasechars(comments, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsMinpasswordlowercasechars(String comments, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsMinpasswordspecialchars(String comments, int minpasswordspecialchars) {
        return findByCommentsMinpasswordspecialchars(comments, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsMinpasswordspecialchars(String comments, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsMinpasswordnumericchars(String comments, int minpasswordnumericchars) {
        return findByCommentsMinpasswordnumericchars(comments, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsMinpasswordnumericchars(String comments, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsIspasswordsentviaemail(String comments, boolean ispasswordsentviaemail) {
        return findByCommentsIspasswordsentviaemail(comments, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsIspasswordsentviaemail(String comments, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsTermsofuselinktext(String comments, String termsofuselinktext) {
        return findByCommentsTermsofuselinktext(comments, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsTermsofuselinktext(String comments, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsFeedbacklinktext(String comments, String feedbacklinktext) {
        return findByCommentsFeedbacklinktext(comments, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsFeedbacklinktext(String comments, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsDoapplyplusertemplatetopro(String comments, boolean doapplyplusertemplatetopro) {
        return findByCommentsDoapplyplusertemplatetopro(comments, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsDoapplyplusertemplatetopro(String comments, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsPublicsitetemplateid(String comments, int publicsitetemplateid) {
        return findByCommentsPublicsitetemplateid(comments, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsPublicsitetemplateid(String comments, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsEntlisttemplateid(String comments, int entlisttemplateid) {
        return findByCommentsEntlisttemplateid(comments, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsEntlisttemplateid(String comments, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsHptemplateid(String comments, int hptemplateid) {
        return findByCommentsHptemplateid(comments, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsHptemplateid(String comments, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsMarketingsitetemplateid(String comments, int marketingsitetemplateid) {
        return findByCommentsMarketingsitetemplateid(comments, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsMarketingsitetemplateid(String comments, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsMarketingsitehptemplateid(String comments, int marketingsitehptemplateid) {
        return findByCommentsMarketingsitehptemplateid(comments, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsMarketingsitehptemplateid(String comments, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsDefaulteventtypeid(String comments, int defaulteventtypeid) {
        return findByCommentsDefaulteventtypeid(comments, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsDefaulteventtypeid(String comments, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsEncryptedlicense(String comments, String encryptedlicense) {
        return findByCommentsEncryptedlicense(comments, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsEncryptedlicense(String comments, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsBaseaccountprice(String comments, double baseaccountprice) {
        return findByCommentsBaseaccountprice(comments, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsBaseaccountprice(String comments, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsPriceper100mbstorage(String comments, double priceper100mbstorage) {
        return findByCommentsPriceper100mbstorage(comments, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsPriceper100mbstorage(String comments, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsPricepergbbandwidth(String comments, double pricepergbbandwidth) {
        return findByCommentsPricepergbbandwidth(comments, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsPricepergbbandwidth(String comments, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsIstrackbackenabled(String comments, boolean istrackbackenabled) {
        return findByCommentsIstrackbackenabled(comments, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsIstrackbackenabled(String comments, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsPlusertemplateid(String comments, int plusertemplateid) {
        return findByCommentsPlusertemplateid(comments, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsPlusertemplateid(String comments, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsBannerone(String comments, String bannerone) {
        return findByCommentsBannerone(comments, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsBannerone(String comments, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsBannertwo(String comments, String bannertwo) {
        return findByCommentsBannertwo(comments, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsBannertwo(String comments, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsBannerthree(String comments, String bannerthree) {
        return findByCommentsBannerthree(comments, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsBannerthree(String comments, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsShowbannertagsonpro(String comments, boolean showbannertagsonpro) {
        return findByCommentsShowbannertagsonpro(comments, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsShowbannertagsonpro(String comments, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsIsemailactivationofaccountsrequired(String comments, boolean isemailactivationofaccountsrequired) {
        return findByCommentsIsemailactivationofaccountsrequired(comments, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsIsemailactivationofaccountsrequired(String comments, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsEmailtextactivationmessage(String comments, String emailtextactivationmessage) {
        return findByCommentsEmailtextactivationmessage(comments, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsEmailtextactivationmessage(String comments, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsEmailsubjectactivationmessage(String comments, String emailsubjectactivationmessage) {
        return findByCommentsEmailsubjectactivationmessage(comments, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsEmailsubjectactivationmessage(String comments, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsEmailtextwelcomemessage(String comments, String emailtextwelcomemessage) {
        return findByCommentsEmailtextwelcomemessage(comments, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsEmailtextwelcomemessage(String comments, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsEmailsubjectwelcomemessage(String comments, String emailsubjectwelcomemessage) {
        return findByCommentsEmailsubjectwelcomemessage(comments, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsEmailsubjectwelcomemessage(String comments, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByCommentsAccountupgradeurl(String comments, String accountupgradeurl) {
        return findByCommentsAccountupgradeurl(comments, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByCommentsAccountupgradeurl(String comments, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE comments='"+reger.core.Util.cleanForSQL(comments)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveIssignupenabled(boolean islive, boolean issignupenabled) {
        return findByIsliveIssignupenabled(islive, issignupenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveIssignupenabled(boolean islive, boolean issignupenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveIscontentflaggingon(boolean islive, boolean iscontentflaggingon) {
        return findByIsliveIscontentflaggingon(islive, iscontentflaggingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveIscontentflaggingon(boolean islive, boolean iscontentflaggingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveDoesflaggedcontentneedtobeapproved(boolean islive, boolean doesflaggedcontentneedtobeapproved) {
        return findByIsliveDoesflaggedcontentneedtobeapproved(islive, doesflaggedcontentneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveDoesflaggedcontentneedtobeapproved(boolean islive, boolean doesflaggedcontentneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveDoallpostsneedtobeapproved(boolean islive, boolean doallpostsneedtobeapproved) {
        return findByIsliveDoallpostsneedtobeapproved(islive, doallpostsneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveDoallpostsneedtobeapproved(boolean islive, boolean doallpostsneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveUsedynamicdns(boolean islive, boolean usedynamicdns) {
        return findByIsliveUsedynamicdns(islive, usedynamicdns, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveUsedynamicdns(boolean islive, boolean usedynamicdns, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveDefaultaccounttypeidatsignup(boolean islive, int defaultaccounttypeidatsignup) {
        return findByIsliveDefaultaccounttypeidatsignup(islive, defaultaccounttypeidatsignup, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveDefaultaccounttypeidatsignup(boolean islive, int defaultaccounttypeidatsignup, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveDefaultmaxspaceinbytes(boolean islive, int defaultmaxspaceinbytes) {
        return findByIsliveDefaultmaxspaceinbytes(islive, defaultmaxspaceinbytes, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveDefaultmaxspaceinbytes(boolean islive, int defaultmaxspaceinbytes, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveTermsofservice(boolean islive, String termsofservice) {
        return findByIsliveTermsofservice(islive, termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveTermsofservice(boolean islive, String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveNewaccountsrequireadminapproval(boolean islive, boolean newaccountsrequireadminapproval) {
        return findByIsliveNewaccountsrequireadminapproval(islive, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveNewaccountsrequireadminapproval(boolean islive, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveForcelogintoviewsites(boolean islive, boolean forcelogintoviewsites) {
        return findByIsliveForcelogintoviewsites(islive, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveForcelogintoviewsites(boolean islive, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveIsweblogscompingon(boolean islive, boolean isweblogscompingon) {
        return findByIsliveIsweblogscompingon(islive, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveIsweblogscompingon(boolean islive, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveEmailtonotifyofnewaccounts(boolean islive, String emailtonotifyofnewaccounts) {
        return findByIsliveEmailtonotifyofnewaccounts(islive, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveEmailtonotifyofnewaccounts(boolean islive, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveEmailapiuniqueidentifier(boolean islive, String emailapiuniqueidentifier) {
        return findByIsliveEmailapiuniqueidentifier(islive, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveEmailapiuniqueidentifier(boolean islive, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveDefaultmaxbandwidth(boolean islive, int defaultmaxbandwidth) {
        return findByIsliveDefaultmaxbandwidth(islive, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveDefaultmaxbandwidth(boolean islive, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveMinpasswordchars(boolean islive, int minpasswordchars) {
        return findByIsliveMinpasswordchars(islive, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveMinpasswordchars(boolean islive, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveMinpassworduppercasechars(boolean islive, int minpassworduppercasechars) {
        return findByIsliveMinpassworduppercasechars(islive, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveMinpassworduppercasechars(boolean islive, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveMinpasswordlowercasechars(boolean islive, int minpasswordlowercasechars) {
        return findByIsliveMinpasswordlowercasechars(islive, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveMinpasswordlowercasechars(boolean islive, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveMinpasswordspecialchars(boolean islive, int minpasswordspecialchars) {
        return findByIsliveMinpasswordspecialchars(islive, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveMinpasswordspecialchars(boolean islive, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveMinpasswordnumericchars(boolean islive, int minpasswordnumericchars) {
        return findByIsliveMinpasswordnumericchars(islive, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveMinpasswordnumericchars(boolean islive, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveIspasswordsentviaemail(boolean islive, boolean ispasswordsentviaemail) {
        return findByIsliveIspasswordsentviaemail(islive, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveIspasswordsentviaemail(boolean islive, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveTermsofuselinktext(boolean islive, String termsofuselinktext) {
        return findByIsliveTermsofuselinktext(islive, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveTermsofuselinktext(boolean islive, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveFeedbacklinktext(boolean islive, String feedbacklinktext) {
        return findByIsliveFeedbacklinktext(islive, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveFeedbacklinktext(boolean islive, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveDoapplyplusertemplatetopro(boolean islive, boolean doapplyplusertemplatetopro) {
        return findByIsliveDoapplyplusertemplatetopro(islive, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveDoapplyplusertemplatetopro(boolean islive, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIslivePublicsitetemplateid(boolean islive, int publicsitetemplateid) {
        return findByIslivePublicsitetemplateid(islive, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIslivePublicsitetemplateid(boolean islive, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveEntlisttemplateid(boolean islive, int entlisttemplateid) {
        return findByIsliveEntlisttemplateid(islive, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveEntlisttemplateid(boolean islive, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveHptemplateid(boolean islive, int hptemplateid) {
        return findByIsliveHptemplateid(islive, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveHptemplateid(boolean islive, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveMarketingsitetemplateid(boolean islive, int marketingsitetemplateid) {
        return findByIsliveMarketingsitetemplateid(islive, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveMarketingsitetemplateid(boolean islive, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveMarketingsitehptemplateid(boolean islive, int marketingsitehptemplateid) {
        return findByIsliveMarketingsitehptemplateid(islive, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveMarketingsitehptemplateid(boolean islive, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveDefaulteventtypeid(boolean islive, int defaulteventtypeid) {
        return findByIsliveDefaulteventtypeid(islive, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveDefaulteventtypeid(boolean islive, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveEncryptedlicense(boolean islive, String encryptedlicense) {
        return findByIsliveEncryptedlicense(islive, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveEncryptedlicense(boolean islive, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveBaseaccountprice(boolean islive, double baseaccountprice) {
        return findByIsliveBaseaccountprice(islive, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveBaseaccountprice(boolean islive, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIslivePriceper100mbstorage(boolean islive, double priceper100mbstorage) {
        return findByIslivePriceper100mbstorage(islive, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIslivePriceper100mbstorage(boolean islive, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIslivePricepergbbandwidth(boolean islive, double pricepergbbandwidth) {
        return findByIslivePricepergbbandwidth(islive, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIslivePricepergbbandwidth(boolean islive, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveIstrackbackenabled(boolean islive, boolean istrackbackenabled) {
        return findByIsliveIstrackbackenabled(islive, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveIstrackbackenabled(boolean islive, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIslivePlusertemplateid(boolean islive, int plusertemplateid) {
        return findByIslivePlusertemplateid(islive, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIslivePlusertemplateid(boolean islive, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveBannerone(boolean islive, String bannerone) {
        return findByIsliveBannerone(islive, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveBannerone(boolean islive, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveBannertwo(boolean islive, String bannertwo) {
        return findByIsliveBannertwo(islive, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveBannertwo(boolean islive, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveBannerthree(boolean islive, String bannerthree) {
        return findByIsliveBannerthree(islive, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveBannerthree(boolean islive, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveShowbannertagsonpro(boolean islive, boolean showbannertagsonpro) {
        return findByIsliveShowbannertagsonpro(islive, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveShowbannertagsonpro(boolean islive, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveIsemailactivationofaccountsrequired(boolean islive, boolean isemailactivationofaccountsrequired) {
        return findByIsliveIsemailactivationofaccountsrequired(islive, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveIsemailactivationofaccountsrequired(boolean islive, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveEmailtextactivationmessage(boolean islive, String emailtextactivationmessage) {
        return findByIsliveEmailtextactivationmessage(islive, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveEmailtextactivationmessage(boolean islive, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveEmailsubjectactivationmessage(boolean islive, String emailsubjectactivationmessage) {
        return findByIsliveEmailsubjectactivationmessage(islive, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveEmailsubjectactivationmessage(boolean islive, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveEmailtextwelcomemessage(boolean islive, String emailtextwelcomemessage) {
        return findByIsliveEmailtextwelcomemessage(islive, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveEmailtextwelcomemessage(boolean islive, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveEmailsubjectwelcomemessage(boolean islive, String emailsubjectwelcomemessage) {
        return findByIsliveEmailsubjectwelcomemessage(islive, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveEmailsubjectwelcomemessage(boolean islive, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsliveAccountupgradeurl(boolean islive, String accountupgradeurl) {
        return findByIsliveAccountupgradeurl(islive, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsliveAccountupgradeurl(boolean islive, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE islive='"+reger.core.Util.booleanAsSQLText(islive)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledIscontentflaggingon(boolean issignupenabled, boolean iscontentflaggingon) {
        return findByIssignupenabledIscontentflaggingon(issignupenabled, iscontentflaggingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledIscontentflaggingon(boolean issignupenabled, boolean iscontentflaggingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledDoesflaggedcontentneedtobeapproved(boolean issignupenabled, boolean doesflaggedcontentneedtobeapproved) {
        return findByIssignupenabledDoesflaggedcontentneedtobeapproved(issignupenabled, doesflaggedcontentneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledDoesflaggedcontentneedtobeapproved(boolean issignupenabled, boolean doesflaggedcontentneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledDoallpostsneedtobeapproved(boolean issignupenabled, boolean doallpostsneedtobeapproved) {
        return findByIssignupenabledDoallpostsneedtobeapproved(issignupenabled, doallpostsneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledDoallpostsneedtobeapproved(boolean issignupenabled, boolean doallpostsneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledUsedynamicdns(boolean issignupenabled, boolean usedynamicdns) {
        return findByIssignupenabledUsedynamicdns(issignupenabled, usedynamicdns, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledUsedynamicdns(boolean issignupenabled, boolean usedynamicdns, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledDefaultaccounttypeidatsignup(boolean issignupenabled, int defaultaccounttypeidatsignup) {
        return findByIssignupenabledDefaultaccounttypeidatsignup(issignupenabled, defaultaccounttypeidatsignup, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledDefaultaccounttypeidatsignup(boolean issignupenabled, int defaultaccounttypeidatsignup, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledDefaultmaxspaceinbytes(boolean issignupenabled, int defaultmaxspaceinbytes) {
        return findByIssignupenabledDefaultmaxspaceinbytes(issignupenabled, defaultmaxspaceinbytes, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledDefaultmaxspaceinbytes(boolean issignupenabled, int defaultmaxspaceinbytes, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledTermsofservice(boolean issignupenabled, String termsofservice) {
        return findByIssignupenabledTermsofservice(issignupenabled, termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledTermsofservice(boolean issignupenabled, String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledNewaccountsrequireadminapproval(boolean issignupenabled, boolean newaccountsrequireadminapproval) {
        return findByIssignupenabledNewaccountsrequireadminapproval(issignupenabled, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledNewaccountsrequireadminapproval(boolean issignupenabled, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledForcelogintoviewsites(boolean issignupenabled, boolean forcelogintoviewsites) {
        return findByIssignupenabledForcelogintoviewsites(issignupenabled, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledForcelogintoviewsites(boolean issignupenabled, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledIsweblogscompingon(boolean issignupenabled, boolean isweblogscompingon) {
        return findByIssignupenabledIsweblogscompingon(issignupenabled, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledIsweblogscompingon(boolean issignupenabled, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledEmailtonotifyofnewaccounts(boolean issignupenabled, String emailtonotifyofnewaccounts) {
        return findByIssignupenabledEmailtonotifyofnewaccounts(issignupenabled, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledEmailtonotifyofnewaccounts(boolean issignupenabled, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledEmailapiuniqueidentifier(boolean issignupenabled, String emailapiuniqueidentifier) {
        return findByIssignupenabledEmailapiuniqueidentifier(issignupenabled, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledEmailapiuniqueidentifier(boolean issignupenabled, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledDefaultmaxbandwidth(boolean issignupenabled, int defaultmaxbandwidth) {
        return findByIssignupenabledDefaultmaxbandwidth(issignupenabled, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledDefaultmaxbandwidth(boolean issignupenabled, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledMinpasswordchars(boolean issignupenabled, int minpasswordchars) {
        return findByIssignupenabledMinpasswordchars(issignupenabled, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledMinpasswordchars(boolean issignupenabled, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledMinpassworduppercasechars(boolean issignupenabled, int minpassworduppercasechars) {
        return findByIssignupenabledMinpassworduppercasechars(issignupenabled, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledMinpassworduppercasechars(boolean issignupenabled, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledMinpasswordlowercasechars(boolean issignupenabled, int minpasswordlowercasechars) {
        return findByIssignupenabledMinpasswordlowercasechars(issignupenabled, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledMinpasswordlowercasechars(boolean issignupenabled, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledMinpasswordspecialchars(boolean issignupenabled, int minpasswordspecialchars) {
        return findByIssignupenabledMinpasswordspecialchars(issignupenabled, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledMinpasswordspecialchars(boolean issignupenabled, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledMinpasswordnumericchars(boolean issignupenabled, int minpasswordnumericchars) {
        return findByIssignupenabledMinpasswordnumericchars(issignupenabled, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledMinpasswordnumericchars(boolean issignupenabled, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledIspasswordsentviaemail(boolean issignupenabled, boolean ispasswordsentviaemail) {
        return findByIssignupenabledIspasswordsentviaemail(issignupenabled, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledIspasswordsentviaemail(boolean issignupenabled, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledTermsofuselinktext(boolean issignupenabled, String termsofuselinktext) {
        return findByIssignupenabledTermsofuselinktext(issignupenabled, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledTermsofuselinktext(boolean issignupenabled, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledFeedbacklinktext(boolean issignupenabled, String feedbacklinktext) {
        return findByIssignupenabledFeedbacklinktext(issignupenabled, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledFeedbacklinktext(boolean issignupenabled, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledDoapplyplusertemplatetopro(boolean issignupenabled, boolean doapplyplusertemplatetopro) {
        return findByIssignupenabledDoapplyplusertemplatetopro(issignupenabled, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledDoapplyplusertemplatetopro(boolean issignupenabled, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledPublicsitetemplateid(boolean issignupenabled, int publicsitetemplateid) {
        return findByIssignupenabledPublicsitetemplateid(issignupenabled, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledPublicsitetemplateid(boolean issignupenabled, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledEntlisttemplateid(boolean issignupenabled, int entlisttemplateid) {
        return findByIssignupenabledEntlisttemplateid(issignupenabled, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledEntlisttemplateid(boolean issignupenabled, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledHptemplateid(boolean issignupenabled, int hptemplateid) {
        return findByIssignupenabledHptemplateid(issignupenabled, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledHptemplateid(boolean issignupenabled, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledMarketingsitetemplateid(boolean issignupenabled, int marketingsitetemplateid) {
        return findByIssignupenabledMarketingsitetemplateid(issignupenabled, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledMarketingsitetemplateid(boolean issignupenabled, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledMarketingsitehptemplateid(boolean issignupenabled, int marketingsitehptemplateid) {
        return findByIssignupenabledMarketingsitehptemplateid(issignupenabled, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledMarketingsitehptemplateid(boolean issignupenabled, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledDefaulteventtypeid(boolean issignupenabled, int defaulteventtypeid) {
        return findByIssignupenabledDefaulteventtypeid(issignupenabled, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledDefaulteventtypeid(boolean issignupenabled, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledEncryptedlicense(boolean issignupenabled, String encryptedlicense) {
        return findByIssignupenabledEncryptedlicense(issignupenabled, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledEncryptedlicense(boolean issignupenabled, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledBaseaccountprice(boolean issignupenabled, double baseaccountprice) {
        return findByIssignupenabledBaseaccountprice(issignupenabled, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledBaseaccountprice(boolean issignupenabled, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledPriceper100mbstorage(boolean issignupenabled, double priceper100mbstorage) {
        return findByIssignupenabledPriceper100mbstorage(issignupenabled, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledPriceper100mbstorage(boolean issignupenabled, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledPricepergbbandwidth(boolean issignupenabled, double pricepergbbandwidth) {
        return findByIssignupenabledPricepergbbandwidth(issignupenabled, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledPricepergbbandwidth(boolean issignupenabled, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledIstrackbackenabled(boolean issignupenabled, boolean istrackbackenabled) {
        return findByIssignupenabledIstrackbackenabled(issignupenabled, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledIstrackbackenabled(boolean issignupenabled, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledPlusertemplateid(boolean issignupenabled, int plusertemplateid) {
        return findByIssignupenabledPlusertemplateid(issignupenabled, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledPlusertemplateid(boolean issignupenabled, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledBannerone(boolean issignupenabled, String bannerone) {
        return findByIssignupenabledBannerone(issignupenabled, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledBannerone(boolean issignupenabled, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledBannertwo(boolean issignupenabled, String bannertwo) {
        return findByIssignupenabledBannertwo(issignupenabled, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledBannertwo(boolean issignupenabled, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledBannerthree(boolean issignupenabled, String bannerthree) {
        return findByIssignupenabledBannerthree(issignupenabled, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledBannerthree(boolean issignupenabled, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledShowbannertagsonpro(boolean issignupenabled, boolean showbannertagsonpro) {
        return findByIssignupenabledShowbannertagsonpro(issignupenabled, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledShowbannertagsonpro(boolean issignupenabled, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledIsemailactivationofaccountsrequired(boolean issignupenabled, boolean isemailactivationofaccountsrequired) {
        return findByIssignupenabledIsemailactivationofaccountsrequired(issignupenabled, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledIsemailactivationofaccountsrequired(boolean issignupenabled, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledEmailtextactivationmessage(boolean issignupenabled, String emailtextactivationmessage) {
        return findByIssignupenabledEmailtextactivationmessage(issignupenabled, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledEmailtextactivationmessage(boolean issignupenabled, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledEmailsubjectactivationmessage(boolean issignupenabled, String emailsubjectactivationmessage) {
        return findByIssignupenabledEmailsubjectactivationmessage(issignupenabled, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledEmailsubjectactivationmessage(boolean issignupenabled, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledEmailtextwelcomemessage(boolean issignupenabled, String emailtextwelcomemessage) {
        return findByIssignupenabledEmailtextwelcomemessage(issignupenabled, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledEmailtextwelcomemessage(boolean issignupenabled, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledEmailsubjectwelcomemessage(boolean issignupenabled, String emailsubjectwelcomemessage) {
        return findByIssignupenabledEmailsubjectwelcomemessage(issignupenabled, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledEmailsubjectwelcomemessage(boolean issignupenabled, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIssignupenabledAccountupgradeurl(boolean issignupenabled, String accountupgradeurl) {
        return findByIssignupenabledAccountupgradeurl(issignupenabled, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIssignupenabledAccountupgradeurl(boolean issignupenabled, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE issignupenabled='"+reger.core.Util.booleanAsSQLText(issignupenabled)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDoesflaggedcontentneedtobeapproved(boolean iscontentflaggingon, boolean doesflaggedcontentneedtobeapproved) {
        return findByIscontentflaggingonDoesflaggedcontentneedtobeapproved(iscontentflaggingon, doesflaggedcontentneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDoesflaggedcontentneedtobeapproved(boolean iscontentflaggingon, boolean doesflaggedcontentneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDoallpostsneedtobeapproved(boolean iscontentflaggingon, boolean doallpostsneedtobeapproved) {
        return findByIscontentflaggingonDoallpostsneedtobeapproved(iscontentflaggingon, doallpostsneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDoallpostsneedtobeapproved(boolean iscontentflaggingon, boolean doallpostsneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonUsedynamicdns(boolean iscontentflaggingon, boolean usedynamicdns) {
        return findByIscontentflaggingonUsedynamicdns(iscontentflaggingon, usedynamicdns, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonUsedynamicdns(boolean iscontentflaggingon, boolean usedynamicdns, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDefaultaccounttypeidatsignup(boolean iscontentflaggingon, int defaultaccounttypeidatsignup) {
        return findByIscontentflaggingonDefaultaccounttypeidatsignup(iscontentflaggingon, defaultaccounttypeidatsignup, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDefaultaccounttypeidatsignup(boolean iscontentflaggingon, int defaultaccounttypeidatsignup, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDefaultmaxspaceinbytes(boolean iscontentflaggingon, int defaultmaxspaceinbytes) {
        return findByIscontentflaggingonDefaultmaxspaceinbytes(iscontentflaggingon, defaultmaxspaceinbytes, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDefaultmaxspaceinbytes(boolean iscontentflaggingon, int defaultmaxspaceinbytes, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonTermsofservice(boolean iscontentflaggingon, String termsofservice) {
        return findByIscontentflaggingonTermsofservice(iscontentflaggingon, termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonTermsofservice(boolean iscontentflaggingon, String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonNewaccountsrequireadminapproval(boolean iscontentflaggingon, boolean newaccountsrequireadminapproval) {
        return findByIscontentflaggingonNewaccountsrequireadminapproval(iscontentflaggingon, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonNewaccountsrequireadminapproval(boolean iscontentflaggingon, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonForcelogintoviewsites(boolean iscontentflaggingon, boolean forcelogintoviewsites) {
        return findByIscontentflaggingonForcelogintoviewsites(iscontentflaggingon, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonForcelogintoviewsites(boolean iscontentflaggingon, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonIsweblogscompingon(boolean iscontentflaggingon, boolean isweblogscompingon) {
        return findByIscontentflaggingonIsweblogscompingon(iscontentflaggingon, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonIsweblogscompingon(boolean iscontentflaggingon, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEmailtonotifyofnewaccounts(boolean iscontentflaggingon, String emailtonotifyofnewaccounts) {
        return findByIscontentflaggingonEmailtonotifyofnewaccounts(iscontentflaggingon, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEmailtonotifyofnewaccounts(boolean iscontentflaggingon, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEmailapiuniqueidentifier(boolean iscontentflaggingon, String emailapiuniqueidentifier) {
        return findByIscontentflaggingonEmailapiuniqueidentifier(iscontentflaggingon, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEmailapiuniqueidentifier(boolean iscontentflaggingon, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDefaultmaxbandwidth(boolean iscontentflaggingon, int defaultmaxbandwidth) {
        return findByIscontentflaggingonDefaultmaxbandwidth(iscontentflaggingon, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDefaultmaxbandwidth(boolean iscontentflaggingon, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMinpasswordchars(boolean iscontentflaggingon, int minpasswordchars) {
        return findByIscontentflaggingonMinpasswordchars(iscontentflaggingon, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMinpasswordchars(boolean iscontentflaggingon, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMinpassworduppercasechars(boolean iscontentflaggingon, int minpassworduppercasechars) {
        return findByIscontentflaggingonMinpassworduppercasechars(iscontentflaggingon, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMinpassworduppercasechars(boolean iscontentflaggingon, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMinpasswordlowercasechars(boolean iscontentflaggingon, int minpasswordlowercasechars) {
        return findByIscontentflaggingonMinpasswordlowercasechars(iscontentflaggingon, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMinpasswordlowercasechars(boolean iscontentflaggingon, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMinpasswordspecialchars(boolean iscontentflaggingon, int minpasswordspecialchars) {
        return findByIscontentflaggingonMinpasswordspecialchars(iscontentflaggingon, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMinpasswordspecialchars(boolean iscontentflaggingon, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMinpasswordnumericchars(boolean iscontentflaggingon, int minpasswordnumericchars) {
        return findByIscontentflaggingonMinpasswordnumericchars(iscontentflaggingon, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMinpasswordnumericchars(boolean iscontentflaggingon, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonIspasswordsentviaemail(boolean iscontentflaggingon, boolean ispasswordsentviaemail) {
        return findByIscontentflaggingonIspasswordsentviaemail(iscontentflaggingon, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonIspasswordsentviaemail(boolean iscontentflaggingon, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonTermsofuselinktext(boolean iscontentflaggingon, String termsofuselinktext) {
        return findByIscontentflaggingonTermsofuselinktext(iscontentflaggingon, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonTermsofuselinktext(boolean iscontentflaggingon, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonFeedbacklinktext(boolean iscontentflaggingon, String feedbacklinktext) {
        return findByIscontentflaggingonFeedbacklinktext(iscontentflaggingon, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonFeedbacklinktext(boolean iscontentflaggingon, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDoapplyplusertemplatetopro(boolean iscontentflaggingon, boolean doapplyplusertemplatetopro) {
        return findByIscontentflaggingonDoapplyplusertemplatetopro(iscontentflaggingon, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDoapplyplusertemplatetopro(boolean iscontentflaggingon, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonPublicsitetemplateid(boolean iscontentflaggingon, int publicsitetemplateid) {
        return findByIscontentflaggingonPublicsitetemplateid(iscontentflaggingon, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonPublicsitetemplateid(boolean iscontentflaggingon, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEntlisttemplateid(boolean iscontentflaggingon, int entlisttemplateid) {
        return findByIscontentflaggingonEntlisttemplateid(iscontentflaggingon, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEntlisttemplateid(boolean iscontentflaggingon, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonHptemplateid(boolean iscontentflaggingon, int hptemplateid) {
        return findByIscontentflaggingonHptemplateid(iscontentflaggingon, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonHptemplateid(boolean iscontentflaggingon, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMarketingsitetemplateid(boolean iscontentflaggingon, int marketingsitetemplateid) {
        return findByIscontentflaggingonMarketingsitetemplateid(iscontentflaggingon, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMarketingsitetemplateid(boolean iscontentflaggingon, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMarketingsitehptemplateid(boolean iscontentflaggingon, int marketingsitehptemplateid) {
        return findByIscontentflaggingonMarketingsitehptemplateid(iscontentflaggingon, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonMarketingsitehptemplateid(boolean iscontentflaggingon, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDefaulteventtypeid(boolean iscontentflaggingon, int defaulteventtypeid) {
        return findByIscontentflaggingonDefaulteventtypeid(iscontentflaggingon, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonDefaulteventtypeid(boolean iscontentflaggingon, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEncryptedlicense(boolean iscontentflaggingon, String encryptedlicense) {
        return findByIscontentflaggingonEncryptedlicense(iscontentflaggingon, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEncryptedlicense(boolean iscontentflaggingon, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonBaseaccountprice(boolean iscontentflaggingon, double baseaccountprice) {
        return findByIscontentflaggingonBaseaccountprice(iscontentflaggingon, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonBaseaccountprice(boolean iscontentflaggingon, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonPriceper100mbstorage(boolean iscontentflaggingon, double priceper100mbstorage) {
        return findByIscontentflaggingonPriceper100mbstorage(iscontentflaggingon, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonPriceper100mbstorage(boolean iscontentflaggingon, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonPricepergbbandwidth(boolean iscontentflaggingon, double pricepergbbandwidth) {
        return findByIscontentflaggingonPricepergbbandwidth(iscontentflaggingon, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonPricepergbbandwidth(boolean iscontentflaggingon, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonIstrackbackenabled(boolean iscontentflaggingon, boolean istrackbackenabled) {
        return findByIscontentflaggingonIstrackbackenabled(iscontentflaggingon, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonIstrackbackenabled(boolean iscontentflaggingon, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonPlusertemplateid(boolean iscontentflaggingon, int plusertemplateid) {
        return findByIscontentflaggingonPlusertemplateid(iscontentflaggingon, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonPlusertemplateid(boolean iscontentflaggingon, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonBannerone(boolean iscontentflaggingon, String bannerone) {
        return findByIscontentflaggingonBannerone(iscontentflaggingon, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonBannerone(boolean iscontentflaggingon, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonBannertwo(boolean iscontentflaggingon, String bannertwo) {
        return findByIscontentflaggingonBannertwo(iscontentflaggingon, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonBannertwo(boolean iscontentflaggingon, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonBannerthree(boolean iscontentflaggingon, String bannerthree) {
        return findByIscontentflaggingonBannerthree(iscontentflaggingon, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonBannerthree(boolean iscontentflaggingon, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonShowbannertagsonpro(boolean iscontentflaggingon, boolean showbannertagsonpro) {
        return findByIscontentflaggingonShowbannertagsonpro(iscontentflaggingon, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonShowbannertagsonpro(boolean iscontentflaggingon, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonIsemailactivationofaccountsrequired(boolean iscontentflaggingon, boolean isemailactivationofaccountsrequired) {
        return findByIscontentflaggingonIsemailactivationofaccountsrequired(iscontentflaggingon, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonIsemailactivationofaccountsrequired(boolean iscontentflaggingon, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEmailtextactivationmessage(boolean iscontentflaggingon, String emailtextactivationmessage) {
        return findByIscontentflaggingonEmailtextactivationmessage(iscontentflaggingon, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEmailtextactivationmessage(boolean iscontentflaggingon, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEmailsubjectactivationmessage(boolean iscontentflaggingon, String emailsubjectactivationmessage) {
        return findByIscontentflaggingonEmailsubjectactivationmessage(iscontentflaggingon, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEmailsubjectactivationmessage(boolean iscontentflaggingon, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEmailtextwelcomemessage(boolean iscontentflaggingon, String emailtextwelcomemessage) {
        return findByIscontentflaggingonEmailtextwelcomemessage(iscontentflaggingon, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEmailtextwelcomemessage(boolean iscontentflaggingon, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEmailsubjectwelcomemessage(boolean iscontentflaggingon, String emailsubjectwelcomemessage) {
        return findByIscontentflaggingonEmailsubjectwelcomemessage(iscontentflaggingon, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonEmailsubjectwelcomemessage(boolean iscontentflaggingon, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonAccountupgradeurl(boolean iscontentflaggingon, String accountupgradeurl) {
        return findByIscontentflaggingonAccountupgradeurl(iscontentflaggingon, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIscontentflaggingonAccountupgradeurl(boolean iscontentflaggingon, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE iscontentflaggingon='"+reger.core.Util.booleanAsSQLText(iscontentflaggingon)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedDoallpostsneedtobeapproved(boolean doesflaggedcontentneedtobeapproved, boolean doallpostsneedtobeapproved) {
        return findByDoesflaggedcontentneedtobeapprovedDoallpostsneedtobeapproved(doesflaggedcontentneedtobeapproved, doallpostsneedtobeapproved, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedDoallpostsneedtobeapproved(boolean doesflaggedcontentneedtobeapproved, boolean doallpostsneedtobeapproved, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedUsedynamicdns(boolean doesflaggedcontentneedtobeapproved, boolean usedynamicdns) {
        return findByDoesflaggedcontentneedtobeapprovedUsedynamicdns(doesflaggedcontentneedtobeapproved, usedynamicdns, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedUsedynamicdns(boolean doesflaggedcontentneedtobeapproved, boolean usedynamicdns, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedDefaultaccounttypeidatsignup(boolean doesflaggedcontentneedtobeapproved, int defaultaccounttypeidatsignup) {
        return findByDoesflaggedcontentneedtobeapprovedDefaultaccounttypeidatsignup(doesflaggedcontentneedtobeapproved, defaultaccounttypeidatsignup, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedDefaultaccounttypeidatsignup(boolean doesflaggedcontentneedtobeapproved, int defaultaccounttypeidatsignup, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedDefaultmaxspaceinbytes(boolean doesflaggedcontentneedtobeapproved, int defaultmaxspaceinbytes) {
        return findByDoesflaggedcontentneedtobeapprovedDefaultmaxspaceinbytes(doesflaggedcontentneedtobeapproved, defaultmaxspaceinbytes, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedDefaultmaxspaceinbytes(boolean doesflaggedcontentneedtobeapproved, int defaultmaxspaceinbytes, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedTermsofservice(boolean doesflaggedcontentneedtobeapproved, String termsofservice) {
        return findByDoesflaggedcontentneedtobeapprovedTermsofservice(doesflaggedcontentneedtobeapproved, termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedTermsofservice(boolean doesflaggedcontentneedtobeapproved, String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedNewaccountsrequireadminapproval(boolean doesflaggedcontentneedtobeapproved, boolean newaccountsrequireadminapproval) {
        return findByDoesflaggedcontentneedtobeapprovedNewaccountsrequireadminapproval(doesflaggedcontentneedtobeapproved, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedNewaccountsrequireadminapproval(boolean doesflaggedcontentneedtobeapproved, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedForcelogintoviewsites(boolean doesflaggedcontentneedtobeapproved, boolean forcelogintoviewsites) {
        return findByDoesflaggedcontentneedtobeapprovedForcelogintoviewsites(doesflaggedcontentneedtobeapproved, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedForcelogintoviewsites(boolean doesflaggedcontentneedtobeapproved, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedIsweblogscompingon(boolean doesflaggedcontentneedtobeapproved, boolean isweblogscompingon) {
        return findByDoesflaggedcontentneedtobeapprovedIsweblogscompingon(doesflaggedcontentneedtobeapproved, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedIsweblogscompingon(boolean doesflaggedcontentneedtobeapproved, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEmailtonotifyofnewaccounts(boolean doesflaggedcontentneedtobeapproved, String emailtonotifyofnewaccounts) {
        return findByDoesflaggedcontentneedtobeapprovedEmailtonotifyofnewaccounts(doesflaggedcontentneedtobeapproved, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEmailtonotifyofnewaccounts(boolean doesflaggedcontentneedtobeapproved, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEmailapiuniqueidentifier(boolean doesflaggedcontentneedtobeapproved, String emailapiuniqueidentifier) {
        return findByDoesflaggedcontentneedtobeapprovedEmailapiuniqueidentifier(doesflaggedcontentneedtobeapproved, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEmailapiuniqueidentifier(boolean doesflaggedcontentneedtobeapproved, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedDefaultmaxbandwidth(boolean doesflaggedcontentneedtobeapproved, int defaultmaxbandwidth) {
        return findByDoesflaggedcontentneedtobeapprovedDefaultmaxbandwidth(doesflaggedcontentneedtobeapproved, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedDefaultmaxbandwidth(boolean doesflaggedcontentneedtobeapproved, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMinpasswordchars(boolean doesflaggedcontentneedtobeapproved, int minpasswordchars) {
        return findByDoesflaggedcontentneedtobeapprovedMinpasswordchars(doesflaggedcontentneedtobeapproved, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMinpasswordchars(boolean doesflaggedcontentneedtobeapproved, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMinpassworduppercasechars(boolean doesflaggedcontentneedtobeapproved, int minpassworduppercasechars) {
        return findByDoesflaggedcontentneedtobeapprovedMinpassworduppercasechars(doesflaggedcontentneedtobeapproved, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMinpassworduppercasechars(boolean doesflaggedcontentneedtobeapproved, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMinpasswordlowercasechars(boolean doesflaggedcontentneedtobeapproved, int minpasswordlowercasechars) {
        return findByDoesflaggedcontentneedtobeapprovedMinpasswordlowercasechars(doesflaggedcontentneedtobeapproved, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMinpasswordlowercasechars(boolean doesflaggedcontentneedtobeapproved, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMinpasswordspecialchars(boolean doesflaggedcontentneedtobeapproved, int minpasswordspecialchars) {
        return findByDoesflaggedcontentneedtobeapprovedMinpasswordspecialchars(doesflaggedcontentneedtobeapproved, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMinpasswordspecialchars(boolean doesflaggedcontentneedtobeapproved, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMinpasswordnumericchars(boolean doesflaggedcontentneedtobeapproved, int minpasswordnumericchars) {
        return findByDoesflaggedcontentneedtobeapprovedMinpasswordnumericchars(doesflaggedcontentneedtobeapproved, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMinpasswordnumericchars(boolean doesflaggedcontentneedtobeapproved, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedIspasswordsentviaemail(boolean doesflaggedcontentneedtobeapproved, boolean ispasswordsentviaemail) {
        return findByDoesflaggedcontentneedtobeapprovedIspasswordsentviaemail(doesflaggedcontentneedtobeapproved, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedIspasswordsentviaemail(boolean doesflaggedcontentneedtobeapproved, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedTermsofuselinktext(boolean doesflaggedcontentneedtobeapproved, String termsofuselinktext) {
        return findByDoesflaggedcontentneedtobeapprovedTermsofuselinktext(doesflaggedcontentneedtobeapproved, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedTermsofuselinktext(boolean doesflaggedcontentneedtobeapproved, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedFeedbacklinktext(boolean doesflaggedcontentneedtobeapproved, String feedbacklinktext) {
        return findByDoesflaggedcontentneedtobeapprovedFeedbacklinktext(doesflaggedcontentneedtobeapproved, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedFeedbacklinktext(boolean doesflaggedcontentneedtobeapproved, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedDoapplyplusertemplatetopro(boolean doesflaggedcontentneedtobeapproved, boolean doapplyplusertemplatetopro) {
        return findByDoesflaggedcontentneedtobeapprovedDoapplyplusertemplatetopro(doesflaggedcontentneedtobeapproved, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedDoapplyplusertemplatetopro(boolean doesflaggedcontentneedtobeapproved, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedPublicsitetemplateid(boolean doesflaggedcontentneedtobeapproved, int publicsitetemplateid) {
        return findByDoesflaggedcontentneedtobeapprovedPublicsitetemplateid(doesflaggedcontentneedtobeapproved, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedPublicsitetemplateid(boolean doesflaggedcontentneedtobeapproved, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEntlisttemplateid(boolean doesflaggedcontentneedtobeapproved, int entlisttemplateid) {
        return findByDoesflaggedcontentneedtobeapprovedEntlisttemplateid(doesflaggedcontentneedtobeapproved, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEntlisttemplateid(boolean doesflaggedcontentneedtobeapproved, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedHptemplateid(boolean doesflaggedcontentneedtobeapproved, int hptemplateid) {
        return findByDoesflaggedcontentneedtobeapprovedHptemplateid(doesflaggedcontentneedtobeapproved, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedHptemplateid(boolean doesflaggedcontentneedtobeapproved, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMarketingsitetemplateid(boolean doesflaggedcontentneedtobeapproved, int marketingsitetemplateid) {
        return findByDoesflaggedcontentneedtobeapprovedMarketingsitetemplateid(doesflaggedcontentneedtobeapproved, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMarketingsitetemplateid(boolean doesflaggedcontentneedtobeapproved, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMarketingsitehptemplateid(boolean doesflaggedcontentneedtobeapproved, int marketingsitehptemplateid) {
        return findByDoesflaggedcontentneedtobeapprovedMarketingsitehptemplateid(doesflaggedcontentneedtobeapproved, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedMarketingsitehptemplateid(boolean doesflaggedcontentneedtobeapproved, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedDefaulteventtypeid(boolean doesflaggedcontentneedtobeapproved, int defaulteventtypeid) {
        return findByDoesflaggedcontentneedtobeapprovedDefaulteventtypeid(doesflaggedcontentneedtobeapproved, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedDefaulteventtypeid(boolean doesflaggedcontentneedtobeapproved, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEncryptedlicense(boolean doesflaggedcontentneedtobeapproved, String encryptedlicense) {
        return findByDoesflaggedcontentneedtobeapprovedEncryptedlicense(doesflaggedcontentneedtobeapproved, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEncryptedlicense(boolean doesflaggedcontentneedtobeapproved, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedBaseaccountprice(boolean doesflaggedcontentneedtobeapproved, double baseaccountprice) {
        return findByDoesflaggedcontentneedtobeapprovedBaseaccountprice(doesflaggedcontentneedtobeapproved, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedBaseaccountprice(boolean doesflaggedcontentneedtobeapproved, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedPriceper100mbstorage(boolean doesflaggedcontentneedtobeapproved, double priceper100mbstorage) {
        return findByDoesflaggedcontentneedtobeapprovedPriceper100mbstorage(doesflaggedcontentneedtobeapproved, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedPriceper100mbstorage(boolean doesflaggedcontentneedtobeapproved, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedPricepergbbandwidth(boolean doesflaggedcontentneedtobeapproved, double pricepergbbandwidth) {
        return findByDoesflaggedcontentneedtobeapprovedPricepergbbandwidth(doesflaggedcontentneedtobeapproved, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedPricepergbbandwidth(boolean doesflaggedcontentneedtobeapproved, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedIstrackbackenabled(boolean doesflaggedcontentneedtobeapproved, boolean istrackbackenabled) {
        return findByDoesflaggedcontentneedtobeapprovedIstrackbackenabled(doesflaggedcontentneedtobeapproved, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedIstrackbackenabled(boolean doesflaggedcontentneedtobeapproved, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedPlusertemplateid(boolean doesflaggedcontentneedtobeapproved, int plusertemplateid) {
        return findByDoesflaggedcontentneedtobeapprovedPlusertemplateid(doesflaggedcontentneedtobeapproved, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedPlusertemplateid(boolean doesflaggedcontentneedtobeapproved, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedBannerone(boolean doesflaggedcontentneedtobeapproved, String bannerone) {
        return findByDoesflaggedcontentneedtobeapprovedBannerone(doesflaggedcontentneedtobeapproved, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedBannerone(boolean doesflaggedcontentneedtobeapproved, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedBannertwo(boolean doesflaggedcontentneedtobeapproved, String bannertwo) {
        return findByDoesflaggedcontentneedtobeapprovedBannertwo(doesflaggedcontentneedtobeapproved, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedBannertwo(boolean doesflaggedcontentneedtobeapproved, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedBannerthree(boolean doesflaggedcontentneedtobeapproved, String bannerthree) {
        return findByDoesflaggedcontentneedtobeapprovedBannerthree(doesflaggedcontentneedtobeapproved, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedBannerthree(boolean doesflaggedcontentneedtobeapproved, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedShowbannertagsonpro(boolean doesflaggedcontentneedtobeapproved, boolean showbannertagsonpro) {
        return findByDoesflaggedcontentneedtobeapprovedShowbannertagsonpro(doesflaggedcontentneedtobeapproved, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedShowbannertagsonpro(boolean doesflaggedcontentneedtobeapproved, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedIsemailactivationofaccountsrequired(boolean doesflaggedcontentneedtobeapproved, boolean isemailactivationofaccountsrequired) {
        return findByDoesflaggedcontentneedtobeapprovedIsemailactivationofaccountsrequired(doesflaggedcontentneedtobeapproved, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedIsemailactivationofaccountsrequired(boolean doesflaggedcontentneedtobeapproved, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEmailtextactivationmessage(boolean doesflaggedcontentneedtobeapproved, String emailtextactivationmessage) {
        return findByDoesflaggedcontentneedtobeapprovedEmailtextactivationmessage(doesflaggedcontentneedtobeapproved, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEmailtextactivationmessage(boolean doesflaggedcontentneedtobeapproved, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEmailsubjectactivationmessage(boolean doesflaggedcontentneedtobeapproved, String emailsubjectactivationmessage) {
        return findByDoesflaggedcontentneedtobeapprovedEmailsubjectactivationmessage(doesflaggedcontentneedtobeapproved, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEmailsubjectactivationmessage(boolean doesflaggedcontentneedtobeapproved, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEmailtextwelcomemessage(boolean doesflaggedcontentneedtobeapproved, String emailtextwelcomemessage) {
        return findByDoesflaggedcontentneedtobeapprovedEmailtextwelcomemessage(doesflaggedcontentneedtobeapproved, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEmailtextwelcomemessage(boolean doesflaggedcontentneedtobeapproved, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEmailsubjectwelcomemessage(boolean doesflaggedcontentneedtobeapproved, String emailsubjectwelcomemessage) {
        return findByDoesflaggedcontentneedtobeapprovedEmailsubjectwelcomemessage(doesflaggedcontentneedtobeapproved, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedEmailsubjectwelcomemessage(boolean doesflaggedcontentneedtobeapproved, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedAccountupgradeurl(boolean doesflaggedcontentneedtobeapproved, String accountupgradeurl) {
        return findByDoesflaggedcontentneedtobeapprovedAccountupgradeurl(doesflaggedcontentneedtobeapproved, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoesflaggedcontentneedtobeapprovedAccountupgradeurl(boolean doesflaggedcontentneedtobeapproved, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doesflaggedcontentneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doesflaggedcontentneedtobeapproved)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedUsedynamicdns(boolean doallpostsneedtobeapproved, boolean usedynamicdns) {
        return findByDoallpostsneedtobeapprovedUsedynamicdns(doallpostsneedtobeapproved, usedynamicdns, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedUsedynamicdns(boolean doallpostsneedtobeapproved, boolean usedynamicdns, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedDefaultaccounttypeidatsignup(boolean doallpostsneedtobeapproved, int defaultaccounttypeidatsignup) {
        return findByDoallpostsneedtobeapprovedDefaultaccounttypeidatsignup(doallpostsneedtobeapproved, defaultaccounttypeidatsignup, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedDefaultaccounttypeidatsignup(boolean doallpostsneedtobeapproved, int defaultaccounttypeidatsignup, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedDefaultmaxspaceinbytes(boolean doallpostsneedtobeapproved, int defaultmaxspaceinbytes) {
        return findByDoallpostsneedtobeapprovedDefaultmaxspaceinbytes(doallpostsneedtobeapproved, defaultmaxspaceinbytes, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedDefaultmaxspaceinbytes(boolean doallpostsneedtobeapproved, int defaultmaxspaceinbytes, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedTermsofservice(boolean doallpostsneedtobeapproved, String termsofservice) {
        return findByDoallpostsneedtobeapprovedTermsofservice(doallpostsneedtobeapproved, termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedTermsofservice(boolean doallpostsneedtobeapproved, String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedNewaccountsrequireadminapproval(boolean doallpostsneedtobeapproved, boolean newaccountsrequireadminapproval) {
        return findByDoallpostsneedtobeapprovedNewaccountsrequireadminapproval(doallpostsneedtobeapproved, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedNewaccountsrequireadminapproval(boolean doallpostsneedtobeapproved, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedForcelogintoviewsites(boolean doallpostsneedtobeapproved, boolean forcelogintoviewsites) {
        return findByDoallpostsneedtobeapprovedForcelogintoviewsites(doallpostsneedtobeapproved, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedForcelogintoviewsites(boolean doallpostsneedtobeapproved, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedIsweblogscompingon(boolean doallpostsneedtobeapproved, boolean isweblogscompingon) {
        return findByDoallpostsneedtobeapprovedIsweblogscompingon(doallpostsneedtobeapproved, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedIsweblogscompingon(boolean doallpostsneedtobeapproved, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEmailtonotifyofnewaccounts(boolean doallpostsneedtobeapproved, String emailtonotifyofnewaccounts) {
        return findByDoallpostsneedtobeapprovedEmailtonotifyofnewaccounts(doallpostsneedtobeapproved, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEmailtonotifyofnewaccounts(boolean doallpostsneedtobeapproved, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEmailapiuniqueidentifier(boolean doallpostsneedtobeapproved, String emailapiuniqueidentifier) {
        return findByDoallpostsneedtobeapprovedEmailapiuniqueidentifier(doallpostsneedtobeapproved, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEmailapiuniqueidentifier(boolean doallpostsneedtobeapproved, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedDefaultmaxbandwidth(boolean doallpostsneedtobeapproved, int defaultmaxbandwidth) {
        return findByDoallpostsneedtobeapprovedDefaultmaxbandwidth(doallpostsneedtobeapproved, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedDefaultmaxbandwidth(boolean doallpostsneedtobeapproved, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMinpasswordchars(boolean doallpostsneedtobeapproved, int minpasswordchars) {
        return findByDoallpostsneedtobeapprovedMinpasswordchars(doallpostsneedtobeapproved, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMinpasswordchars(boolean doallpostsneedtobeapproved, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMinpassworduppercasechars(boolean doallpostsneedtobeapproved, int minpassworduppercasechars) {
        return findByDoallpostsneedtobeapprovedMinpassworduppercasechars(doallpostsneedtobeapproved, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMinpassworduppercasechars(boolean doallpostsneedtobeapproved, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMinpasswordlowercasechars(boolean doallpostsneedtobeapproved, int minpasswordlowercasechars) {
        return findByDoallpostsneedtobeapprovedMinpasswordlowercasechars(doallpostsneedtobeapproved, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMinpasswordlowercasechars(boolean doallpostsneedtobeapproved, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMinpasswordspecialchars(boolean doallpostsneedtobeapproved, int minpasswordspecialchars) {
        return findByDoallpostsneedtobeapprovedMinpasswordspecialchars(doallpostsneedtobeapproved, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMinpasswordspecialchars(boolean doallpostsneedtobeapproved, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMinpasswordnumericchars(boolean doallpostsneedtobeapproved, int minpasswordnumericchars) {
        return findByDoallpostsneedtobeapprovedMinpasswordnumericchars(doallpostsneedtobeapproved, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMinpasswordnumericchars(boolean doallpostsneedtobeapproved, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedIspasswordsentviaemail(boolean doallpostsneedtobeapproved, boolean ispasswordsentviaemail) {
        return findByDoallpostsneedtobeapprovedIspasswordsentviaemail(doallpostsneedtobeapproved, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedIspasswordsentviaemail(boolean doallpostsneedtobeapproved, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedTermsofuselinktext(boolean doallpostsneedtobeapproved, String termsofuselinktext) {
        return findByDoallpostsneedtobeapprovedTermsofuselinktext(doallpostsneedtobeapproved, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedTermsofuselinktext(boolean doallpostsneedtobeapproved, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedFeedbacklinktext(boolean doallpostsneedtobeapproved, String feedbacklinktext) {
        return findByDoallpostsneedtobeapprovedFeedbacklinktext(doallpostsneedtobeapproved, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedFeedbacklinktext(boolean doallpostsneedtobeapproved, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedDoapplyplusertemplatetopro(boolean doallpostsneedtobeapproved, boolean doapplyplusertemplatetopro) {
        return findByDoallpostsneedtobeapprovedDoapplyplusertemplatetopro(doallpostsneedtobeapproved, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedDoapplyplusertemplatetopro(boolean doallpostsneedtobeapproved, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedPublicsitetemplateid(boolean doallpostsneedtobeapproved, int publicsitetemplateid) {
        return findByDoallpostsneedtobeapprovedPublicsitetemplateid(doallpostsneedtobeapproved, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedPublicsitetemplateid(boolean doallpostsneedtobeapproved, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEntlisttemplateid(boolean doallpostsneedtobeapproved, int entlisttemplateid) {
        return findByDoallpostsneedtobeapprovedEntlisttemplateid(doallpostsneedtobeapproved, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEntlisttemplateid(boolean doallpostsneedtobeapproved, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedHptemplateid(boolean doallpostsneedtobeapproved, int hptemplateid) {
        return findByDoallpostsneedtobeapprovedHptemplateid(doallpostsneedtobeapproved, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedHptemplateid(boolean doallpostsneedtobeapproved, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMarketingsitetemplateid(boolean doallpostsneedtobeapproved, int marketingsitetemplateid) {
        return findByDoallpostsneedtobeapprovedMarketingsitetemplateid(doallpostsneedtobeapproved, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMarketingsitetemplateid(boolean doallpostsneedtobeapproved, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMarketingsitehptemplateid(boolean doallpostsneedtobeapproved, int marketingsitehptemplateid) {
        return findByDoallpostsneedtobeapprovedMarketingsitehptemplateid(doallpostsneedtobeapproved, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedMarketingsitehptemplateid(boolean doallpostsneedtobeapproved, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedDefaulteventtypeid(boolean doallpostsneedtobeapproved, int defaulteventtypeid) {
        return findByDoallpostsneedtobeapprovedDefaulteventtypeid(doallpostsneedtobeapproved, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedDefaulteventtypeid(boolean doallpostsneedtobeapproved, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEncryptedlicense(boolean doallpostsneedtobeapproved, String encryptedlicense) {
        return findByDoallpostsneedtobeapprovedEncryptedlicense(doallpostsneedtobeapproved, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEncryptedlicense(boolean doallpostsneedtobeapproved, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedBaseaccountprice(boolean doallpostsneedtobeapproved, double baseaccountprice) {
        return findByDoallpostsneedtobeapprovedBaseaccountprice(doallpostsneedtobeapproved, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedBaseaccountprice(boolean doallpostsneedtobeapproved, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedPriceper100mbstorage(boolean doallpostsneedtobeapproved, double priceper100mbstorage) {
        return findByDoallpostsneedtobeapprovedPriceper100mbstorage(doallpostsneedtobeapproved, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedPriceper100mbstorage(boolean doallpostsneedtobeapproved, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedPricepergbbandwidth(boolean doallpostsneedtobeapproved, double pricepergbbandwidth) {
        return findByDoallpostsneedtobeapprovedPricepergbbandwidth(doallpostsneedtobeapproved, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedPricepergbbandwidth(boolean doallpostsneedtobeapproved, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedIstrackbackenabled(boolean doallpostsneedtobeapproved, boolean istrackbackenabled) {
        return findByDoallpostsneedtobeapprovedIstrackbackenabled(doallpostsneedtobeapproved, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedIstrackbackenabled(boolean doallpostsneedtobeapproved, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedPlusertemplateid(boolean doallpostsneedtobeapproved, int plusertemplateid) {
        return findByDoallpostsneedtobeapprovedPlusertemplateid(doallpostsneedtobeapproved, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedPlusertemplateid(boolean doallpostsneedtobeapproved, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedBannerone(boolean doallpostsneedtobeapproved, String bannerone) {
        return findByDoallpostsneedtobeapprovedBannerone(doallpostsneedtobeapproved, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedBannerone(boolean doallpostsneedtobeapproved, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedBannertwo(boolean doallpostsneedtobeapproved, String bannertwo) {
        return findByDoallpostsneedtobeapprovedBannertwo(doallpostsneedtobeapproved, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedBannertwo(boolean doallpostsneedtobeapproved, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedBannerthree(boolean doallpostsneedtobeapproved, String bannerthree) {
        return findByDoallpostsneedtobeapprovedBannerthree(doallpostsneedtobeapproved, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedBannerthree(boolean doallpostsneedtobeapproved, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedShowbannertagsonpro(boolean doallpostsneedtobeapproved, boolean showbannertagsonpro) {
        return findByDoallpostsneedtobeapprovedShowbannertagsonpro(doallpostsneedtobeapproved, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedShowbannertagsonpro(boolean doallpostsneedtobeapproved, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedIsemailactivationofaccountsrequired(boolean doallpostsneedtobeapproved, boolean isemailactivationofaccountsrequired) {
        return findByDoallpostsneedtobeapprovedIsemailactivationofaccountsrequired(doallpostsneedtobeapproved, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedIsemailactivationofaccountsrequired(boolean doallpostsneedtobeapproved, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEmailtextactivationmessage(boolean doallpostsneedtobeapproved, String emailtextactivationmessage) {
        return findByDoallpostsneedtobeapprovedEmailtextactivationmessage(doallpostsneedtobeapproved, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEmailtextactivationmessage(boolean doallpostsneedtobeapproved, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEmailsubjectactivationmessage(boolean doallpostsneedtobeapproved, String emailsubjectactivationmessage) {
        return findByDoallpostsneedtobeapprovedEmailsubjectactivationmessage(doallpostsneedtobeapproved, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEmailsubjectactivationmessage(boolean doallpostsneedtobeapproved, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEmailtextwelcomemessage(boolean doallpostsneedtobeapproved, String emailtextwelcomemessage) {
        return findByDoallpostsneedtobeapprovedEmailtextwelcomemessage(doallpostsneedtobeapproved, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEmailtextwelcomemessage(boolean doallpostsneedtobeapproved, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEmailsubjectwelcomemessage(boolean doallpostsneedtobeapproved, String emailsubjectwelcomemessage) {
        return findByDoallpostsneedtobeapprovedEmailsubjectwelcomemessage(doallpostsneedtobeapproved, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedEmailsubjectwelcomemessage(boolean doallpostsneedtobeapproved, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedAccountupgradeurl(boolean doallpostsneedtobeapproved, String accountupgradeurl) {
        return findByDoallpostsneedtobeapprovedAccountupgradeurl(doallpostsneedtobeapproved, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoallpostsneedtobeapprovedAccountupgradeurl(boolean doallpostsneedtobeapproved, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doallpostsneedtobeapproved='"+reger.core.Util.booleanAsSQLText(doallpostsneedtobeapproved)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsDefaultaccounttypeidatsignup(boolean usedynamicdns, int defaultaccounttypeidatsignup) {
        return findByUsedynamicdnsDefaultaccounttypeidatsignup(usedynamicdns, defaultaccounttypeidatsignup, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsDefaultaccounttypeidatsignup(boolean usedynamicdns, int defaultaccounttypeidatsignup, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsDefaultmaxspaceinbytes(boolean usedynamicdns, int defaultmaxspaceinbytes) {
        return findByUsedynamicdnsDefaultmaxspaceinbytes(usedynamicdns, defaultmaxspaceinbytes, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsDefaultmaxspaceinbytes(boolean usedynamicdns, int defaultmaxspaceinbytes, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsTermsofservice(boolean usedynamicdns, String termsofservice) {
        return findByUsedynamicdnsTermsofservice(usedynamicdns, termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsTermsofservice(boolean usedynamicdns, String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsNewaccountsrequireadminapproval(boolean usedynamicdns, boolean newaccountsrequireadminapproval) {
        return findByUsedynamicdnsNewaccountsrequireadminapproval(usedynamicdns, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsNewaccountsrequireadminapproval(boolean usedynamicdns, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsForcelogintoviewsites(boolean usedynamicdns, boolean forcelogintoviewsites) {
        return findByUsedynamicdnsForcelogintoviewsites(usedynamicdns, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsForcelogintoviewsites(boolean usedynamicdns, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsIsweblogscompingon(boolean usedynamicdns, boolean isweblogscompingon) {
        return findByUsedynamicdnsIsweblogscompingon(usedynamicdns, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsIsweblogscompingon(boolean usedynamicdns, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEmailtonotifyofnewaccounts(boolean usedynamicdns, String emailtonotifyofnewaccounts) {
        return findByUsedynamicdnsEmailtonotifyofnewaccounts(usedynamicdns, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEmailtonotifyofnewaccounts(boolean usedynamicdns, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEmailapiuniqueidentifier(boolean usedynamicdns, String emailapiuniqueidentifier) {
        return findByUsedynamicdnsEmailapiuniqueidentifier(usedynamicdns, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEmailapiuniqueidentifier(boolean usedynamicdns, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsDefaultmaxbandwidth(boolean usedynamicdns, int defaultmaxbandwidth) {
        return findByUsedynamicdnsDefaultmaxbandwidth(usedynamicdns, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsDefaultmaxbandwidth(boolean usedynamicdns, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMinpasswordchars(boolean usedynamicdns, int minpasswordchars) {
        return findByUsedynamicdnsMinpasswordchars(usedynamicdns, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMinpasswordchars(boolean usedynamicdns, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMinpassworduppercasechars(boolean usedynamicdns, int minpassworduppercasechars) {
        return findByUsedynamicdnsMinpassworduppercasechars(usedynamicdns, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMinpassworduppercasechars(boolean usedynamicdns, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMinpasswordlowercasechars(boolean usedynamicdns, int minpasswordlowercasechars) {
        return findByUsedynamicdnsMinpasswordlowercasechars(usedynamicdns, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMinpasswordlowercasechars(boolean usedynamicdns, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMinpasswordspecialchars(boolean usedynamicdns, int minpasswordspecialchars) {
        return findByUsedynamicdnsMinpasswordspecialchars(usedynamicdns, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMinpasswordspecialchars(boolean usedynamicdns, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMinpasswordnumericchars(boolean usedynamicdns, int minpasswordnumericchars) {
        return findByUsedynamicdnsMinpasswordnumericchars(usedynamicdns, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMinpasswordnumericchars(boolean usedynamicdns, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsIspasswordsentviaemail(boolean usedynamicdns, boolean ispasswordsentviaemail) {
        return findByUsedynamicdnsIspasswordsentviaemail(usedynamicdns, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsIspasswordsentviaemail(boolean usedynamicdns, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsTermsofuselinktext(boolean usedynamicdns, String termsofuselinktext) {
        return findByUsedynamicdnsTermsofuselinktext(usedynamicdns, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsTermsofuselinktext(boolean usedynamicdns, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsFeedbacklinktext(boolean usedynamicdns, String feedbacklinktext) {
        return findByUsedynamicdnsFeedbacklinktext(usedynamicdns, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsFeedbacklinktext(boolean usedynamicdns, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsDoapplyplusertemplatetopro(boolean usedynamicdns, boolean doapplyplusertemplatetopro) {
        return findByUsedynamicdnsDoapplyplusertemplatetopro(usedynamicdns, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsDoapplyplusertemplatetopro(boolean usedynamicdns, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsPublicsitetemplateid(boolean usedynamicdns, int publicsitetemplateid) {
        return findByUsedynamicdnsPublicsitetemplateid(usedynamicdns, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsPublicsitetemplateid(boolean usedynamicdns, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEntlisttemplateid(boolean usedynamicdns, int entlisttemplateid) {
        return findByUsedynamicdnsEntlisttemplateid(usedynamicdns, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEntlisttemplateid(boolean usedynamicdns, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsHptemplateid(boolean usedynamicdns, int hptemplateid) {
        return findByUsedynamicdnsHptemplateid(usedynamicdns, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsHptemplateid(boolean usedynamicdns, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMarketingsitetemplateid(boolean usedynamicdns, int marketingsitetemplateid) {
        return findByUsedynamicdnsMarketingsitetemplateid(usedynamicdns, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMarketingsitetemplateid(boolean usedynamicdns, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMarketingsitehptemplateid(boolean usedynamicdns, int marketingsitehptemplateid) {
        return findByUsedynamicdnsMarketingsitehptemplateid(usedynamicdns, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsMarketingsitehptemplateid(boolean usedynamicdns, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsDefaulteventtypeid(boolean usedynamicdns, int defaulteventtypeid) {
        return findByUsedynamicdnsDefaulteventtypeid(usedynamicdns, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsDefaulteventtypeid(boolean usedynamicdns, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEncryptedlicense(boolean usedynamicdns, String encryptedlicense) {
        return findByUsedynamicdnsEncryptedlicense(usedynamicdns, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEncryptedlicense(boolean usedynamicdns, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsBaseaccountprice(boolean usedynamicdns, double baseaccountprice) {
        return findByUsedynamicdnsBaseaccountprice(usedynamicdns, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsBaseaccountprice(boolean usedynamicdns, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsPriceper100mbstorage(boolean usedynamicdns, double priceper100mbstorage) {
        return findByUsedynamicdnsPriceper100mbstorage(usedynamicdns, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsPriceper100mbstorage(boolean usedynamicdns, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsPricepergbbandwidth(boolean usedynamicdns, double pricepergbbandwidth) {
        return findByUsedynamicdnsPricepergbbandwidth(usedynamicdns, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsPricepergbbandwidth(boolean usedynamicdns, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsIstrackbackenabled(boolean usedynamicdns, boolean istrackbackenabled) {
        return findByUsedynamicdnsIstrackbackenabled(usedynamicdns, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsIstrackbackenabled(boolean usedynamicdns, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsPlusertemplateid(boolean usedynamicdns, int plusertemplateid) {
        return findByUsedynamicdnsPlusertemplateid(usedynamicdns, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsPlusertemplateid(boolean usedynamicdns, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsBannerone(boolean usedynamicdns, String bannerone) {
        return findByUsedynamicdnsBannerone(usedynamicdns, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsBannerone(boolean usedynamicdns, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsBannertwo(boolean usedynamicdns, String bannertwo) {
        return findByUsedynamicdnsBannertwo(usedynamicdns, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsBannertwo(boolean usedynamicdns, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsBannerthree(boolean usedynamicdns, String bannerthree) {
        return findByUsedynamicdnsBannerthree(usedynamicdns, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsBannerthree(boolean usedynamicdns, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsShowbannertagsonpro(boolean usedynamicdns, boolean showbannertagsonpro) {
        return findByUsedynamicdnsShowbannertagsonpro(usedynamicdns, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsShowbannertagsonpro(boolean usedynamicdns, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsIsemailactivationofaccountsrequired(boolean usedynamicdns, boolean isemailactivationofaccountsrequired) {
        return findByUsedynamicdnsIsemailactivationofaccountsrequired(usedynamicdns, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsIsemailactivationofaccountsrequired(boolean usedynamicdns, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEmailtextactivationmessage(boolean usedynamicdns, String emailtextactivationmessage) {
        return findByUsedynamicdnsEmailtextactivationmessage(usedynamicdns, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEmailtextactivationmessage(boolean usedynamicdns, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEmailsubjectactivationmessage(boolean usedynamicdns, String emailsubjectactivationmessage) {
        return findByUsedynamicdnsEmailsubjectactivationmessage(usedynamicdns, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEmailsubjectactivationmessage(boolean usedynamicdns, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEmailtextwelcomemessage(boolean usedynamicdns, String emailtextwelcomemessage) {
        return findByUsedynamicdnsEmailtextwelcomemessage(usedynamicdns, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEmailtextwelcomemessage(boolean usedynamicdns, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEmailsubjectwelcomemessage(boolean usedynamicdns, String emailsubjectwelcomemessage) {
        return findByUsedynamicdnsEmailsubjectwelcomemessage(usedynamicdns, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsEmailsubjectwelcomemessage(boolean usedynamicdns, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsAccountupgradeurl(boolean usedynamicdns, String accountupgradeurl) {
        return findByUsedynamicdnsAccountupgradeurl(usedynamicdns, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByUsedynamicdnsAccountupgradeurl(boolean usedynamicdns, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE usedynamicdns='"+reger.core.Util.booleanAsSQLText(usedynamicdns)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupDefaultmaxspaceinbytes(int defaultaccounttypeidatsignup, int defaultmaxspaceinbytes) {
        return findByDefaultaccounttypeidatsignupDefaultmaxspaceinbytes(defaultaccounttypeidatsignup, defaultmaxspaceinbytes, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupDefaultmaxspaceinbytes(int defaultaccounttypeidatsignup, int defaultmaxspaceinbytes, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupTermsofservice(int defaultaccounttypeidatsignup, String termsofservice) {
        return findByDefaultaccounttypeidatsignupTermsofservice(defaultaccounttypeidatsignup, termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupTermsofservice(int defaultaccounttypeidatsignup, String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupNewaccountsrequireadminapproval(int defaultaccounttypeidatsignup, boolean newaccountsrequireadminapproval) {
        return findByDefaultaccounttypeidatsignupNewaccountsrequireadminapproval(defaultaccounttypeidatsignup, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupNewaccountsrequireadminapproval(int defaultaccounttypeidatsignup, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupForcelogintoviewsites(int defaultaccounttypeidatsignup, boolean forcelogintoviewsites) {
        return findByDefaultaccounttypeidatsignupForcelogintoviewsites(defaultaccounttypeidatsignup, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupForcelogintoviewsites(int defaultaccounttypeidatsignup, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupIsweblogscompingon(int defaultaccounttypeidatsignup, boolean isweblogscompingon) {
        return findByDefaultaccounttypeidatsignupIsweblogscompingon(defaultaccounttypeidatsignup, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupIsweblogscompingon(int defaultaccounttypeidatsignup, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEmailtonotifyofnewaccounts(int defaultaccounttypeidatsignup, String emailtonotifyofnewaccounts) {
        return findByDefaultaccounttypeidatsignupEmailtonotifyofnewaccounts(defaultaccounttypeidatsignup, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEmailtonotifyofnewaccounts(int defaultaccounttypeidatsignup, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEmailapiuniqueidentifier(int defaultaccounttypeidatsignup, String emailapiuniqueidentifier) {
        return findByDefaultaccounttypeidatsignupEmailapiuniqueidentifier(defaultaccounttypeidatsignup, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEmailapiuniqueidentifier(int defaultaccounttypeidatsignup, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupDefaultmaxbandwidth(int defaultaccounttypeidatsignup, int defaultmaxbandwidth) {
        return findByDefaultaccounttypeidatsignupDefaultmaxbandwidth(defaultaccounttypeidatsignup, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupDefaultmaxbandwidth(int defaultaccounttypeidatsignup, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMinpasswordchars(int defaultaccounttypeidatsignup, int minpasswordchars) {
        return findByDefaultaccounttypeidatsignupMinpasswordchars(defaultaccounttypeidatsignup, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMinpasswordchars(int defaultaccounttypeidatsignup, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMinpassworduppercasechars(int defaultaccounttypeidatsignup, int minpassworduppercasechars) {
        return findByDefaultaccounttypeidatsignupMinpassworduppercasechars(defaultaccounttypeidatsignup, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMinpassworduppercasechars(int defaultaccounttypeidatsignup, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMinpasswordlowercasechars(int defaultaccounttypeidatsignup, int minpasswordlowercasechars) {
        return findByDefaultaccounttypeidatsignupMinpasswordlowercasechars(defaultaccounttypeidatsignup, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMinpasswordlowercasechars(int defaultaccounttypeidatsignup, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMinpasswordspecialchars(int defaultaccounttypeidatsignup, int minpasswordspecialchars) {
        return findByDefaultaccounttypeidatsignupMinpasswordspecialchars(defaultaccounttypeidatsignup, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMinpasswordspecialchars(int defaultaccounttypeidatsignup, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMinpasswordnumericchars(int defaultaccounttypeidatsignup, int minpasswordnumericchars) {
        return findByDefaultaccounttypeidatsignupMinpasswordnumericchars(defaultaccounttypeidatsignup, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMinpasswordnumericchars(int defaultaccounttypeidatsignup, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupIspasswordsentviaemail(int defaultaccounttypeidatsignup, boolean ispasswordsentviaemail) {
        return findByDefaultaccounttypeidatsignupIspasswordsentviaemail(defaultaccounttypeidatsignup, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupIspasswordsentviaemail(int defaultaccounttypeidatsignup, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupTermsofuselinktext(int defaultaccounttypeidatsignup, String termsofuselinktext) {
        return findByDefaultaccounttypeidatsignupTermsofuselinktext(defaultaccounttypeidatsignup, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupTermsofuselinktext(int defaultaccounttypeidatsignup, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupFeedbacklinktext(int defaultaccounttypeidatsignup, String feedbacklinktext) {
        return findByDefaultaccounttypeidatsignupFeedbacklinktext(defaultaccounttypeidatsignup, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupFeedbacklinktext(int defaultaccounttypeidatsignup, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupDoapplyplusertemplatetopro(int defaultaccounttypeidatsignup, boolean doapplyplusertemplatetopro) {
        return findByDefaultaccounttypeidatsignupDoapplyplusertemplatetopro(defaultaccounttypeidatsignup, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupDoapplyplusertemplatetopro(int defaultaccounttypeidatsignup, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupPublicsitetemplateid(int defaultaccounttypeidatsignup, int publicsitetemplateid) {
        return findByDefaultaccounttypeidatsignupPublicsitetemplateid(defaultaccounttypeidatsignup, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupPublicsitetemplateid(int defaultaccounttypeidatsignup, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEntlisttemplateid(int defaultaccounttypeidatsignup, int entlisttemplateid) {
        return findByDefaultaccounttypeidatsignupEntlisttemplateid(defaultaccounttypeidatsignup, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEntlisttemplateid(int defaultaccounttypeidatsignup, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupHptemplateid(int defaultaccounttypeidatsignup, int hptemplateid) {
        return findByDefaultaccounttypeidatsignupHptemplateid(defaultaccounttypeidatsignup, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupHptemplateid(int defaultaccounttypeidatsignup, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMarketingsitetemplateid(int defaultaccounttypeidatsignup, int marketingsitetemplateid) {
        return findByDefaultaccounttypeidatsignupMarketingsitetemplateid(defaultaccounttypeidatsignup, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMarketingsitetemplateid(int defaultaccounttypeidatsignup, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMarketingsitehptemplateid(int defaultaccounttypeidatsignup, int marketingsitehptemplateid) {
        return findByDefaultaccounttypeidatsignupMarketingsitehptemplateid(defaultaccounttypeidatsignup, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupMarketingsitehptemplateid(int defaultaccounttypeidatsignup, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupDefaulteventtypeid(int defaultaccounttypeidatsignup, int defaulteventtypeid) {
        return findByDefaultaccounttypeidatsignupDefaulteventtypeid(defaultaccounttypeidatsignup, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupDefaulteventtypeid(int defaultaccounttypeidatsignup, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEncryptedlicense(int defaultaccounttypeidatsignup, String encryptedlicense) {
        return findByDefaultaccounttypeidatsignupEncryptedlicense(defaultaccounttypeidatsignup, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEncryptedlicense(int defaultaccounttypeidatsignup, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupBaseaccountprice(int defaultaccounttypeidatsignup, double baseaccountprice) {
        return findByDefaultaccounttypeidatsignupBaseaccountprice(defaultaccounttypeidatsignup, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupBaseaccountprice(int defaultaccounttypeidatsignup, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupPriceper100mbstorage(int defaultaccounttypeidatsignup, double priceper100mbstorage) {
        return findByDefaultaccounttypeidatsignupPriceper100mbstorage(defaultaccounttypeidatsignup, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupPriceper100mbstorage(int defaultaccounttypeidatsignup, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupPricepergbbandwidth(int defaultaccounttypeidatsignup, double pricepergbbandwidth) {
        return findByDefaultaccounttypeidatsignupPricepergbbandwidth(defaultaccounttypeidatsignup, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupPricepergbbandwidth(int defaultaccounttypeidatsignup, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupIstrackbackenabled(int defaultaccounttypeidatsignup, boolean istrackbackenabled) {
        return findByDefaultaccounttypeidatsignupIstrackbackenabled(defaultaccounttypeidatsignup, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupIstrackbackenabled(int defaultaccounttypeidatsignup, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupPlusertemplateid(int defaultaccounttypeidatsignup, int plusertemplateid) {
        return findByDefaultaccounttypeidatsignupPlusertemplateid(defaultaccounttypeidatsignup, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupPlusertemplateid(int defaultaccounttypeidatsignup, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupBannerone(int defaultaccounttypeidatsignup, String bannerone) {
        return findByDefaultaccounttypeidatsignupBannerone(defaultaccounttypeidatsignup, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupBannerone(int defaultaccounttypeidatsignup, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupBannertwo(int defaultaccounttypeidatsignup, String bannertwo) {
        return findByDefaultaccounttypeidatsignupBannertwo(defaultaccounttypeidatsignup, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupBannertwo(int defaultaccounttypeidatsignup, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupBannerthree(int defaultaccounttypeidatsignup, String bannerthree) {
        return findByDefaultaccounttypeidatsignupBannerthree(defaultaccounttypeidatsignup, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupBannerthree(int defaultaccounttypeidatsignup, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupShowbannertagsonpro(int defaultaccounttypeidatsignup, boolean showbannertagsonpro) {
        return findByDefaultaccounttypeidatsignupShowbannertagsonpro(defaultaccounttypeidatsignup, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupShowbannertagsonpro(int defaultaccounttypeidatsignup, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupIsemailactivationofaccountsrequired(int defaultaccounttypeidatsignup, boolean isemailactivationofaccountsrequired) {
        return findByDefaultaccounttypeidatsignupIsemailactivationofaccountsrequired(defaultaccounttypeidatsignup, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupIsemailactivationofaccountsrequired(int defaultaccounttypeidatsignup, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEmailtextactivationmessage(int defaultaccounttypeidatsignup, String emailtextactivationmessage) {
        return findByDefaultaccounttypeidatsignupEmailtextactivationmessage(defaultaccounttypeidatsignup, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEmailtextactivationmessage(int defaultaccounttypeidatsignup, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEmailsubjectactivationmessage(int defaultaccounttypeidatsignup, String emailsubjectactivationmessage) {
        return findByDefaultaccounttypeidatsignupEmailsubjectactivationmessage(defaultaccounttypeidatsignup, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEmailsubjectactivationmessage(int defaultaccounttypeidatsignup, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEmailtextwelcomemessage(int defaultaccounttypeidatsignup, String emailtextwelcomemessage) {
        return findByDefaultaccounttypeidatsignupEmailtextwelcomemessage(defaultaccounttypeidatsignup, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEmailtextwelcomemessage(int defaultaccounttypeidatsignup, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEmailsubjectwelcomemessage(int defaultaccounttypeidatsignup, String emailsubjectwelcomemessage) {
        return findByDefaultaccounttypeidatsignupEmailsubjectwelcomemessage(defaultaccounttypeidatsignup, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupEmailsubjectwelcomemessage(int defaultaccounttypeidatsignup, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupAccountupgradeurl(int defaultaccounttypeidatsignup, String accountupgradeurl) {
        return findByDefaultaccounttypeidatsignupAccountupgradeurl(defaultaccounttypeidatsignup, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultaccounttypeidatsignupAccountupgradeurl(int defaultaccounttypeidatsignup, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultaccounttypeidatsignup='"+defaultaccounttypeidatsignup+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesTermsofservice(int defaultmaxspaceinbytes, String termsofservice) {
        return findByDefaultmaxspaceinbytesTermsofservice(defaultmaxspaceinbytes, termsofservice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesTermsofservice(int defaultmaxspaceinbytes, String termsofservice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesNewaccountsrequireadminapproval(int defaultmaxspaceinbytes, boolean newaccountsrequireadminapproval) {
        return findByDefaultmaxspaceinbytesNewaccountsrequireadminapproval(defaultmaxspaceinbytes, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesNewaccountsrequireadminapproval(int defaultmaxspaceinbytes, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesForcelogintoviewsites(int defaultmaxspaceinbytes, boolean forcelogintoviewsites) {
        return findByDefaultmaxspaceinbytesForcelogintoviewsites(defaultmaxspaceinbytes, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesForcelogintoviewsites(int defaultmaxspaceinbytes, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesIsweblogscompingon(int defaultmaxspaceinbytes, boolean isweblogscompingon) {
        return findByDefaultmaxspaceinbytesIsweblogscompingon(defaultmaxspaceinbytes, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesIsweblogscompingon(int defaultmaxspaceinbytes, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEmailtonotifyofnewaccounts(int defaultmaxspaceinbytes, String emailtonotifyofnewaccounts) {
        return findByDefaultmaxspaceinbytesEmailtonotifyofnewaccounts(defaultmaxspaceinbytes, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEmailtonotifyofnewaccounts(int defaultmaxspaceinbytes, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEmailapiuniqueidentifier(int defaultmaxspaceinbytes, String emailapiuniqueidentifier) {
        return findByDefaultmaxspaceinbytesEmailapiuniqueidentifier(defaultmaxspaceinbytes, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEmailapiuniqueidentifier(int defaultmaxspaceinbytes, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesDefaultmaxbandwidth(int defaultmaxspaceinbytes, int defaultmaxbandwidth) {
        return findByDefaultmaxspaceinbytesDefaultmaxbandwidth(defaultmaxspaceinbytes, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesDefaultmaxbandwidth(int defaultmaxspaceinbytes, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMinpasswordchars(int defaultmaxspaceinbytes, int minpasswordchars) {
        return findByDefaultmaxspaceinbytesMinpasswordchars(defaultmaxspaceinbytes, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMinpasswordchars(int defaultmaxspaceinbytes, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMinpassworduppercasechars(int defaultmaxspaceinbytes, int minpassworduppercasechars) {
        return findByDefaultmaxspaceinbytesMinpassworduppercasechars(defaultmaxspaceinbytes, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMinpassworduppercasechars(int defaultmaxspaceinbytes, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMinpasswordlowercasechars(int defaultmaxspaceinbytes, int minpasswordlowercasechars) {
        return findByDefaultmaxspaceinbytesMinpasswordlowercasechars(defaultmaxspaceinbytes, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMinpasswordlowercasechars(int defaultmaxspaceinbytes, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMinpasswordspecialchars(int defaultmaxspaceinbytes, int minpasswordspecialchars) {
        return findByDefaultmaxspaceinbytesMinpasswordspecialchars(defaultmaxspaceinbytes, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMinpasswordspecialchars(int defaultmaxspaceinbytes, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMinpasswordnumericchars(int defaultmaxspaceinbytes, int minpasswordnumericchars) {
        return findByDefaultmaxspaceinbytesMinpasswordnumericchars(defaultmaxspaceinbytes, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMinpasswordnumericchars(int defaultmaxspaceinbytes, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesIspasswordsentviaemail(int defaultmaxspaceinbytes, boolean ispasswordsentviaemail) {
        return findByDefaultmaxspaceinbytesIspasswordsentviaemail(defaultmaxspaceinbytes, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesIspasswordsentviaemail(int defaultmaxspaceinbytes, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesTermsofuselinktext(int defaultmaxspaceinbytes, String termsofuselinktext) {
        return findByDefaultmaxspaceinbytesTermsofuselinktext(defaultmaxspaceinbytes, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesTermsofuselinktext(int defaultmaxspaceinbytes, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesFeedbacklinktext(int defaultmaxspaceinbytes, String feedbacklinktext) {
        return findByDefaultmaxspaceinbytesFeedbacklinktext(defaultmaxspaceinbytes, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesFeedbacklinktext(int defaultmaxspaceinbytes, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesDoapplyplusertemplatetopro(int defaultmaxspaceinbytes, boolean doapplyplusertemplatetopro) {
        return findByDefaultmaxspaceinbytesDoapplyplusertemplatetopro(defaultmaxspaceinbytes, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesDoapplyplusertemplatetopro(int defaultmaxspaceinbytes, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesPublicsitetemplateid(int defaultmaxspaceinbytes, int publicsitetemplateid) {
        return findByDefaultmaxspaceinbytesPublicsitetemplateid(defaultmaxspaceinbytes, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesPublicsitetemplateid(int defaultmaxspaceinbytes, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEntlisttemplateid(int defaultmaxspaceinbytes, int entlisttemplateid) {
        return findByDefaultmaxspaceinbytesEntlisttemplateid(defaultmaxspaceinbytes, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEntlisttemplateid(int defaultmaxspaceinbytes, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesHptemplateid(int defaultmaxspaceinbytes, int hptemplateid) {
        return findByDefaultmaxspaceinbytesHptemplateid(defaultmaxspaceinbytes, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesHptemplateid(int defaultmaxspaceinbytes, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMarketingsitetemplateid(int defaultmaxspaceinbytes, int marketingsitetemplateid) {
        return findByDefaultmaxspaceinbytesMarketingsitetemplateid(defaultmaxspaceinbytes, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMarketingsitetemplateid(int defaultmaxspaceinbytes, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMarketingsitehptemplateid(int defaultmaxspaceinbytes, int marketingsitehptemplateid) {
        return findByDefaultmaxspaceinbytesMarketingsitehptemplateid(defaultmaxspaceinbytes, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesMarketingsitehptemplateid(int defaultmaxspaceinbytes, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesDefaulteventtypeid(int defaultmaxspaceinbytes, int defaulteventtypeid) {
        return findByDefaultmaxspaceinbytesDefaulteventtypeid(defaultmaxspaceinbytes, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesDefaulteventtypeid(int defaultmaxspaceinbytes, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEncryptedlicense(int defaultmaxspaceinbytes, String encryptedlicense) {
        return findByDefaultmaxspaceinbytesEncryptedlicense(defaultmaxspaceinbytes, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEncryptedlicense(int defaultmaxspaceinbytes, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesBaseaccountprice(int defaultmaxspaceinbytes, double baseaccountprice) {
        return findByDefaultmaxspaceinbytesBaseaccountprice(defaultmaxspaceinbytes, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesBaseaccountprice(int defaultmaxspaceinbytes, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesPriceper100mbstorage(int defaultmaxspaceinbytes, double priceper100mbstorage) {
        return findByDefaultmaxspaceinbytesPriceper100mbstorage(defaultmaxspaceinbytes, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesPriceper100mbstorage(int defaultmaxspaceinbytes, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesPricepergbbandwidth(int defaultmaxspaceinbytes, double pricepergbbandwidth) {
        return findByDefaultmaxspaceinbytesPricepergbbandwidth(defaultmaxspaceinbytes, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesPricepergbbandwidth(int defaultmaxspaceinbytes, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesIstrackbackenabled(int defaultmaxspaceinbytes, boolean istrackbackenabled) {
        return findByDefaultmaxspaceinbytesIstrackbackenabled(defaultmaxspaceinbytes, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesIstrackbackenabled(int defaultmaxspaceinbytes, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesPlusertemplateid(int defaultmaxspaceinbytes, int plusertemplateid) {
        return findByDefaultmaxspaceinbytesPlusertemplateid(defaultmaxspaceinbytes, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesPlusertemplateid(int defaultmaxspaceinbytes, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesBannerone(int defaultmaxspaceinbytes, String bannerone) {
        return findByDefaultmaxspaceinbytesBannerone(defaultmaxspaceinbytes, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesBannerone(int defaultmaxspaceinbytes, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesBannertwo(int defaultmaxspaceinbytes, String bannertwo) {
        return findByDefaultmaxspaceinbytesBannertwo(defaultmaxspaceinbytes, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesBannertwo(int defaultmaxspaceinbytes, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesBannerthree(int defaultmaxspaceinbytes, String bannerthree) {
        return findByDefaultmaxspaceinbytesBannerthree(defaultmaxspaceinbytes, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesBannerthree(int defaultmaxspaceinbytes, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesShowbannertagsonpro(int defaultmaxspaceinbytes, boolean showbannertagsonpro) {
        return findByDefaultmaxspaceinbytesShowbannertagsonpro(defaultmaxspaceinbytes, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesShowbannertagsonpro(int defaultmaxspaceinbytes, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesIsemailactivationofaccountsrequired(int defaultmaxspaceinbytes, boolean isemailactivationofaccountsrequired) {
        return findByDefaultmaxspaceinbytesIsemailactivationofaccountsrequired(defaultmaxspaceinbytes, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesIsemailactivationofaccountsrequired(int defaultmaxspaceinbytes, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEmailtextactivationmessage(int defaultmaxspaceinbytes, String emailtextactivationmessage) {
        return findByDefaultmaxspaceinbytesEmailtextactivationmessage(defaultmaxspaceinbytes, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEmailtextactivationmessage(int defaultmaxspaceinbytes, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEmailsubjectactivationmessage(int defaultmaxspaceinbytes, String emailsubjectactivationmessage) {
        return findByDefaultmaxspaceinbytesEmailsubjectactivationmessage(defaultmaxspaceinbytes, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEmailsubjectactivationmessage(int defaultmaxspaceinbytes, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEmailtextwelcomemessage(int defaultmaxspaceinbytes, String emailtextwelcomemessage) {
        return findByDefaultmaxspaceinbytesEmailtextwelcomemessage(defaultmaxspaceinbytes, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEmailtextwelcomemessage(int defaultmaxspaceinbytes, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEmailsubjectwelcomemessage(int defaultmaxspaceinbytes, String emailsubjectwelcomemessage) {
        return findByDefaultmaxspaceinbytesEmailsubjectwelcomemessage(defaultmaxspaceinbytes, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesEmailsubjectwelcomemessage(int defaultmaxspaceinbytes, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesAccountupgradeurl(int defaultmaxspaceinbytes, String accountupgradeurl) {
        return findByDefaultmaxspaceinbytesAccountupgradeurl(defaultmaxspaceinbytes, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxspaceinbytesAccountupgradeurl(int defaultmaxspaceinbytes, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxspaceinbytes='"+defaultmaxspaceinbytes+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceNewaccountsrequireadminapproval(String termsofservice, boolean newaccountsrequireadminapproval) {
        return findByTermsofserviceNewaccountsrequireadminapproval(termsofservice, newaccountsrequireadminapproval, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceNewaccountsrequireadminapproval(String termsofservice, boolean newaccountsrequireadminapproval, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceForcelogintoviewsites(String termsofservice, boolean forcelogintoviewsites) {
        return findByTermsofserviceForcelogintoviewsites(termsofservice, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceForcelogintoviewsites(String termsofservice, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceIsweblogscompingon(String termsofservice, boolean isweblogscompingon) {
        return findByTermsofserviceIsweblogscompingon(termsofservice, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceIsweblogscompingon(String termsofservice, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceEmailtonotifyofnewaccounts(String termsofservice, String emailtonotifyofnewaccounts) {
        return findByTermsofserviceEmailtonotifyofnewaccounts(termsofservice, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceEmailtonotifyofnewaccounts(String termsofservice, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceEmailapiuniqueidentifier(String termsofservice, String emailapiuniqueidentifier) {
        return findByTermsofserviceEmailapiuniqueidentifier(termsofservice, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceEmailapiuniqueidentifier(String termsofservice, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceDefaultmaxbandwidth(String termsofservice, int defaultmaxbandwidth) {
        return findByTermsofserviceDefaultmaxbandwidth(termsofservice, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceDefaultmaxbandwidth(String termsofservice, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceMinpasswordchars(String termsofservice, int minpasswordchars) {
        return findByTermsofserviceMinpasswordchars(termsofservice, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceMinpasswordchars(String termsofservice, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceMinpassworduppercasechars(String termsofservice, int minpassworduppercasechars) {
        return findByTermsofserviceMinpassworduppercasechars(termsofservice, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceMinpassworduppercasechars(String termsofservice, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceMinpasswordlowercasechars(String termsofservice, int minpasswordlowercasechars) {
        return findByTermsofserviceMinpasswordlowercasechars(termsofservice, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceMinpasswordlowercasechars(String termsofservice, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceMinpasswordspecialchars(String termsofservice, int minpasswordspecialchars) {
        return findByTermsofserviceMinpasswordspecialchars(termsofservice, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceMinpasswordspecialchars(String termsofservice, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceMinpasswordnumericchars(String termsofservice, int minpasswordnumericchars) {
        return findByTermsofserviceMinpasswordnumericchars(termsofservice, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceMinpasswordnumericchars(String termsofservice, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceIspasswordsentviaemail(String termsofservice, boolean ispasswordsentviaemail) {
        return findByTermsofserviceIspasswordsentviaemail(termsofservice, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceIspasswordsentviaemail(String termsofservice, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceTermsofuselinktext(String termsofservice, String termsofuselinktext) {
        return findByTermsofserviceTermsofuselinktext(termsofservice, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceTermsofuselinktext(String termsofservice, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceFeedbacklinktext(String termsofservice, String feedbacklinktext) {
        return findByTermsofserviceFeedbacklinktext(termsofservice, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceFeedbacklinktext(String termsofservice, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceDoapplyplusertemplatetopro(String termsofservice, boolean doapplyplusertemplatetopro) {
        return findByTermsofserviceDoapplyplusertemplatetopro(termsofservice, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceDoapplyplusertemplatetopro(String termsofservice, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofservicePublicsitetemplateid(String termsofservice, int publicsitetemplateid) {
        return findByTermsofservicePublicsitetemplateid(termsofservice, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofservicePublicsitetemplateid(String termsofservice, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceEntlisttemplateid(String termsofservice, int entlisttemplateid) {
        return findByTermsofserviceEntlisttemplateid(termsofservice, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceEntlisttemplateid(String termsofservice, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceHptemplateid(String termsofservice, int hptemplateid) {
        return findByTermsofserviceHptemplateid(termsofservice, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceHptemplateid(String termsofservice, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceMarketingsitetemplateid(String termsofservice, int marketingsitetemplateid) {
        return findByTermsofserviceMarketingsitetemplateid(termsofservice, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceMarketingsitetemplateid(String termsofservice, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceMarketingsitehptemplateid(String termsofservice, int marketingsitehptemplateid) {
        return findByTermsofserviceMarketingsitehptemplateid(termsofservice, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceMarketingsitehptemplateid(String termsofservice, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceDefaulteventtypeid(String termsofservice, int defaulteventtypeid) {
        return findByTermsofserviceDefaulteventtypeid(termsofservice, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceDefaulteventtypeid(String termsofservice, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceEncryptedlicense(String termsofservice, String encryptedlicense) {
        return findByTermsofserviceEncryptedlicense(termsofservice, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceEncryptedlicense(String termsofservice, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceBaseaccountprice(String termsofservice, double baseaccountprice) {
        return findByTermsofserviceBaseaccountprice(termsofservice, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceBaseaccountprice(String termsofservice, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofservicePriceper100mbstorage(String termsofservice, double priceper100mbstorage) {
        return findByTermsofservicePriceper100mbstorage(termsofservice, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofservicePriceper100mbstorage(String termsofservice, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofservicePricepergbbandwidth(String termsofservice, double pricepergbbandwidth) {
        return findByTermsofservicePricepergbbandwidth(termsofservice, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofservicePricepergbbandwidth(String termsofservice, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceIstrackbackenabled(String termsofservice, boolean istrackbackenabled) {
        return findByTermsofserviceIstrackbackenabled(termsofservice, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceIstrackbackenabled(String termsofservice, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofservicePlusertemplateid(String termsofservice, int plusertemplateid) {
        return findByTermsofservicePlusertemplateid(termsofservice, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofservicePlusertemplateid(String termsofservice, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceBannerone(String termsofservice, String bannerone) {
        return findByTermsofserviceBannerone(termsofservice, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceBannerone(String termsofservice, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceBannertwo(String termsofservice, String bannertwo) {
        return findByTermsofserviceBannertwo(termsofservice, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceBannertwo(String termsofservice, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceBannerthree(String termsofservice, String bannerthree) {
        return findByTermsofserviceBannerthree(termsofservice, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceBannerthree(String termsofservice, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceShowbannertagsonpro(String termsofservice, boolean showbannertagsonpro) {
        return findByTermsofserviceShowbannertagsonpro(termsofservice, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceShowbannertagsonpro(String termsofservice, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceIsemailactivationofaccountsrequired(String termsofservice, boolean isemailactivationofaccountsrequired) {
        return findByTermsofserviceIsemailactivationofaccountsrequired(termsofservice, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceIsemailactivationofaccountsrequired(String termsofservice, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceEmailtextactivationmessage(String termsofservice, String emailtextactivationmessage) {
        return findByTermsofserviceEmailtextactivationmessage(termsofservice, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceEmailtextactivationmessage(String termsofservice, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceEmailsubjectactivationmessage(String termsofservice, String emailsubjectactivationmessage) {
        return findByTermsofserviceEmailsubjectactivationmessage(termsofservice, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceEmailsubjectactivationmessage(String termsofservice, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceEmailtextwelcomemessage(String termsofservice, String emailtextwelcomemessage) {
        return findByTermsofserviceEmailtextwelcomemessage(termsofservice, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceEmailtextwelcomemessage(String termsofservice, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceEmailsubjectwelcomemessage(String termsofservice, String emailsubjectwelcomemessage) {
        return findByTermsofserviceEmailsubjectwelcomemessage(termsofservice, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceEmailsubjectwelcomemessage(String termsofservice, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofserviceAccountupgradeurl(String termsofservice, String accountupgradeurl) {
        return findByTermsofserviceAccountupgradeurl(termsofservice, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofserviceAccountupgradeurl(String termsofservice, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofservice='"+reger.core.Util.cleanForSQL(termsofservice)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalForcelogintoviewsites(boolean newaccountsrequireadminapproval, boolean forcelogintoviewsites) {
        return findByNewaccountsrequireadminapprovalForcelogintoviewsites(newaccountsrequireadminapproval, forcelogintoviewsites, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalForcelogintoviewsites(boolean newaccountsrequireadminapproval, boolean forcelogintoviewsites, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalIsweblogscompingon(boolean newaccountsrequireadminapproval, boolean isweblogscompingon) {
        return findByNewaccountsrequireadminapprovalIsweblogscompingon(newaccountsrequireadminapproval, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalIsweblogscompingon(boolean newaccountsrequireadminapproval, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEmailtonotifyofnewaccounts(boolean newaccountsrequireadminapproval, String emailtonotifyofnewaccounts) {
        return findByNewaccountsrequireadminapprovalEmailtonotifyofnewaccounts(newaccountsrequireadminapproval, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEmailtonotifyofnewaccounts(boolean newaccountsrequireadminapproval, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEmailapiuniqueidentifier(boolean newaccountsrequireadminapproval, String emailapiuniqueidentifier) {
        return findByNewaccountsrequireadminapprovalEmailapiuniqueidentifier(newaccountsrequireadminapproval, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEmailapiuniqueidentifier(boolean newaccountsrequireadminapproval, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalDefaultmaxbandwidth(boolean newaccountsrequireadminapproval, int defaultmaxbandwidth) {
        return findByNewaccountsrequireadminapprovalDefaultmaxbandwidth(newaccountsrequireadminapproval, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalDefaultmaxbandwidth(boolean newaccountsrequireadminapproval, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMinpasswordchars(boolean newaccountsrequireadminapproval, int minpasswordchars) {
        return findByNewaccountsrequireadminapprovalMinpasswordchars(newaccountsrequireadminapproval, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMinpasswordchars(boolean newaccountsrequireadminapproval, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMinpassworduppercasechars(boolean newaccountsrequireadminapproval, int minpassworduppercasechars) {
        return findByNewaccountsrequireadminapprovalMinpassworduppercasechars(newaccountsrequireadminapproval, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMinpassworduppercasechars(boolean newaccountsrequireadminapproval, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMinpasswordlowercasechars(boolean newaccountsrequireadminapproval, int minpasswordlowercasechars) {
        return findByNewaccountsrequireadminapprovalMinpasswordlowercasechars(newaccountsrequireadminapproval, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMinpasswordlowercasechars(boolean newaccountsrequireadminapproval, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMinpasswordspecialchars(boolean newaccountsrequireadminapproval, int minpasswordspecialchars) {
        return findByNewaccountsrequireadminapprovalMinpasswordspecialchars(newaccountsrequireadminapproval, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMinpasswordspecialchars(boolean newaccountsrequireadminapproval, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMinpasswordnumericchars(boolean newaccountsrequireadminapproval, int minpasswordnumericchars) {
        return findByNewaccountsrequireadminapprovalMinpasswordnumericchars(newaccountsrequireadminapproval, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMinpasswordnumericchars(boolean newaccountsrequireadminapproval, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalIspasswordsentviaemail(boolean newaccountsrequireadminapproval, boolean ispasswordsentviaemail) {
        return findByNewaccountsrequireadminapprovalIspasswordsentviaemail(newaccountsrequireadminapproval, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalIspasswordsentviaemail(boolean newaccountsrequireadminapproval, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalTermsofuselinktext(boolean newaccountsrequireadminapproval, String termsofuselinktext) {
        return findByNewaccountsrequireadminapprovalTermsofuselinktext(newaccountsrequireadminapproval, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalTermsofuselinktext(boolean newaccountsrequireadminapproval, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalFeedbacklinktext(boolean newaccountsrequireadminapproval, String feedbacklinktext) {
        return findByNewaccountsrequireadminapprovalFeedbacklinktext(newaccountsrequireadminapproval, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalFeedbacklinktext(boolean newaccountsrequireadminapproval, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalDoapplyplusertemplatetopro(boolean newaccountsrequireadminapproval, boolean doapplyplusertemplatetopro) {
        return findByNewaccountsrequireadminapprovalDoapplyplusertemplatetopro(newaccountsrequireadminapproval, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalDoapplyplusertemplatetopro(boolean newaccountsrequireadminapproval, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalPublicsitetemplateid(boolean newaccountsrequireadminapproval, int publicsitetemplateid) {
        return findByNewaccountsrequireadminapprovalPublicsitetemplateid(newaccountsrequireadminapproval, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalPublicsitetemplateid(boolean newaccountsrequireadminapproval, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEntlisttemplateid(boolean newaccountsrequireadminapproval, int entlisttemplateid) {
        return findByNewaccountsrequireadminapprovalEntlisttemplateid(newaccountsrequireadminapproval, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEntlisttemplateid(boolean newaccountsrequireadminapproval, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalHptemplateid(boolean newaccountsrequireadminapproval, int hptemplateid) {
        return findByNewaccountsrequireadminapprovalHptemplateid(newaccountsrequireadminapproval, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalHptemplateid(boolean newaccountsrequireadminapproval, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMarketingsitetemplateid(boolean newaccountsrequireadminapproval, int marketingsitetemplateid) {
        return findByNewaccountsrequireadminapprovalMarketingsitetemplateid(newaccountsrequireadminapproval, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMarketingsitetemplateid(boolean newaccountsrequireadminapproval, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMarketingsitehptemplateid(boolean newaccountsrequireadminapproval, int marketingsitehptemplateid) {
        return findByNewaccountsrequireadminapprovalMarketingsitehptemplateid(newaccountsrequireadminapproval, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalMarketingsitehptemplateid(boolean newaccountsrequireadminapproval, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalDefaulteventtypeid(boolean newaccountsrequireadminapproval, int defaulteventtypeid) {
        return findByNewaccountsrequireadminapprovalDefaulteventtypeid(newaccountsrequireadminapproval, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalDefaulteventtypeid(boolean newaccountsrequireadminapproval, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEncryptedlicense(boolean newaccountsrequireadminapproval, String encryptedlicense) {
        return findByNewaccountsrequireadminapprovalEncryptedlicense(newaccountsrequireadminapproval, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEncryptedlicense(boolean newaccountsrequireadminapproval, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalBaseaccountprice(boolean newaccountsrequireadminapproval, double baseaccountprice) {
        return findByNewaccountsrequireadminapprovalBaseaccountprice(newaccountsrequireadminapproval, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalBaseaccountprice(boolean newaccountsrequireadminapproval, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalPriceper100mbstorage(boolean newaccountsrequireadminapproval, double priceper100mbstorage) {
        return findByNewaccountsrequireadminapprovalPriceper100mbstorage(newaccountsrequireadminapproval, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalPriceper100mbstorage(boolean newaccountsrequireadminapproval, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalPricepergbbandwidth(boolean newaccountsrequireadminapproval, double pricepergbbandwidth) {
        return findByNewaccountsrequireadminapprovalPricepergbbandwidth(newaccountsrequireadminapproval, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalPricepergbbandwidth(boolean newaccountsrequireadminapproval, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalIstrackbackenabled(boolean newaccountsrequireadminapproval, boolean istrackbackenabled) {
        return findByNewaccountsrequireadminapprovalIstrackbackenabled(newaccountsrequireadminapproval, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalIstrackbackenabled(boolean newaccountsrequireadminapproval, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalPlusertemplateid(boolean newaccountsrequireadminapproval, int plusertemplateid) {
        return findByNewaccountsrequireadminapprovalPlusertemplateid(newaccountsrequireadminapproval, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalPlusertemplateid(boolean newaccountsrequireadminapproval, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalBannerone(boolean newaccountsrequireadminapproval, String bannerone) {
        return findByNewaccountsrequireadminapprovalBannerone(newaccountsrequireadminapproval, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalBannerone(boolean newaccountsrequireadminapproval, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalBannertwo(boolean newaccountsrequireadminapproval, String bannertwo) {
        return findByNewaccountsrequireadminapprovalBannertwo(newaccountsrequireadminapproval, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalBannertwo(boolean newaccountsrequireadminapproval, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalBannerthree(boolean newaccountsrequireadminapproval, String bannerthree) {
        return findByNewaccountsrequireadminapprovalBannerthree(newaccountsrequireadminapproval, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalBannerthree(boolean newaccountsrequireadminapproval, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalShowbannertagsonpro(boolean newaccountsrequireadminapproval, boolean showbannertagsonpro) {
        return findByNewaccountsrequireadminapprovalShowbannertagsonpro(newaccountsrequireadminapproval, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalShowbannertagsonpro(boolean newaccountsrequireadminapproval, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalIsemailactivationofaccountsrequired(boolean newaccountsrequireadminapproval, boolean isemailactivationofaccountsrequired) {
        return findByNewaccountsrequireadminapprovalIsemailactivationofaccountsrequired(newaccountsrequireadminapproval, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalIsemailactivationofaccountsrequired(boolean newaccountsrequireadminapproval, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEmailtextactivationmessage(boolean newaccountsrequireadminapproval, String emailtextactivationmessage) {
        return findByNewaccountsrequireadminapprovalEmailtextactivationmessage(newaccountsrequireadminapproval, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEmailtextactivationmessage(boolean newaccountsrequireadminapproval, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEmailsubjectactivationmessage(boolean newaccountsrequireadminapproval, String emailsubjectactivationmessage) {
        return findByNewaccountsrequireadminapprovalEmailsubjectactivationmessage(newaccountsrequireadminapproval, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEmailsubjectactivationmessage(boolean newaccountsrequireadminapproval, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEmailtextwelcomemessage(boolean newaccountsrequireadminapproval, String emailtextwelcomemessage) {
        return findByNewaccountsrequireadminapprovalEmailtextwelcomemessage(newaccountsrequireadminapproval, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEmailtextwelcomemessage(boolean newaccountsrequireadminapproval, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEmailsubjectwelcomemessage(boolean newaccountsrequireadminapproval, String emailsubjectwelcomemessage) {
        return findByNewaccountsrequireadminapprovalEmailsubjectwelcomemessage(newaccountsrequireadminapproval, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalEmailsubjectwelcomemessage(boolean newaccountsrequireadminapproval, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalAccountupgradeurl(boolean newaccountsrequireadminapproval, String accountupgradeurl) {
        return findByNewaccountsrequireadminapprovalAccountupgradeurl(newaccountsrequireadminapproval, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByNewaccountsrequireadminapprovalAccountupgradeurl(boolean newaccountsrequireadminapproval, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE newaccountsrequireadminapproval='"+reger.core.Util.booleanAsSQLText(newaccountsrequireadminapproval)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesIsweblogscompingon(boolean forcelogintoviewsites, boolean isweblogscompingon) {
        return findByForcelogintoviewsitesIsweblogscompingon(forcelogintoviewsites, isweblogscompingon, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesIsweblogscompingon(boolean forcelogintoviewsites, boolean isweblogscompingon, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEmailtonotifyofnewaccounts(boolean forcelogintoviewsites, String emailtonotifyofnewaccounts) {
        return findByForcelogintoviewsitesEmailtonotifyofnewaccounts(forcelogintoviewsites, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEmailtonotifyofnewaccounts(boolean forcelogintoviewsites, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEmailapiuniqueidentifier(boolean forcelogintoviewsites, String emailapiuniqueidentifier) {
        return findByForcelogintoviewsitesEmailapiuniqueidentifier(forcelogintoviewsites, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEmailapiuniqueidentifier(boolean forcelogintoviewsites, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesDefaultmaxbandwidth(boolean forcelogintoviewsites, int defaultmaxbandwidth) {
        return findByForcelogintoviewsitesDefaultmaxbandwidth(forcelogintoviewsites, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesDefaultmaxbandwidth(boolean forcelogintoviewsites, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMinpasswordchars(boolean forcelogintoviewsites, int minpasswordchars) {
        return findByForcelogintoviewsitesMinpasswordchars(forcelogintoviewsites, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMinpasswordchars(boolean forcelogintoviewsites, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMinpassworduppercasechars(boolean forcelogintoviewsites, int minpassworduppercasechars) {
        return findByForcelogintoviewsitesMinpassworduppercasechars(forcelogintoviewsites, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMinpassworduppercasechars(boolean forcelogintoviewsites, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMinpasswordlowercasechars(boolean forcelogintoviewsites, int minpasswordlowercasechars) {
        return findByForcelogintoviewsitesMinpasswordlowercasechars(forcelogintoviewsites, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMinpasswordlowercasechars(boolean forcelogintoviewsites, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMinpasswordspecialchars(boolean forcelogintoviewsites, int minpasswordspecialchars) {
        return findByForcelogintoviewsitesMinpasswordspecialchars(forcelogintoviewsites, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMinpasswordspecialchars(boolean forcelogintoviewsites, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMinpasswordnumericchars(boolean forcelogintoviewsites, int minpasswordnumericchars) {
        return findByForcelogintoviewsitesMinpasswordnumericchars(forcelogintoviewsites, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMinpasswordnumericchars(boolean forcelogintoviewsites, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesIspasswordsentviaemail(boolean forcelogintoviewsites, boolean ispasswordsentviaemail) {
        return findByForcelogintoviewsitesIspasswordsentviaemail(forcelogintoviewsites, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesIspasswordsentviaemail(boolean forcelogintoviewsites, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesTermsofuselinktext(boolean forcelogintoviewsites, String termsofuselinktext) {
        return findByForcelogintoviewsitesTermsofuselinktext(forcelogintoviewsites, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesTermsofuselinktext(boolean forcelogintoviewsites, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesFeedbacklinktext(boolean forcelogintoviewsites, String feedbacklinktext) {
        return findByForcelogintoviewsitesFeedbacklinktext(forcelogintoviewsites, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesFeedbacklinktext(boolean forcelogintoviewsites, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesDoapplyplusertemplatetopro(boolean forcelogintoviewsites, boolean doapplyplusertemplatetopro) {
        return findByForcelogintoviewsitesDoapplyplusertemplatetopro(forcelogintoviewsites, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesDoapplyplusertemplatetopro(boolean forcelogintoviewsites, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesPublicsitetemplateid(boolean forcelogintoviewsites, int publicsitetemplateid) {
        return findByForcelogintoviewsitesPublicsitetemplateid(forcelogintoviewsites, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesPublicsitetemplateid(boolean forcelogintoviewsites, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEntlisttemplateid(boolean forcelogintoviewsites, int entlisttemplateid) {
        return findByForcelogintoviewsitesEntlisttemplateid(forcelogintoviewsites, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEntlisttemplateid(boolean forcelogintoviewsites, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesHptemplateid(boolean forcelogintoviewsites, int hptemplateid) {
        return findByForcelogintoviewsitesHptemplateid(forcelogintoviewsites, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesHptemplateid(boolean forcelogintoviewsites, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMarketingsitetemplateid(boolean forcelogintoviewsites, int marketingsitetemplateid) {
        return findByForcelogintoviewsitesMarketingsitetemplateid(forcelogintoviewsites, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMarketingsitetemplateid(boolean forcelogintoviewsites, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMarketingsitehptemplateid(boolean forcelogintoviewsites, int marketingsitehptemplateid) {
        return findByForcelogintoviewsitesMarketingsitehptemplateid(forcelogintoviewsites, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesMarketingsitehptemplateid(boolean forcelogintoviewsites, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesDefaulteventtypeid(boolean forcelogintoviewsites, int defaulteventtypeid) {
        return findByForcelogintoviewsitesDefaulteventtypeid(forcelogintoviewsites, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesDefaulteventtypeid(boolean forcelogintoviewsites, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEncryptedlicense(boolean forcelogintoviewsites, String encryptedlicense) {
        return findByForcelogintoviewsitesEncryptedlicense(forcelogintoviewsites, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEncryptedlicense(boolean forcelogintoviewsites, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesBaseaccountprice(boolean forcelogintoviewsites, double baseaccountprice) {
        return findByForcelogintoviewsitesBaseaccountprice(forcelogintoviewsites, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesBaseaccountprice(boolean forcelogintoviewsites, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesPriceper100mbstorage(boolean forcelogintoviewsites, double priceper100mbstorage) {
        return findByForcelogintoviewsitesPriceper100mbstorage(forcelogintoviewsites, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesPriceper100mbstorage(boolean forcelogintoviewsites, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesPricepergbbandwidth(boolean forcelogintoviewsites, double pricepergbbandwidth) {
        return findByForcelogintoviewsitesPricepergbbandwidth(forcelogintoviewsites, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesPricepergbbandwidth(boolean forcelogintoviewsites, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesIstrackbackenabled(boolean forcelogintoviewsites, boolean istrackbackenabled) {
        return findByForcelogintoviewsitesIstrackbackenabled(forcelogintoviewsites, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesIstrackbackenabled(boolean forcelogintoviewsites, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesPlusertemplateid(boolean forcelogintoviewsites, int plusertemplateid) {
        return findByForcelogintoviewsitesPlusertemplateid(forcelogintoviewsites, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesPlusertemplateid(boolean forcelogintoviewsites, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesBannerone(boolean forcelogintoviewsites, String bannerone) {
        return findByForcelogintoviewsitesBannerone(forcelogintoviewsites, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesBannerone(boolean forcelogintoviewsites, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesBannertwo(boolean forcelogintoviewsites, String bannertwo) {
        return findByForcelogintoviewsitesBannertwo(forcelogintoviewsites, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesBannertwo(boolean forcelogintoviewsites, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesBannerthree(boolean forcelogintoviewsites, String bannerthree) {
        return findByForcelogintoviewsitesBannerthree(forcelogintoviewsites, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesBannerthree(boolean forcelogintoviewsites, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesShowbannertagsonpro(boolean forcelogintoviewsites, boolean showbannertagsonpro) {
        return findByForcelogintoviewsitesShowbannertagsonpro(forcelogintoviewsites, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesShowbannertagsonpro(boolean forcelogintoviewsites, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesIsemailactivationofaccountsrequired(boolean forcelogintoviewsites, boolean isemailactivationofaccountsrequired) {
        return findByForcelogintoviewsitesIsemailactivationofaccountsrequired(forcelogintoviewsites, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesIsemailactivationofaccountsrequired(boolean forcelogintoviewsites, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEmailtextactivationmessage(boolean forcelogintoviewsites, String emailtextactivationmessage) {
        return findByForcelogintoviewsitesEmailtextactivationmessage(forcelogintoviewsites, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEmailtextactivationmessage(boolean forcelogintoviewsites, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEmailsubjectactivationmessage(boolean forcelogintoviewsites, String emailsubjectactivationmessage) {
        return findByForcelogintoviewsitesEmailsubjectactivationmessage(forcelogintoviewsites, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEmailsubjectactivationmessage(boolean forcelogintoviewsites, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEmailtextwelcomemessage(boolean forcelogintoviewsites, String emailtextwelcomemessage) {
        return findByForcelogintoviewsitesEmailtextwelcomemessage(forcelogintoviewsites, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEmailtextwelcomemessage(boolean forcelogintoviewsites, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEmailsubjectwelcomemessage(boolean forcelogintoviewsites, String emailsubjectwelcomemessage) {
        return findByForcelogintoviewsitesEmailsubjectwelcomemessage(forcelogintoviewsites, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesEmailsubjectwelcomemessage(boolean forcelogintoviewsites, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesAccountupgradeurl(boolean forcelogintoviewsites, String accountupgradeurl) {
        return findByForcelogintoviewsitesAccountupgradeurl(forcelogintoviewsites, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByForcelogintoviewsitesAccountupgradeurl(boolean forcelogintoviewsites, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE forcelogintoviewsites='"+reger.core.Util.booleanAsSQLText(forcelogintoviewsites)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEmailtonotifyofnewaccounts(boolean isweblogscompingon, String emailtonotifyofnewaccounts) {
        return findByIsweblogscompingonEmailtonotifyofnewaccounts(isweblogscompingon, emailtonotifyofnewaccounts, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEmailtonotifyofnewaccounts(boolean isweblogscompingon, String emailtonotifyofnewaccounts, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEmailapiuniqueidentifier(boolean isweblogscompingon, String emailapiuniqueidentifier) {
        return findByIsweblogscompingonEmailapiuniqueidentifier(isweblogscompingon, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEmailapiuniqueidentifier(boolean isweblogscompingon, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonDefaultmaxbandwidth(boolean isweblogscompingon, int defaultmaxbandwidth) {
        return findByIsweblogscompingonDefaultmaxbandwidth(isweblogscompingon, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonDefaultmaxbandwidth(boolean isweblogscompingon, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMinpasswordchars(boolean isweblogscompingon, int minpasswordchars) {
        return findByIsweblogscompingonMinpasswordchars(isweblogscompingon, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMinpasswordchars(boolean isweblogscompingon, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMinpassworduppercasechars(boolean isweblogscompingon, int minpassworduppercasechars) {
        return findByIsweblogscompingonMinpassworduppercasechars(isweblogscompingon, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMinpassworduppercasechars(boolean isweblogscompingon, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMinpasswordlowercasechars(boolean isweblogscompingon, int minpasswordlowercasechars) {
        return findByIsweblogscompingonMinpasswordlowercasechars(isweblogscompingon, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMinpasswordlowercasechars(boolean isweblogscompingon, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMinpasswordspecialchars(boolean isweblogscompingon, int minpasswordspecialchars) {
        return findByIsweblogscompingonMinpasswordspecialchars(isweblogscompingon, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMinpasswordspecialchars(boolean isweblogscompingon, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMinpasswordnumericchars(boolean isweblogscompingon, int minpasswordnumericchars) {
        return findByIsweblogscompingonMinpasswordnumericchars(isweblogscompingon, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMinpasswordnumericchars(boolean isweblogscompingon, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonIspasswordsentviaemail(boolean isweblogscompingon, boolean ispasswordsentviaemail) {
        return findByIsweblogscompingonIspasswordsentviaemail(isweblogscompingon, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonIspasswordsentviaemail(boolean isweblogscompingon, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonTermsofuselinktext(boolean isweblogscompingon, String termsofuselinktext) {
        return findByIsweblogscompingonTermsofuselinktext(isweblogscompingon, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonTermsofuselinktext(boolean isweblogscompingon, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonFeedbacklinktext(boolean isweblogscompingon, String feedbacklinktext) {
        return findByIsweblogscompingonFeedbacklinktext(isweblogscompingon, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonFeedbacklinktext(boolean isweblogscompingon, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonDoapplyplusertemplatetopro(boolean isweblogscompingon, boolean doapplyplusertemplatetopro) {
        return findByIsweblogscompingonDoapplyplusertemplatetopro(isweblogscompingon, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonDoapplyplusertemplatetopro(boolean isweblogscompingon, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonPublicsitetemplateid(boolean isweblogscompingon, int publicsitetemplateid) {
        return findByIsweblogscompingonPublicsitetemplateid(isweblogscompingon, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonPublicsitetemplateid(boolean isweblogscompingon, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEntlisttemplateid(boolean isweblogscompingon, int entlisttemplateid) {
        return findByIsweblogscompingonEntlisttemplateid(isweblogscompingon, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEntlisttemplateid(boolean isweblogscompingon, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonHptemplateid(boolean isweblogscompingon, int hptemplateid) {
        return findByIsweblogscompingonHptemplateid(isweblogscompingon, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonHptemplateid(boolean isweblogscompingon, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMarketingsitetemplateid(boolean isweblogscompingon, int marketingsitetemplateid) {
        return findByIsweblogscompingonMarketingsitetemplateid(isweblogscompingon, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMarketingsitetemplateid(boolean isweblogscompingon, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMarketingsitehptemplateid(boolean isweblogscompingon, int marketingsitehptemplateid) {
        return findByIsweblogscompingonMarketingsitehptemplateid(isweblogscompingon, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonMarketingsitehptemplateid(boolean isweblogscompingon, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonDefaulteventtypeid(boolean isweblogscompingon, int defaulteventtypeid) {
        return findByIsweblogscompingonDefaulteventtypeid(isweblogscompingon, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonDefaulteventtypeid(boolean isweblogscompingon, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEncryptedlicense(boolean isweblogscompingon, String encryptedlicense) {
        return findByIsweblogscompingonEncryptedlicense(isweblogscompingon, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEncryptedlicense(boolean isweblogscompingon, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonBaseaccountprice(boolean isweblogscompingon, double baseaccountprice) {
        return findByIsweblogscompingonBaseaccountprice(isweblogscompingon, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonBaseaccountprice(boolean isweblogscompingon, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonPriceper100mbstorage(boolean isweblogscompingon, double priceper100mbstorage) {
        return findByIsweblogscompingonPriceper100mbstorage(isweblogscompingon, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonPriceper100mbstorage(boolean isweblogscompingon, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonPricepergbbandwidth(boolean isweblogscompingon, double pricepergbbandwidth) {
        return findByIsweblogscompingonPricepergbbandwidth(isweblogscompingon, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonPricepergbbandwidth(boolean isweblogscompingon, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonIstrackbackenabled(boolean isweblogscompingon, boolean istrackbackenabled) {
        return findByIsweblogscompingonIstrackbackenabled(isweblogscompingon, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonIstrackbackenabled(boolean isweblogscompingon, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonPlusertemplateid(boolean isweblogscompingon, int plusertemplateid) {
        return findByIsweblogscompingonPlusertemplateid(isweblogscompingon, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonPlusertemplateid(boolean isweblogscompingon, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonBannerone(boolean isweblogscompingon, String bannerone) {
        return findByIsweblogscompingonBannerone(isweblogscompingon, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonBannerone(boolean isweblogscompingon, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonBannertwo(boolean isweblogscompingon, String bannertwo) {
        return findByIsweblogscompingonBannertwo(isweblogscompingon, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonBannertwo(boolean isweblogscompingon, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonBannerthree(boolean isweblogscompingon, String bannerthree) {
        return findByIsweblogscompingonBannerthree(isweblogscompingon, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonBannerthree(boolean isweblogscompingon, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonShowbannertagsonpro(boolean isweblogscompingon, boolean showbannertagsonpro) {
        return findByIsweblogscompingonShowbannertagsonpro(isweblogscompingon, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonShowbannertagsonpro(boolean isweblogscompingon, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonIsemailactivationofaccountsrequired(boolean isweblogscompingon, boolean isemailactivationofaccountsrequired) {
        return findByIsweblogscompingonIsemailactivationofaccountsrequired(isweblogscompingon, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonIsemailactivationofaccountsrequired(boolean isweblogscompingon, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEmailtextactivationmessage(boolean isweblogscompingon, String emailtextactivationmessage) {
        return findByIsweblogscompingonEmailtextactivationmessage(isweblogscompingon, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEmailtextactivationmessage(boolean isweblogscompingon, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEmailsubjectactivationmessage(boolean isweblogscompingon, String emailsubjectactivationmessage) {
        return findByIsweblogscompingonEmailsubjectactivationmessage(isweblogscompingon, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEmailsubjectactivationmessage(boolean isweblogscompingon, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEmailtextwelcomemessage(boolean isweblogscompingon, String emailtextwelcomemessage) {
        return findByIsweblogscompingonEmailtextwelcomemessage(isweblogscompingon, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEmailtextwelcomemessage(boolean isweblogscompingon, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEmailsubjectwelcomemessage(boolean isweblogscompingon, String emailsubjectwelcomemessage) {
        return findByIsweblogscompingonEmailsubjectwelcomemessage(isweblogscompingon, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonEmailsubjectwelcomemessage(boolean isweblogscompingon, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonAccountupgradeurl(boolean isweblogscompingon, String accountupgradeurl) {
        return findByIsweblogscompingonAccountupgradeurl(isweblogscompingon, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsweblogscompingonAccountupgradeurl(boolean isweblogscompingon, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isweblogscompingon='"+reger.core.Util.booleanAsSQLText(isweblogscompingon)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEmailapiuniqueidentifier(String emailtonotifyofnewaccounts, String emailapiuniqueidentifier) {
        return findByEmailtonotifyofnewaccountsEmailapiuniqueidentifier(emailtonotifyofnewaccounts, emailapiuniqueidentifier, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEmailapiuniqueidentifier(String emailtonotifyofnewaccounts, String emailapiuniqueidentifier, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsDefaultmaxbandwidth(String emailtonotifyofnewaccounts, int defaultmaxbandwidth) {
        return findByEmailtonotifyofnewaccountsDefaultmaxbandwidth(emailtonotifyofnewaccounts, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsDefaultmaxbandwidth(String emailtonotifyofnewaccounts, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMinpasswordchars(String emailtonotifyofnewaccounts, int minpasswordchars) {
        return findByEmailtonotifyofnewaccountsMinpasswordchars(emailtonotifyofnewaccounts, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMinpasswordchars(String emailtonotifyofnewaccounts, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMinpassworduppercasechars(String emailtonotifyofnewaccounts, int minpassworduppercasechars) {
        return findByEmailtonotifyofnewaccountsMinpassworduppercasechars(emailtonotifyofnewaccounts, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMinpassworduppercasechars(String emailtonotifyofnewaccounts, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMinpasswordlowercasechars(String emailtonotifyofnewaccounts, int minpasswordlowercasechars) {
        return findByEmailtonotifyofnewaccountsMinpasswordlowercasechars(emailtonotifyofnewaccounts, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMinpasswordlowercasechars(String emailtonotifyofnewaccounts, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMinpasswordspecialchars(String emailtonotifyofnewaccounts, int minpasswordspecialchars) {
        return findByEmailtonotifyofnewaccountsMinpasswordspecialchars(emailtonotifyofnewaccounts, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMinpasswordspecialchars(String emailtonotifyofnewaccounts, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMinpasswordnumericchars(String emailtonotifyofnewaccounts, int minpasswordnumericchars) {
        return findByEmailtonotifyofnewaccountsMinpasswordnumericchars(emailtonotifyofnewaccounts, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMinpasswordnumericchars(String emailtonotifyofnewaccounts, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsIspasswordsentviaemail(String emailtonotifyofnewaccounts, boolean ispasswordsentviaemail) {
        return findByEmailtonotifyofnewaccountsIspasswordsentviaemail(emailtonotifyofnewaccounts, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsIspasswordsentviaemail(String emailtonotifyofnewaccounts, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsTermsofuselinktext(String emailtonotifyofnewaccounts, String termsofuselinktext) {
        return findByEmailtonotifyofnewaccountsTermsofuselinktext(emailtonotifyofnewaccounts, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsTermsofuselinktext(String emailtonotifyofnewaccounts, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsFeedbacklinktext(String emailtonotifyofnewaccounts, String feedbacklinktext) {
        return findByEmailtonotifyofnewaccountsFeedbacklinktext(emailtonotifyofnewaccounts, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsFeedbacklinktext(String emailtonotifyofnewaccounts, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsDoapplyplusertemplatetopro(String emailtonotifyofnewaccounts, boolean doapplyplusertemplatetopro) {
        return findByEmailtonotifyofnewaccountsDoapplyplusertemplatetopro(emailtonotifyofnewaccounts, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsDoapplyplusertemplatetopro(String emailtonotifyofnewaccounts, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsPublicsitetemplateid(String emailtonotifyofnewaccounts, int publicsitetemplateid) {
        return findByEmailtonotifyofnewaccountsPublicsitetemplateid(emailtonotifyofnewaccounts, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsPublicsitetemplateid(String emailtonotifyofnewaccounts, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEntlisttemplateid(String emailtonotifyofnewaccounts, int entlisttemplateid) {
        return findByEmailtonotifyofnewaccountsEntlisttemplateid(emailtonotifyofnewaccounts, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEntlisttemplateid(String emailtonotifyofnewaccounts, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsHptemplateid(String emailtonotifyofnewaccounts, int hptemplateid) {
        return findByEmailtonotifyofnewaccountsHptemplateid(emailtonotifyofnewaccounts, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsHptemplateid(String emailtonotifyofnewaccounts, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMarketingsitetemplateid(String emailtonotifyofnewaccounts, int marketingsitetemplateid) {
        return findByEmailtonotifyofnewaccountsMarketingsitetemplateid(emailtonotifyofnewaccounts, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMarketingsitetemplateid(String emailtonotifyofnewaccounts, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMarketingsitehptemplateid(String emailtonotifyofnewaccounts, int marketingsitehptemplateid) {
        return findByEmailtonotifyofnewaccountsMarketingsitehptemplateid(emailtonotifyofnewaccounts, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsMarketingsitehptemplateid(String emailtonotifyofnewaccounts, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsDefaulteventtypeid(String emailtonotifyofnewaccounts, int defaulteventtypeid) {
        return findByEmailtonotifyofnewaccountsDefaulteventtypeid(emailtonotifyofnewaccounts, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsDefaulteventtypeid(String emailtonotifyofnewaccounts, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEncryptedlicense(String emailtonotifyofnewaccounts, String encryptedlicense) {
        return findByEmailtonotifyofnewaccountsEncryptedlicense(emailtonotifyofnewaccounts, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEncryptedlicense(String emailtonotifyofnewaccounts, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsBaseaccountprice(String emailtonotifyofnewaccounts, double baseaccountprice) {
        return findByEmailtonotifyofnewaccountsBaseaccountprice(emailtonotifyofnewaccounts, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsBaseaccountprice(String emailtonotifyofnewaccounts, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsPriceper100mbstorage(String emailtonotifyofnewaccounts, double priceper100mbstorage) {
        return findByEmailtonotifyofnewaccountsPriceper100mbstorage(emailtonotifyofnewaccounts, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsPriceper100mbstorage(String emailtonotifyofnewaccounts, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsPricepergbbandwidth(String emailtonotifyofnewaccounts, double pricepergbbandwidth) {
        return findByEmailtonotifyofnewaccountsPricepergbbandwidth(emailtonotifyofnewaccounts, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsPricepergbbandwidth(String emailtonotifyofnewaccounts, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsIstrackbackenabled(String emailtonotifyofnewaccounts, boolean istrackbackenabled) {
        return findByEmailtonotifyofnewaccountsIstrackbackenabled(emailtonotifyofnewaccounts, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsIstrackbackenabled(String emailtonotifyofnewaccounts, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsPlusertemplateid(String emailtonotifyofnewaccounts, int plusertemplateid) {
        return findByEmailtonotifyofnewaccountsPlusertemplateid(emailtonotifyofnewaccounts, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsPlusertemplateid(String emailtonotifyofnewaccounts, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsBannerone(String emailtonotifyofnewaccounts, String bannerone) {
        return findByEmailtonotifyofnewaccountsBannerone(emailtonotifyofnewaccounts, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsBannerone(String emailtonotifyofnewaccounts, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsBannertwo(String emailtonotifyofnewaccounts, String bannertwo) {
        return findByEmailtonotifyofnewaccountsBannertwo(emailtonotifyofnewaccounts, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsBannertwo(String emailtonotifyofnewaccounts, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsBannerthree(String emailtonotifyofnewaccounts, String bannerthree) {
        return findByEmailtonotifyofnewaccountsBannerthree(emailtonotifyofnewaccounts, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsBannerthree(String emailtonotifyofnewaccounts, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsShowbannertagsonpro(String emailtonotifyofnewaccounts, boolean showbannertagsonpro) {
        return findByEmailtonotifyofnewaccountsShowbannertagsonpro(emailtonotifyofnewaccounts, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsShowbannertagsonpro(String emailtonotifyofnewaccounts, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsIsemailactivationofaccountsrequired(String emailtonotifyofnewaccounts, boolean isemailactivationofaccountsrequired) {
        return findByEmailtonotifyofnewaccountsIsemailactivationofaccountsrequired(emailtonotifyofnewaccounts, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsIsemailactivationofaccountsrequired(String emailtonotifyofnewaccounts, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEmailtextactivationmessage(String emailtonotifyofnewaccounts, String emailtextactivationmessage) {
        return findByEmailtonotifyofnewaccountsEmailtextactivationmessage(emailtonotifyofnewaccounts, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEmailtextactivationmessage(String emailtonotifyofnewaccounts, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEmailsubjectactivationmessage(String emailtonotifyofnewaccounts, String emailsubjectactivationmessage) {
        return findByEmailtonotifyofnewaccountsEmailsubjectactivationmessage(emailtonotifyofnewaccounts, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEmailsubjectactivationmessage(String emailtonotifyofnewaccounts, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEmailtextwelcomemessage(String emailtonotifyofnewaccounts, String emailtextwelcomemessage) {
        return findByEmailtonotifyofnewaccountsEmailtextwelcomemessage(emailtonotifyofnewaccounts, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEmailtextwelcomemessage(String emailtonotifyofnewaccounts, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEmailsubjectwelcomemessage(String emailtonotifyofnewaccounts, String emailsubjectwelcomemessage) {
        return findByEmailtonotifyofnewaccountsEmailsubjectwelcomemessage(emailtonotifyofnewaccounts, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsEmailsubjectwelcomemessage(String emailtonotifyofnewaccounts, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsAccountupgradeurl(String emailtonotifyofnewaccounts, String accountupgradeurl) {
        return findByEmailtonotifyofnewaccountsAccountupgradeurl(emailtonotifyofnewaccounts, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtonotifyofnewaccountsAccountupgradeurl(String emailtonotifyofnewaccounts, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtonotifyofnewaccounts='"+reger.core.Util.cleanForSQL(emailtonotifyofnewaccounts)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierDefaultmaxbandwidth(String emailapiuniqueidentifier, int defaultmaxbandwidth) {
        return findByEmailapiuniqueidentifierDefaultmaxbandwidth(emailapiuniqueidentifier, defaultmaxbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierDefaultmaxbandwidth(String emailapiuniqueidentifier, int defaultmaxbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', defaultmaxbandwidth='"+defaultmaxbandwidth+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMinpasswordchars(String emailapiuniqueidentifier, int minpasswordchars) {
        return findByEmailapiuniqueidentifierMinpasswordchars(emailapiuniqueidentifier, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMinpasswordchars(String emailapiuniqueidentifier, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMinpassworduppercasechars(String emailapiuniqueidentifier, int minpassworduppercasechars) {
        return findByEmailapiuniqueidentifierMinpassworduppercasechars(emailapiuniqueidentifier, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMinpassworduppercasechars(String emailapiuniqueidentifier, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMinpasswordlowercasechars(String emailapiuniqueidentifier, int minpasswordlowercasechars) {
        return findByEmailapiuniqueidentifierMinpasswordlowercasechars(emailapiuniqueidentifier, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMinpasswordlowercasechars(String emailapiuniqueidentifier, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMinpasswordspecialchars(String emailapiuniqueidentifier, int minpasswordspecialchars) {
        return findByEmailapiuniqueidentifierMinpasswordspecialchars(emailapiuniqueidentifier, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMinpasswordspecialchars(String emailapiuniqueidentifier, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMinpasswordnumericchars(String emailapiuniqueidentifier, int minpasswordnumericchars) {
        return findByEmailapiuniqueidentifierMinpasswordnumericchars(emailapiuniqueidentifier, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMinpasswordnumericchars(String emailapiuniqueidentifier, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierIspasswordsentviaemail(String emailapiuniqueidentifier, boolean ispasswordsentviaemail) {
        return findByEmailapiuniqueidentifierIspasswordsentviaemail(emailapiuniqueidentifier, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierIspasswordsentviaemail(String emailapiuniqueidentifier, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierTermsofuselinktext(String emailapiuniqueidentifier, String termsofuselinktext) {
        return findByEmailapiuniqueidentifierTermsofuselinktext(emailapiuniqueidentifier, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierTermsofuselinktext(String emailapiuniqueidentifier, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierFeedbacklinktext(String emailapiuniqueidentifier, String feedbacklinktext) {
        return findByEmailapiuniqueidentifierFeedbacklinktext(emailapiuniqueidentifier, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierFeedbacklinktext(String emailapiuniqueidentifier, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierDoapplyplusertemplatetopro(String emailapiuniqueidentifier, boolean doapplyplusertemplatetopro) {
        return findByEmailapiuniqueidentifierDoapplyplusertemplatetopro(emailapiuniqueidentifier, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierDoapplyplusertemplatetopro(String emailapiuniqueidentifier, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierPublicsitetemplateid(String emailapiuniqueidentifier, int publicsitetemplateid) {
        return findByEmailapiuniqueidentifierPublicsitetemplateid(emailapiuniqueidentifier, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierPublicsitetemplateid(String emailapiuniqueidentifier, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierEntlisttemplateid(String emailapiuniqueidentifier, int entlisttemplateid) {
        return findByEmailapiuniqueidentifierEntlisttemplateid(emailapiuniqueidentifier, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierEntlisttemplateid(String emailapiuniqueidentifier, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierHptemplateid(String emailapiuniqueidentifier, int hptemplateid) {
        return findByEmailapiuniqueidentifierHptemplateid(emailapiuniqueidentifier, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierHptemplateid(String emailapiuniqueidentifier, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMarketingsitetemplateid(String emailapiuniqueidentifier, int marketingsitetemplateid) {
        return findByEmailapiuniqueidentifierMarketingsitetemplateid(emailapiuniqueidentifier, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMarketingsitetemplateid(String emailapiuniqueidentifier, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMarketingsitehptemplateid(String emailapiuniqueidentifier, int marketingsitehptemplateid) {
        return findByEmailapiuniqueidentifierMarketingsitehptemplateid(emailapiuniqueidentifier, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierMarketingsitehptemplateid(String emailapiuniqueidentifier, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierDefaulteventtypeid(String emailapiuniqueidentifier, int defaulteventtypeid) {
        return findByEmailapiuniqueidentifierDefaulteventtypeid(emailapiuniqueidentifier, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierDefaulteventtypeid(String emailapiuniqueidentifier, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierEncryptedlicense(String emailapiuniqueidentifier, String encryptedlicense) {
        return findByEmailapiuniqueidentifierEncryptedlicense(emailapiuniqueidentifier, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierEncryptedlicense(String emailapiuniqueidentifier, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierBaseaccountprice(String emailapiuniqueidentifier, double baseaccountprice) {
        return findByEmailapiuniqueidentifierBaseaccountprice(emailapiuniqueidentifier, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierBaseaccountprice(String emailapiuniqueidentifier, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierPriceper100mbstorage(String emailapiuniqueidentifier, double priceper100mbstorage) {
        return findByEmailapiuniqueidentifierPriceper100mbstorage(emailapiuniqueidentifier, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierPriceper100mbstorage(String emailapiuniqueidentifier, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierPricepergbbandwidth(String emailapiuniqueidentifier, double pricepergbbandwidth) {
        return findByEmailapiuniqueidentifierPricepergbbandwidth(emailapiuniqueidentifier, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierPricepergbbandwidth(String emailapiuniqueidentifier, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierIstrackbackenabled(String emailapiuniqueidentifier, boolean istrackbackenabled) {
        return findByEmailapiuniqueidentifierIstrackbackenabled(emailapiuniqueidentifier, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierIstrackbackenabled(String emailapiuniqueidentifier, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierPlusertemplateid(String emailapiuniqueidentifier, int plusertemplateid) {
        return findByEmailapiuniqueidentifierPlusertemplateid(emailapiuniqueidentifier, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierPlusertemplateid(String emailapiuniqueidentifier, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierBannerone(String emailapiuniqueidentifier, String bannerone) {
        return findByEmailapiuniqueidentifierBannerone(emailapiuniqueidentifier, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierBannerone(String emailapiuniqueidentifier, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierBannertwo(String emailapiuniqueidentifier, String bannertwo) {
        return findByEmailapiuniqueidentifierBannertwo(emailapiuniqueidentifier, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierBannertwo(String emailapiuniqueidentifier, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierBannerthree(String emailapiuniqueidentifier, String bannerthree) {
        return findByEmailapiuniqueidentifierBannerthree(emailapiuniqueidentifier, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierBannerthree(String emailapiuniqueidentifier, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierShowbannertagsonpro(String emailapiuniqueidentifier, boolean showbannertagsonpro) {
        return findByEmailapiuniqueidentifierShowbannertagsonpro(emailapiuniqueidentifier, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierShowbannertagsonpro(String emailapiuniqueidentifier, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierIsemailactivationofaccountsrequired(String emailapiuniqueidentifier, boolean isemailactivationofaccountsrequired) {
        return findByEmailapiuniqueidentifierIsemailactivationofaccountsrequired(emailapiuniqueidentifier, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierIsemailactivationofaccountsrequired(String emailapiuniqueidentifier, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierEmailtextactivationmessage(String emailapiuniqueidentifier, String emailtextactivationmessage) {
        return findByEmailapiuniqueidentifierEmailtextactivationmessage(emailapiuniqueidentifier, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierEmailtextactivationmessage(String emailapiuniqueidentifier, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierEmailsubjectactivationmessage(String emailapiuniqueidentifier, String emailsubjectactivationmessage) {
        return findByEmailapiuniqueidentifierEmailsubjectactivationmessage(emailapiuniqueidentifier, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierEmailsubjectactivationmessage(String emailapiuniqueidentifier, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierEmailtextwelcomemessage(String emailapiuniqueidentifier, String emailtextwelcomemessage) {
        return findByEmailapiuniqueidentifierEmailtextwelcomemessage(emailapiuniqueidentifier, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierEmailtextwelcomemessage(String emailapiuniqueidentifier, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierEmailsubjectwelcomemessage(String emailapiuniqueidentifier, String emailsubjectwelcomemessage) {
        return findByEmailapiuniqueidentifierEmailsubjectwelcomemessage(emailapiuniqueidentifier, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierEmailsubjectwelcomemessage(String emailapiuniqueidentifier, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierAccountupgradeurl(String emailapiuniqueidentifier, String accountupgradeurl) {
        return findByEmailapiuniqueidentifierAccountupgradeurl(emailapiuniqueidentifier, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailapiuniqueidentifierAccountupgradeurl(String emailapiuniqueidentifier, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailapiuniqueidentifier='"+reger.core.Util.cleanForSQL(emailapiuniqueidentifier)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMinpasswordchars(int defaultmaxbandwidth, int minpasswordchars) {
        return findByDefaultmaxbandwidthMinpasswordchars(defaultmaxbandwidth, minpasswordchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMinpasswordchars(int defaultmaxbandwidth, int minpasswordchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', minpasswordchars='"+minpasswordchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMinpassworduppercasechars(int defaultmaxbandwidth, int minpassworduppercasechars) {
        return findByDefaultmaxbandwidthMinpassworduppercasechars(defaultmaxbandwidth, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMinpassworduppercasechars(int defaultmaxbandwidth, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMinpasswordlowercasechars(int defaultmaxbandwidth, int minpasswordlowercasechars) {
        return findByDefaultmaxbandwidthMinpasswordlowercasechars(defaultmaxbandwidth, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMinpasswordlowercasechars(int defaultmaxbandwidth, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMinpasswordspecialchars(int defaultmaxbandwidth, int minpasswordspecialchars) {
        return findByDefaultmaxbandwidthMinpasswordspecialchars(defaultmaxbandwidth, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMinpasswordspecialchars(int defaultmaxbandwidth, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMinpasswordnumericchars(int defaultmaxbandwidth, int minpasswordnumericchars) {
        return findByDefaultmaxbandwidthMinpasswordnumericchars(defaultmaxbandwidth, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMinpasswordnumericchars(int defaultmaxbandwidth, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthIspasswordsentviaemail(int defaultmaxbandwidth, boolean ispasswordsentviaemail) {
        return findByDefaultmaxbandwidthIspasswordsentviaemail(defaultmaxbandwidth, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthIspasswordsentviaemail(int defaultmaxbandwidth, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthTermsofuselinktext(int defaultmaxbandwidth, String termsofuselinktext) {
        return findByDefaultmaxbandwidthTermsofuselinktext(defaultmaxbandwidth, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthTermsofuselinktext(int defaultmaxbandwidth, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthFeedbacklinktext(int defaultmaxbandwidth, String feedbacklinktext) {
        return findByDefaultmaxbandwidthFeedbacklinktext(defaultmaxbandwidth, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthFeedbacklinktext(int defaultmaxbandwidth, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthDoapplyplusertemplatetopro(int defaultmaxbandwidth, boolean doapplyplusertemplatetopro) {
        return findByDefaultmaxbandwidthDoapplyplusertemplatetopro(defaultmaxbandwidth, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthDoapplyplusertemplatetopro(int defaultmaxbandwidth, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthPublicsitetemplateid(int defaultmaxbandwidth, int publicsitetemplateid) {
        return findByDefaultmaxbandwidthPublicsitetemplateid(defaultmaxbandwidth, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthPublicsitetemplateid(int defaultmaxbandwidth, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthEntlisttemplateid(int defaultmaxbandwidth, int entlisttemplateid) {
        return findByDefaultmaxbandwidthEntlisttemplateid(defaultmaxbandwidth, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthEntlisttemplateid(int defaultmaxbandwidth, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthHptemplateid(int defaultmaxbandwidth, int hptemplateid) {
        return findByDefaultmaxbandwidthHptemplateid(defaultmaxbandwidth, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthHptemplateid(int defaultmaxbandwidth, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMarketingsitetemplateid(int defaultmaxbandwidth, int marketingsitetemplateid) {
        return findByDefaultmaxbandwidthMarketingsitetemplateid(defaultmaxbandwidth, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMarketingsitetemplateid(int defaultmaxbandwidth, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMarketingsitehptemplateid(int defaultmaxbandwidth, int marketingsitehptemplateid) {
        return findByDefaultmaxbandwidthMarketingsitehptemplateid(defaultmaxbandwidth, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthMarketingsitehptemplateid(int defaultmaxbandwidth, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthDefaulteventtypeid(int defaultmaxbandwidth, int defaulteventtypeid) {
        return findByDefaultmaxbandwidthDefaulteventtypeid(defaultmaxbandwidth, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthDefaulteventtypeid(int defaultmaxbandwidth, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthEncryptedlicense(int defaultmaxbandwidth, String encryptedlicense) {
        return findByDefaultmaxbandwidthEncryptedlicense(defaultmaxbandwidth, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthEncryptedlicense(int defaultmaxbandwidth, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthBaseaccountprice(int defaultmaxbandwidth, double baseaccountprice) {
        return findByDefaultmaxbandwidthBaseaccountprice(defaultmaxbandwidth, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthBaseaccountprice(int defaultmaxbandwidth, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthPriceper100mbstorage(int defaultmaxbandwidth, double priceper100mbstorage) {
        return findByDefaultmaxbandwidthPriceper100mbstorage(defaultmaxbandwidth, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthPriceper100mbstorage(int defaultmaxbandwidth, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthPricepergbbandwidth(int defaultmaxbandwidth, double pricepergbbandwidth) {
        return findByDefaultmaxbandwidthPricepergbbandwidth(defaultmaxbandwidth, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthPricepergbbandwidth(int defaultmaxbandwidth, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthIstrackbackenabled(int defaultmaxbandwidth, boolean istrackbackenabled) {
        return findByDefaultmaxbandwidthIstrackbackenabled(defaultmaxbandwidth, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthIstrackbackenabled(int defaultmaxbandwidth, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthPlusertemplateid(int defaultmaxbandwidth, int plusertemplateid) {
        return findByDefaultmaxbandwidthPlusertemplateid(defaultmaxbandwidth, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthPlusertemplateid(int defaultmaxbandwidth, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthBannerone(int defaultmaxbandwidth, String bannerone) {
        return findByDefaultmaxbandwidthBannerone(defaultmaxbandwidth, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthBannerone(int defaultmaxbandwidth, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthBannertwo(int defaultmaxbandwidth, String bannertwo) {
        return findByDefaultmaxbandwidthBannertwo(defaultmaxbandwidth, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthBannertwo(int defaultmaxbandwidth, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthBannerthree(int defaultmaxbandwidth, String bannerthree) {
        return findByDefaultmaxbandwidthBannerthree(defaultmaxbandwidth, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthBannerthree(int defaultmaxbandwidth, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthShowbannertagsonpro(int defaultmaxbandwidth, boolean showbannertagsonpro) {
        return findByDefaultmaxbandwidthShowbannertagsonpro(defaultmaxbandwidth, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthShowbannertagsonpro(int defaultmaxbandwidth, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthIsemailactivationofaccountsrequired(int defaultmaxbandwidth, boolean isemailactivationofaccountsrequired) {
        return findByDefaultmaxbandwidthIsemailactivationofaccountsrequired(defaultmaxbandwidth, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthIsemailactivationofaccountsrequired(int defaultmaxbandwidth, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthEmailtextactivationmessage(int defaultmaxbandwidth, String emailtextactivationmessage) {
        return findByDefaultmaxbandwidthEmailtextactivationmessage(defaultmaxbandwidth, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthEmailtextactivationmessage(int defaultmaxbandwidth, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthEmailsubjectactivationmessage(int defaultmaxbandwidth, String emailsubjectactivationmessage) {
        return findByDefaultmaxbandwidthEmailsubjectactivationmessage(defaultmaxbandwidth, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthEmailsubjectactivationmessage(int defaultmaxbandwidth, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthEmailtextwelcomemessage(int defaultmaxbandwidth, String emailtextwelcomemessage) {
        return findByDefaultmaxbandwidthEmailtextwelcomemessage(defaultmaxbandwidth, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthEmailtextwelcomemessage(int defaultmaxbandwidth, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthEmailsubjectwelcomemessage(int defaultmaxbandwidth, String emailsubjectwelcomemessage) {
        return findByDefaultmaxbandwidthEmailsubjectwelcomemessage(defaultmaxbandwidth, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthEmailsubjectwelcomemessage(int defaultmaxbandwidth, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthAccountupgradeurl(int defaultmaxbandwidth, String accountupgradeurl) {
        return findByDefaultmaxbandwidthAccountupgradeurl(defaultmaxbandwidth, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaultmaxbandwidthAccountupgradeurl(int defaultmaxbandwidth, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaultmaxbandwidth='"+defaultmaxbandwidth+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsMinpassworduppercasechars(int minpasswordchars, int minpassworduppercasechars) {
        return findByMinpasswordcharsMinpassworduppercasechars(minpasswordchars, minpassworduppercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsMinpassworduppercasechars(int minpasswordchars, int minpassworduppercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', minpassworduppercasechars='"+minpassworduppercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsMinpasswordlowercasechars(int minpasswordchars, int minpasswordlowercasechars) {
        return findByMinpasswordcharsMinpasswordlowercasechars(minpasswordchars, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsMinpasswordlowercasechars(int minpasswordchars, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsMinpasswordspecialchars(int minpasswordchars, int minpasswordspecialchars) {
        return findByMinpasswordcharsMinpasswordspecialchars(minpasswordchars, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsMinpasswordspecialchars(int minpasswordchars, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsMinpasswordnumericchars(int minpasswordchars, int minpasswordnumericchars) {
        return findByMinpasswordcharsMinpasswordnumericchars(minpasswordchars, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsMinpasswordnumericchars(int minpasswordchars, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsIspasswordsentviaemail(int minpasswordchars, boolean ispasswordsentviaemail) {
        return findByMinpasswordcharsIspasswordsentviaemail(minpasswordchars, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsIspasswordsentviaemail(int minpasswordchars, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsTermsofuselinktext(int minpasswordchars, String termsofuselinktext) {
        return findByMinpasswordcharsTermsofuselinktext(minpasswordchars, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsTermsofuselinktext(int minpasswordchars, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsFeedbacklinktext(int minpasswordchars, String feedbacklinktext) {
        return findByMinpasswordcharsFeedbacklinktext(minpasswordchars, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsFeedbacklinktext(int minpasswordchars, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsDoapplyplusertemplatetopro(int minpasswordchars, boolean doapplyplusertemplatetopro) {
        return findByMinpasswordcharsDoapplyplusertemplatetopro(minpasswordchars, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsDoapplyplusertemplatetopro(int minpasswordchars, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsPublicsitetemplateid(int minpasswordchars, int publicsitetemplateid) {
        return findByMinpasswordcharsPublicsitetemplateid(minpasswordchars, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsPublicsitetemplateid(int minpasswordchars, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsEntlisttemplateid(int minpasswordchars, int entlisttemplateid) {
        return findByMinpasswordcharsEntlisttemplateid(minpasswordchars, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsEntlisttemplateid(int minpasswordchars, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsHptemplateid(int minpasswordchars, int hptemplateid) {
        return findByMinpasswordcharsHptemplateid(minpasswordchars, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsHptemplateid(int minpasswordchars, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsMarketingsitetemplateid(int minpasswordchars, int marketingsitetemplateid) {
        return findByMinpasswordcharsMarketingsitetemplateid(minpasswordchars, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsMarketingsitetemplateid(int minpasswordchars, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsMarketingsitehptemplateid(int minpasswordchars, int marketingsitehptemplateid) {
        return findByMinpasswordcharsMarketingsitehptemplateid(minpasswordchars, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsMarketingsitehptemplateid(int minpasswordchars, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsDefaulteventtypeid(int minpasswordchars, int defaulteventtypeid) {
        return findByMinpasswordcharsDefaulteventtypeid(minpasswordchars, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsDefaulteventtypeid(int minpasswordchars, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsEncryptedlicense(int minpasswordchars, String encryptedlicense) {
        return findByMinpasswordcharsEncryptedlicense(minpasswordchars, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsEncryptedlicense(int minpasswordchars, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsBaseaccountprice(int minpasswordchars, double baseaccountprice) {
        return findByMinpasswordcharsBaseaccountprice(minpasswordchars, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsBaseaccountprice(int minpasswordchars, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsPriceper100mbstorage(int minpasswordchars, double priceper100mbstorage) {
        return findByMinpasswordcharsPriceper100mbstorage(minpasswordchars, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsPriceper100mbstorage(int minpasswordchars, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsPricepergbbandwidth(int minpasswordchars, double pricepergbbandwidth) {
        return findByMinpasswordcharsPricepergbbandwidth(minpasswordchars, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsPricepergbbandwidth(int minpasswordchars, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsIstrackbackenabled(int minpasswordchars, boolean istrackbackenabled) {
        return findByMinpasswordcharsIstrackbackenabled(minpasswordchars, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsIstrackbackenabled(int minpasswordchars, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsPlusertemplateid(int minpasswordchars, int plusertemplateid) {
        return findByMinpasswordcharsPlusertemplateid(minpasswordchars, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsPlusertemplateid(int minpasswordchars, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsBannerone(int minpasswordchars, String bannerone) {
        return findByMinpasswordcharsBannerone(minpasswordchars, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsBannerone(int minpasswordchars, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsBannertwo(int minpasswordchars, String bannertwo) {
        return findByMinpasswordcharsBannertwo(minpasswordchars, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsBannertwo(int minpasswordchars, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsBannerthree(int minpasswordchars, String bannerthree) {
        return findByMinpasswordcharsBannerthree(minpasswordchars, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsBannerthree(int minpasswordchars, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsShowbannertagsonpro(int minpasswordchars, boolean showbannertagsonpro) {
        return findByMinpasswordcharsShowbannertagsonpro(minpasswordchars, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsShowbannertagsonpro(int minpasswordchars, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsIsemailactivationofaccountsrequired(int minpasswordchars, boolean isemailactivationofaccountsrequired) {
        return findByMinpasswordcharsIsemailactivationofaccountsrequired(minpasswordchars, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsIsemailactivationofaccountsrequired(int minpasswordchars, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsEmailtextactivationmessage(int minpasswordchars, String emailtextactivationmessage) {
        return findByMinpasswordcharsEmailtextactivationmessage(minpasswordchars, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsEmailtextactivationmessage(int minpasswordchars, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsEmailsubjectactivationmessage(int minpasswordchars, String emailsubjectactivationmessage) {
        return findByMinpasswordcharsEmailsubjectactivationmessage(minpasswordchars, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsEmailsubjectactivationmessage(int minpasswordchars, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsEmailtextwelcomemessage(int minpasswordchars, String emailtextwelcomemessage) {
        return findByMinpasswordcharsEmailtextwelcomemessage(minpasswordchars, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsEmailtextwelcomemessage(int minpasswordchars, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsEmailsubjectwelcomemessage(int minpasswordchars, String emailsubjectwelcomemessage) {
        return findByMinpasswordcharsEmailsubjectwelcomemessage(minpasswordchars, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsEmailsubjectwelcomemessage(int minpasswordchars, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsAccountupgradeurl(int minpasswordchars, String accountupgradeurl) {
        return findByMinpasswordcharsAccountupgradeurl(minpasswordchars, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordcharsAccountupgradeurl(int minpasswordchars, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordchars='"+minpasswordchars+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsMinpasswordlowercasechars(int minpassworduppercasechars, int minpasswordlowercasechars) {
        return findByMinpassworduppercasecharsMinpasswordlowercasechars(minpassworduppercasechars, minpasswordlowercasechars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsMinpasswordlowercasechars(int minpassworduppercasechars, int minpasswordlowercasechars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', minpasswordlowercasechars='"+minpasswordlowercasechars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsMinpasswordspecialchars(int minpassworduppercasechars, int minpasswordspecialchars) {
        return findByMinpassworduppercasecharsMinpasswordspecialchars(minpassworduppercasechars, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsMinpasswordspecialchars(int minpassworduppercasechars, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsMinpasswordnumericchars(int minpassworduppercasechars, int minpasswordnumericchars) {
        return findByMinpassworduppercasecharsMinpasswordnumericchars(minpassworduppercasechars, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsMinpasswordnumericchars(int minpassworduppercasechars, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsIspasswordsentviaemail(int minpassworduppercasechars, boolean ispasswordsentviaemail) {
        return findByMinpassworduppercasecharsIspasswordsentviaemail(minpassworduppercasechars, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsIspasswordsentviaemail(int minpassworduppercasechars, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsTermsofuselinktext(int minpassworduppercasechars, String termsofuselinktext) {
        return findByMinpassworduppercasecharsTermsofuselinktext(minpassworduppercasechars, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsTermsofuselinktext(int minpassworduppercasechars, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsFeedbacklinktext(int minpassworduppercasechars, String feedbacklinktext) {
        return findByMinpassworduppercasecharsFeedbacklinktext(minpassworduppercasechars, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsFeedbacklinktext(int minpassworduppercasechars, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsDoapplyplusertemplatetopro(int minpassworduppercasechars, boolean doapplyplusertemplatetopro) {
        return findByMinpassworduppercasecharsDoapplyplusertemplatetopro(minpassworduppercasechars, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsDoapplyplusertemplatetopro(int minpassworduppercasechars, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsPublicsitetemplateid(int minpassworduppercasechars, int publicsitetemplateid) {
        return findByMinpassworduppercasecharsPublicsitetemplateid(minpassworduppercasechars, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsPublicsitetemplateid(int minpassworduppercasechars, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsEntlisttemplateid(int minpassworduppercasechars, int entlisttemplateid) {
        return findByMinpassworduppercasecharsEntlisttemplateid(minpassworduppercasechars, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsEntlisttemplateid(int minpassworduppercasechars, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsHptemplateid(int minpassworduppercasechars, int hptemplateid) {
        return findByMinpassworduppercasecharsHptemplateid(minpassworduppercasechars, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsHptemplateid(int minpassworduppercasechars, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsMarketingsitetemplateid(int minpassworduppercasechars, int marketingsitetemplateid) {
        return findByMinpassworduppercasecharsMarketingsitetemplateid(minpassworduppercasechars, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsMarketingsitetemplateid(int minpassworduppercasechars, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsMarketingsitehptemplateid(int minpassworduppercasechars, int marketingsitehptemplateid) {
        return findByMinpassworduppercasecharsMarketingsitehptemplateid(minpassworduppercasechars, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsMarketingsitehptemplateid(int minpassworduppercasechars, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsDefaulteventtypeid(int minpassworduppercasechars, int defaulteventtypeid) {
        return findByMinpassworduppercasecharsDefaulteventtypeid(minpassworduppercasechars, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsDefaulteventtypeid(int minpassworduppercasechars, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsEncryptedlicense(int minpassworduppercasechars, String encryptedlicense) {
        return findByMinpassworduppercasecharsEncryptedlicense(minpassworduppercasechars, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsEncryptedlicense(int minpassworduppercasechars, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsBaseaccountprice(int minpassworduppercasechars, double baseaccountprice) {
        return findByMinpassworduppercasecharsBaseaccountprice(minpassworduppercasechars, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsBaseaccountprice(int minpassworduppercasechars, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsPriceper100mbstorage(int minpassworduppercasechars, double priceper100mbstorage) {
        return findByMinpassworduppercasecharsPriceper100mbstorage(minpassworduppercasechars, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsPriceper100mbstorage(int minpassworduppercasechars, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsPricepergbbandwidth(int minpassworduppercasechars, double pricepergbbandwidth) {
        return findByMinpassworduppercasecharsPricepergbbandwidth(minpassworduppercasechars, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsPricepergbbandwidth(int minpassworduppercasechars, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsIstrackbackenabled(int minpassworduppercasechars, boolean istrackbackenabled) {
        return findByMinpassworduppercasecharsIstrackbackenabled(minpassworduppercasechars, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsIstrackbackenabled(int minpassworduppercasechars, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsPlusertemplateid(int minpassworduppercasechars, int plusertemplateid) {
        return findByMinpassworduppercasecharsPlusertemplateid(minpassworduppercasechars, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsPlusertemplateid(int minpassworduppercasechars, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsBannerone(int minpassworduppercasechars, String bannerone) {
        return findByMinpassworduppercasecharsBannerone(minpassworduppercasechars, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsBannerone(int minpassworduppercasechars, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsBannertwo(int minpassworduppercasechars, String bannertwo) {
        return findByMinpassworduppercasecharsBannertwo(minpassworduppercasechars, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsBannertwo(int minpassworduppercasechars, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsBannerthree(int minpassworduppercasechars, String bannerthree) {
        return findByMinpassworduppercasecharsBannerthree(minpassworduppercasechars, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsBannerthree(int minpassworduppercasechars, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsShowbannertagsonpro(int minpassworduppercasechars, boolean showbannertagsonpro) {
        return findByMinpassworduppercasecharsShowbannertagsonpro(minpassworduppercasechars, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsShowbannertagsonpro(int minpassworduppercasechars, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsIsemailactivationofaccountsrequired(int minpassworduppercasechars, boolean isemailactivationofaccountsrequired) {
        return findByMinpassworduppercasecharsIsemailactivationofaccountsrequired(minpassworduppercasechars, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsIsemailactivationofaccountsrequired(int minpassworduppercasechars, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsEmailtextactivationmessage(int minpassworduppercasechars, String emailtextactivationmessage) {
        return findByMinpassworduppercasecharsEmailtextactivationmessage(minpassworduppercasechars, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsEmailtextactivationmessage(int minpassworduppercasechars, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsEmailsubjectactivationmessage(int minpassworduppercasechars, String emailsubjectactivationmessage) {
        return findByMinpassworduppercasecharsEmailsubjectactivationmessage(minpassworduppercasechars, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsEmailsubjectactivationmessage(int minpassworduppercasechars, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsEmailtextwelcomemessage(int minpassworduppercasechars, String emailtextwelcomemessage) {
        return findByMinpassworduppercasecharsEmailtextwelcomemessage(minpassworduppercasechars, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsEmailtextwelcomemessage(int minpassworduppercasechars, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsEmailsubjectwelcomemessage(int minpassworduppercasechars, String emailsubjectwelcomemessage) {
        return findByMinpassworduppercasecharsEmailsubjectwelcomemessage(minpassworduppercasechars, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsEmailsubjectwelcomemessage(int minpassworduppercasechars, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsAccountupgradeurl(int minpassworduppercasechars, String accountupgradeurl) {
        return findByMinpassworduppercasecharsAccountupgradeurl(minpassworduppercasechars, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpassworduppercasecharsAccountupgradeurl(int minpassworduppercasechars, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpassworduppercasechars='"+minpassworduppercasechars+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsMinpasswordspecialchars(int minpasswordlowercasechars, int minpasswordspecialchars) {
        return findByMinpasswordlowercasecharsMinpasswordspecialchars(minpasswordlowercasechars, minpasswordspecialchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsMinpasswordspecialchars(int minpasswordlowercasechars, int minpasswordspecialchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', minpasswordspecialchars='"+minpasswordspecialchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsMinpasswordnumericchars(int minpasswordlowercasechars, int minpasswordnumericchars) {
        return findByMinpasswordlowercasecharsMinpasswordnumericchars(minpasswordlowercasechars, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsMinpasswordnumericchars(int minpasswordlowercasechars, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsIspasswordsentviaemail(int minpasswordlowercasechars, boolean ispasswordsentviaemail) {
        return findByMinpasswordlowercasecharsIspasswordsentviaemail(minpasswordlowercasechars, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsIspasswordsentviaemail(int minpasswordlowercasechars, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsTermsofuselinktext(int minpasswordlowercasechars, String termsofuselinktext) {
        return findByMinpasswordlowercasecharsTermsofuselinktext(minpasswordlowercasechars, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsTermsofuselinktext(int minpasswordlowercasechars, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsFeedbacklinktext(int minpasswordlowercasechars, String feedbacklinktext) {
        return findByMinpasswordlowercasecharsFeedbacklinktext(minpasswordlowercasechars, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsFeedbacklinktext(int minpasswordlowercasechars, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsDoapplyplusertemplatetopro(int minpasswordlowercasechars, boolean doapplyplusertemplatetopro) {
        return findByMinpasswordlowercasecharsDoapplyplusertemplatetopro(minpasswordlowercasechars, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsDoapplyplusertemplatetopro(int minpasswordlowercasechars, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsPublicsitetemplateid(int minpasswordlowercasechars, int publicsitetemplateid) {
        return findByMinpasswordlowercasecharsPublicsitetemplateid(minpasswordlowercasechars, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsPublicsitetemplateid(int minpasswordlowercasechars, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsEntlisttemplateid(int minpasswordlowercasechars, int entlisttemplateid) {
        return findByMinpasswordlowercasecharsEntlisttemplateid(minpasswordlowercasechars, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsEntlisttemplateid(int minpasswordlowercasechars, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsHptemplateid(int minpasswordlowercasechars, int hptemplateid) {
        return findByMinpasswordlowercasecharsHptemplateid(minpasswordlowercasechars, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsHptemplateid(int minpasswordlowercasechars, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsMarketingsitetemplateid(int minpasswordlowercasechars, int marketingsitetemplateid) {
        return findByMinpasswordlowercasecharsMarketingsitetemplateid(minpasswordlowercasechars, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsMarketingsitetemplateid(int minpasswordlowercasechars, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsMarketingsitehptemplateid(int minpasswordlowercasechars, int marketingsitehptemplateid) {
        return findByMinpasswordlowercasecharsMarketingsitehptemplateid(minpasswordlowercasechars, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsMarketingsitehptemplateid(int minpasswordlowercasechars, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsDefaulteventtypeid(int minpasswordlowercasechars, int defaulteventtypeid) {
        return findByMinpasswordlowercasecharsDefaulteventtypeid(minpasswordlowercasechars, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsDefaulteventtypeid(int minpasswordlowercasechars, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsEncryptedlicense(int minpasswordlowercasechars, String encryptedlicense) {
        return findByMinpasswordlowercasecharsEncryptedlicense(minpasswordlowercasechars, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsEncryptedlicense(int minpasswordlowercasechars, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsBaseaccountprice(int minpasswordlowercasechars, double baseaccountprice) {
        return findByMinpasswordlowercasecharsBaseaccountprice(minpasswordlowercasechars, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsBaseaccountprice(int minpasswordlowercasechars, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsPriceper100mbstorage(int minpasswordlowercasechars, double priceper100mbstorage) {
        return findByMinpasswordlowercasecharsPriceper100mbstorage(minpasswordlowercasechars, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsPriceper100mbstorage(int minpasswordlowercasechars, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsPricepergbbandwidth(int minpasswordlowercasechars, double pricepergbbandwidth) {
        return findByMinpasswordlowercasecharsPricepergbbandwidth(minpasswordlowercasechars, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsPricepergbbandwidth(int minpasswordlowercasechars, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsIstrackbackenabled(int minpasswordlowercasechars, boolean istrackbackenabled) {
        return findByMinpasswordlowercasecharsIstrackbackenabled(minpasswordlowercasechars, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsIstrackbackenabled(int minpasswordlowercasechars, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsPlusertemplateid(int minpasswordlowercasechars, int plusertemplateid) {
        return findByMinpasswordlowercasecharsPlusertemplateid(minpasswordlowercasechars, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsPlusertemplateid(int minpasswordlowercasechars, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsBannerone(int minpasswordlowercasechars, String bannerone) {
        return findByMinpasswordlowercasecharsBannerone(minpasswordlowercasechars, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsBannerone(int minpasswordlowercasechars, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsBannertwo(int minpasswordlowercasechars, String bannertwo) {
        return findByMinpasswordlowercasecharsBannertwo(minpasswordlowercasechars, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsBannertwo(int minpasswordlowercasechars, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsBannerthree(int minpasswordlowercasechars, String bannerthree) {
        return findByMinpasswordlowercasecharsBannerthree(minpasswordlowercasechars, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsBannerthree(int minpasswordlowercasechars, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsShowbannertagsonpro(int minpasswordlowercasechars, boolean showbannertagsonpro) {
        return findByMinpasswordlowercasecharsShowbannertagsonpro(minpasswordlowercasechars, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsShowbannertagsonpro(int minpasswordlowercasechars, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsIsemailactivationofaccountsrequired(int minpasswordlowercasechars, boolean isemailactivationofaccountsrequired) {
        return findByMinpasswordlowercasecharsIsemailactivationofaccountsrequired(minpasswordlowercasechars, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsIsemailactivationofaccountsrequired(int minpasswordlowercasechars, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsEmailtextactivationmessage(int minpasswordlowercasechars, String emailtextactivationmessage) {
        return findByMinpasswordlowercasecharsEmailtextactivationmessage(minpasswordlowercasechars, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsEmailtextactivationmessage(int minpasswordlowercasechars, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsEmailsubjectactivationmessage(int minpasswordlowercasechars, String emailsubjectactivationmessage) {
        return findByMinpasswordlowercasecharsEmailsubjectactivationmessage(minpasswordlowercasechars, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsEmailsubjectactivationmessage(int minpasswordlowercasechars, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsEmailtextwelcomemessage(int minpasswordlowercasechars, String emailtextwelcomemessage) {
        return findByMinpasswordlowercasecharsEmailtextwelcomemessage(minpasswordlowercasechars, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsEmailtextwelcomemessage(int minpasswordlowercasechars, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsEmailsubjectwelcomemessage(int minpasswordlowercasechars, String emailsubjectwelcomemessage) {
        return findByMinpasswordlowercasecharsEmailsubjectwelcomemessage(minpasswordlowercasechars, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsEmailsubjectwelcomemessage(int minpasswordlowercasechars, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsAccountupgradeurl(int minpasswordlowercasechars, String accountupgradeurl) {
        return findByMinpasswordlowercasecharsAccountupgradeurl(minpasswordlowercasechars, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordlowercasecharsAccountupgradeurl(int minpasswordlowercasechars, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordlowercasechars='"+minpasswordlowercasechars+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsMinpasswordnumericchars(int minpasswordspecialchars, int minpasswordnumericchars) {
        return findByMinpasswordspecialcharsMinpasswordnumericchars(minpasswordspecialchars, minpasswordnumericchars, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsMinpasswordnumericchars(int minpasswordspecialchars, int minpasswordnumericchars, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', minpasswordnumericchars='"+minpasswordnumericchars+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsIspasswordsentviaemail(int minpasswordspecialchars, boolean ispasswordsentviaemail) {
        return findByMinpasswordspecialcharsIspasswordsentviaemail(minpasswordspecialchars, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsIspasswordsentviaemail(int minpasswordspecialchars, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsTermsofuselinktext(int minpasswordspecialchars, String termsofuselinktext) {
        return findByMinpasswordspecialcharsTermsofuselinktext(minpasswordspecialchars, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsTermsofuselinktext(int minpasswordspecialchars, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsFeedbacklinktext(int minpasswordspecialchars, String feedbacklinktext) {
        return findByMinpasswordspecialcharsFeedbacklinktext(minpasswordspecialchars, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsFeedbacklinktext(int minpasswordspecialchars, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsDoapplyplusertemplatetopro(int minpasswordspecialchars, boolean doapplyplusertemplatetopro) {
        return findByMinpasswordspecialcharsDoapplyplusertemplatetopro(minpasswordspecialchars, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsDoapplyplusertemplatetopro(int minpasswordspecialchars, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsPublicsitetemplateid(int minpasswordspecialchars, int publicsitetemplateid) {
        return findByMinpasswordspecialcharsPublicsitetemplateid(minpasswordspecialchars, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsPublicsitetemplateid(int minpasswordspecialchars, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsEntlisttemplateid(int minpasswordspecialchars, int entlisttemplateid) {
        return findByMinpasswordspecialcharsEntlisttemplateid(minpasswordspecialchars, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsEntlisttemplateid(int minpasswordspecialchars, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsHptemplateid(int minpasswordspecialchars, int hptemplateid) {
        return findByMinpasswordspecialcharsHptemplateid(minpasswordspecialchars, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsHptemplateid(int minpasswordspecialchars, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsMarketingsitetemplateid(int minpasswordspecialchars, int marketingsitetemplateid) {
        return findByMinpasswordspecialcharsMarketingsitetemplateid(minpasswordspecialchars, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsMarketingsitetemplateid(int minpasswordspecialchars, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsMarketingsitehptemplateid(int minpasswordspecialchars, int marketingsitehptemplateid) {
        return findByMinpasswordspecialcharsMarketingsitehptemplateid(minpasswordspecialchars, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsMarketingsitehptemplateid(int minpasswordspecialchars, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsDefaulteventtypeid(int minpasswordspecialchars, int defaulteventtypeid) {
        return findByMinpasswordspecialcharsDefaulteventtypeid(minpasswordspecialchars, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsDefaulteventtypeid(int minpasswordspecialchars, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsEncryptedlicense(int minpasswordspecialchars, String encryptedlicense) {
        return findByMinpasswordspecialcharsEncryptedlicense(minpasswordspecialchars, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsEncryptedlicense(int minpasswordspecialchars, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsBaseaccountprice(int minpasswordspecialchars, double baseaccountprice) {
        return findByMinpasswordspecialcharsBaseaccountprice(minpasswordspecialchars, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsBaseaccountprice(int minpasswordspecialchars, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsPriceper100mbstorage(int minpasswordspecialchars, double priceper100mbstorage) {
        return findByMinpasswordspecialcharsPriceper100mbstorage(minpasswordspecialchars, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsPriceper100mbstorage(int minpasswordspecialchars, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsPricepergbbandwidth(int minpasswordspecialchars, double pricepergbbandwidth) {
        return findByMinpasswordspecialcharsPricepergbbandwidth(minpasswordspecialchars, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsPricepergbbandwidth(int minpasswordspecialchars, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsIstrackbackenabled(int minpasswordspecialchars, boolean istrackbackenabled) {
        return findByMinpasswordspecialcharsIstrackbackenabled(minpasswordspecialchars, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsIstrackbackenabled(int minpasswordspecialchars, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsPlusertemplateid(int minpasswordspecialchars, int plusertemplateid) {
        return findByMinpasswordspecialcharsPlusertemplateid(minpasswordspecialchars, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsPlusertemplateid(int minpasswordspecialchars, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsBannerone(int minpasswordspecialchars, String bannerone) {
        return findByMinpasswordspecialcharsBannerone(minpasswordspecialchars, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsBannerone(int minpasswordspecialchars, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsBannertwo(int minpasswordspecialchars, String bannertwo) {
        return findByMinpasswordspecialcharsBannertwo(minpasswordspecialchars, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsBannertwo(int minpasswordspecialchars, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsBannerthree(int minpasswordspecialchars, String bannerthree) {
        return findByMinpasswordspecialcharsBannerthree(minpasswordspecialchars, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsBannerthree(int minpasswordspecialchars, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsShowbannertagsonpro(int minpasswordspecialchars, boolean showbannertagsonpro) {
        return findByMinpasswordspecialcharsShowbannertagsonpro(minpasswordspecialchars, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsShowbannertagsonpro(int minpasswordspecialchars, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsIsemailactivationofaccountsrequired(int minpasswordspecialchars, boolean isemailactivationofaccountsrequired) {
        return findByMinpasswordspecialcharsIsemailactivationofaccountsrequired(minpasswordspecialchars, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsIsemailactivationofaccountsrequired(int minpasswordspecialchars, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsEmailtextactivationmessage(int minpasswordspecialchars, String emailtextactivationmessage) {
        return findByMinpasswordspecialcharsEmailtextactivationmessage(minpasswordspecialchars, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsEmailtextactivationmessage(int minpasswordspecialchars, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsEmailsubjectactivationmessage(int minpasswordspecialchars, String emailsubjectactivationmessage) {
        return findByMinpasswordspecialcharsEmailsubjectactivationmessage(minpasswordspecialchars, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsEmailsubjectactivationmessage(int minpasswordspecialchars, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsEmailtextwelcomemessage(int minpasswordspecialchars, String emailtextwelcomemessage) {
        return findByMinpasswordspecialcharsEmailtextwelcomemessage(minpasswordspecialchars, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsEmailtextwelcomemessage(int minpasswordspecialchars, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsEmailsubjectwelcomemessage(int minpasswordspecialchars, String emailsubjectwelcomemessage) {
        return findByMinpasswordspecialcharsEmailsubjectwelcomemessage(minpasswordspecialchars, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsEmailsubjectwelcomemessage(int minpasswordspecialchars, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsAccountupgradeurl(int minpasswordspecialchars, String accountupgradeurl) {
        return findByMinpasswordspecialcharsAccountupgradeurl(minpasswordspecialchars, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordspecialcharsAccountupgradeurl(int minpasswordspecialchars, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordspecialchars='"+minpasswordspecialchars+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsIspasswordsentviaemail(int minpasswordnumericchars, boolean ispasswordsentviaemail) {
        return findByMinpasswordnumericcharsIspasswordsentviaemail(minpasswordnumericchars, ispasswordsentviaemail, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsIspasswordsentviaemail(int minpasswordnumericchars, boolean ispasswordsentviaemail, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsTermsofuselinktext(int minpasswordnumericchars, String termsofuselinktext) {
        return findByMinpasswordnumericcharsTermsofuselinktext(minpasswordnumericchars, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsTermsofuselinktext(int minpasswordnumericchars, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsFeedbacklinktext(int minpasswordnumericchars, String feedbacklinktext) {
        return findByMinpasswordnumericcharsFeedbacklinktext(minpasswordnumericchars, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsFeedbacklinktext(int minpasswordnumericchars, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsDoapplyplusertemplatetopro(int minpasswordnumericchars, boolean doapplyplusertemplatetopro) {
        return findByMinpasswordnumericcharsDoapplyplusertemplatetopro(minpasswordnumericchars, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsDoapplyplusertemplatetopro(int minpasswordnumericchars, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsPublicsitetemplateid(int minpasswordnumericchars, int publicsitetemplateid) {
        return findByMinpasswordnumericcharsPublicsitetemplateid(minpasswordnumericchars, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsPublicsitetemplateid(int minpasswordnumericchars, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsEntlisttemplateid(int minpasswordnumericchars, int entlisttemplateid) {
        return findByMinpasswordnumericcharsEntlisttemplateid(minpasswordnumericchars, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsEntlisttemplateid(int minpasswordnumericchars, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsHptemplateid(int minpasswordnumericchars, int hptemplateid) {
        return findByMinpasswordnumericcharsHptemplateid(minpasswordnumericchars, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsHptemplateid(int minpasswordnumericchars, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsMarketingsitetemplateid(int minpasswordnumericchars, int marketingsitetemplateid) {
        return findByMinpasswordnumericcharsMarketingsitetemplateid(minpasswordnumericchars, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsMarketingsitetemplateid(int minpasswordnumericchars, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsMarketingsitehptemplateid(int minpasswordnumericchars, int marketingsitehptemplateid) {
        return findByMinpasswordnumericcharsMarketingsitehptemplateid(minpasswordnumericchars, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsMarketingsitehptemplateid(int minpasswordnumericchars, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsDefaulteventtypeid(int minpasswordnumericchars, int defaulteventtypeid) {
        return findByMinpasswordnumericcharsDefaulteventtypeid(minpasswordnumericchars, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsDefaulteventtypeid(int minpasswordnumericchars, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsEncryptedlicense(int minpasswordnumericchars, String encryptedlicense) {
        return findByMinpasswordnumericcharsEncryptedlicense(minpasswordnumericchars, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsEncryptedlicense(int minpasswordnumericchars, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsBaseaccountprice(int minpasswordnumericchars, double baseaccountprice) {
        return findByMinpasswordnumericcharsBaseaccountprice(minpasswordnumericchars, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsBaseaccountprice(int minpasswordnumericchars, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsPriceper100mbstorage(int minpasswordnumericchars, double priceper100mbstorage) {
        return findByMinpasswordnumericcharsPriceper100mbstorage(minpasswordnumericchars, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsPriceper100mbstorage(int minpasswordnumericchars, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsPricepergbbandwidth(int minpasswordnumericchars, double pricepergbbandwidth) {
        return findByMinpasswordnumericcharsPricepergbbandwidth(minpasswordnumericchars, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsPricepergbbandwidth(int minpasswordnumericchars, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsIstrackbackenabled(int minpasswordnumericchars, boolean istrackbackenabled) {
        return findByMinpasswordnumericcharsIstrackbackenabled(minpasswordnumericchars, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsIstrackbackenabled(int minpasswordnumericchars, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsPlusertemplateid(int minpasswordnumericchars, int plusertemplateid) {
        return findByMinpasswordnumericcharsPlusertemplateid(minpasswordnumericchars, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsPlusertemplateid(int minpasswordnumericchars, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsBannerone(int minpasswordnumericchars, String bannerone) {
        return findByMinpasswordnumericcharsBannerone(minpasswordnumericchars, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsBannerone(int minpasswordnumericchars, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsBannertwo(int minpasswordnumericchars, String bannertwo) {
        return findByMinpasswordnumericcharsBannertwo(minpasswordnumericchars, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsBannertwo(int minpasswordnumericchars, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsBannerthree(int minpasswordnumericchars, String bannerthree) {
        return findByMinpasswordnumericcharsBannerthree(minpasswordnumericchars, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsBannerthree(int minpasswordnumericchars, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsShowbannertagsonpro(int minpasswordnumericchars, boolean showbannertagsonpro) {
        return findByMinpasswordnumericcharsShowbannertagsonpro(minpasswordnumericchars, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsShowbannertagsonpro(int minpasswordnumericchars, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsIsemailactivationofaccountsrequired(int minpasswordnumericchars, boolean isemailactivationofaccountsrequired) {
        return findByMinpasswordnumericcharsIsemailactivationofaccountsrequired(minpasswordnumericchars, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsIsemailactivationofaccountsrequired(int minpasswordnumericchars, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsEmailtextactivationmessage(int minpasswordnumericchars, String emailtextactivationmessage) {
        return findByMinpasswordnumericcharsEmailtextactivationmessage(minpasswordnumericchars, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsEmailtextactivationmessage(int minpasswordnumericchars, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsEmailsubjectactivationmessage(int minpasswordnumericchars, String emailsubjectactivationmessage) {
        return findByMinpasswordnumericcharsEmailsubjectactivationmessage(minpasswordnumericchars, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsEmailsubjectactivationmessage(int minpasswordnumericchars, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsEmailtextwelcomemessage(int minpasswordnumericchars, String emailtextwelcomemessage) {
        return findByMinpasswordnumericcharsEmailtextwelcomemessage(minpasswordnumericchars, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsEmailtextwelcomemessage(int minpasswordnumericchars, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsEmailsubjectwelcomemessage(int minpasswordnumericchars, String emailsubjectwelcomemessage) {
        return findByMinpasswordnumericcharsEmailsubjectwelcomemessage(minpasswordnumericchars, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsEmailsubjectwelcomemessage(int minpasswordnumericchars, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsAccountupgradeurl(int minpasswordnumericchars, String accountupgradeurl) {
        return findByMinpasswordnumericcharsAccountupgradeurl(minpasswordnumericchars, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMinpasswordnumericcharsAccountupgradeurl(int minpasswordnumericchars, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE minpasswordnumericchars='"+minpasswordnumericchars+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailTermsofuselinktext(boolean ispasswordsentviaemail, String termsofuselinktext) {
        return findByIspasswordsentviaemailTermsofuselinktext(ispasswordsentviaemail, termsofuselinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailTermsofuselinktext(boolean ispasswordsentviaemail, String termsofuselinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailFeedbacklinktext(boolean ispasswordsentviaemail, String feedbacklinktext) {
        return findByIspasswordsentviaemailFeedbacklinktext(ispasswordsentviaemail, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailFeedbacklinktext(boolean ispasswordsentviaemail, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailDoapplyplusertemplatetopro(boolean ispasswordsentviaemail, boolean doapplyplusertemplatetopro) {
        return findByIspasswordsentviaemailDoapplyplusertemplatetopro(ispasswordsentviaemail, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailDoapplyplusertemplatetopro(boolean ispasswordsentviaemail, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailPublicsitetemplateid(boolean ispasswordsentviaemail, int publicsitetemplateid) {
        return findByIspasswordsentviaemailPublicsitetemplateid(ispasswordsentviaemail, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailPublicsitetemplateid(boolean ispasswordsentviaemail, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailEntlisttemplateid(boolean ispasswordsentviaemail, int entlisttemplateid) {
        return findByIspasswordsentviaemailEntlisttemplateid(ispasswordsentviaemail, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailEntlisttemplateid(boolean ispasswordsentviaemail, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailHptemplateid(boolean ispasswordsentviaemail, int hptemplateid) {
        return findByIspasswordsentviaemailHptemplateid(ispasswordsentviaemail, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailHptemplateid(boolean ispasswordsentviaemail, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailMarketingsitetemplateid(boolean ispasswordsentviaemail, int marketingsitetemplateid) {
        return findByIspasswordsentviaemailMarketingsitetemplateid(ispasswordsentviaemail, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailMarketingsitetemplateid(boolean ispasswordsentviaemail, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailMarketingsitehptemplateid(boolean ispasswordsentviaemail, int marketingsitehptemplateid) {
        return findByIspasswordsentviaemailMarketingsitehptemplateid(ispasswordsentviaemail, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailMarketingsitehptemplateid(boolean ispasswordsentviaemail, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailDefaulteventtypeid(boolean ispasswordsentviaemail, int defaulteventtypeid) {
        return findByIspasswordsentviaemailDefaulteventtypeid(ispasswordsentviaemail, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailDefaulteventtypeid(boolean ispasswordsentviaemail, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailEncryptedlicense(boolean ispasswordsentviaemail, String encryptedlicense) {
        return findByIspasswordsentviaemailEncryptedlicense(ispasswordsentviaemail, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailEncryptedlicense(boolean ispasswordsentviaemail, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailBaseaccountprice(boolean ispasswordsentviaemail, double baseaccountprice) {
        return findByIspasswordsentviaemailBaseaccountprice(ispasswordsentviaemail, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailBaseaccountprice(boolean ispasswordsentviaemail, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailPriceper100mbstorage(boolean ispasswordsentviaemail, double priceper100mbstorage) {
        return findByIspasswordsentviaemailPriceper100mbstorage(ispasswordsentviaemail, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailPriceper100mbstorage(boolean ispasswordsentviaemail, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailPricepergbbandwidth(boolean ispasswordsentviaemail, double pricepergbbandwidth) {
        return findByIspasswordsentviaemailPricepergbbandwidth(ispasswordsentviaemail, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailPricepergbbandwidth(boolean ispasswordsentviaemail, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailIstrackbackenabled(boolean ispasswordsentviaemail, boolean istrackbackenabled) {
        return findByIspasswordsentviaemailIstrackbackenabled(ispasswordsentviaemail, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailIstrackbackenabled(boolean ispasswordsentviaemail, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailPlusertemplateid(boolean ispasswordsentviaemail, int plusertemplateid) {
        return findByIspasswordsentviaemailPlusertemplateid(ispasswordsentviaemail, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailPlusertemplateid(boolean ispasswordsentviaemail, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailBannerone(boolean ispasswordsentviaemail, String bannerone) {
        return findByIspasswordsentviaemailBannerone(ispasswordsentviaemail, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailBannerone(boolean ispasswordsentviaemail, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailBannertwo(boolean ispasswordsentviaemail, String bannertwo) {
        return findByIspasswordsentviaemailBannertwo(ispasswordsentviaemail, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailBannertwo(boolean ispasswordsentviaemail, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailBannerthree(boolean ispasswordsentviaemail, String bannerthree) {
        return findByIspasswordsentviaemailBannerthree(ispasswordsentviaemail, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailBannerthree(boolean ispasswordsentviaemail, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailShowbannertagsonpro(boolean ispasswordsentviaemail, boolean showbannertagsonpro) {
        return findByIspasswordsentviaemailShowbannertagsonpro(ispasswordsentviaemail, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailShowbannertagsonpro(boolean ispasswordsentviaemail, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailIsemailactivationofaccountsrequired(boolean ispasswordsentviaemail, boolean isemailactivationofaccountsrequired) {
        return findByIspasswordsentviaemailIsemailactivationofaccountsrequired(ispasswordsentviaemail, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailIsemailactivationofaccountsrequired(boolean ispasswordsentviaemail, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailEmailtextactivationmessage(boolean ispasswordsentviaemail, String emailtextactivationmessage) {
        return findByIspasswordsentviaemailEmailtextactivationmessage(ispasswordsentviaemail, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailEmailtextactivationmessage(boolean ispasswordsentviaemail, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailEmailsubjectactivationmessage(boolean ispasswordsentviaemail, String emailsubjectactivationmessage) {
        return findByIspasswordsentviaemailEmailsubjectactivationmessage(ispasswordsentviaemail, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailEmailsubjectactivationmessage(boolean ispasswordsentviaemail, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailEmailtextwelcomemessage(boolean ispasswordsentviaemail, String emailtextwelcomemessage) {
        return findByIspasswordsentviaemailEmailtextwelcomemessage(ispasswordsentviaemail, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailEmailtextwelcomemessage(boolean ispasswordsentviaemail, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailEmailsubjectwelcomemessage(boolean ispasswordsentviaemail, String emailsubjectwelcomemessage) {
        return findByIspasswordsentviaemailEmailsubjectwelcomemessage(ispasswordsentviaemail, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailEmailsubjectwelcomemessage(boolean ispasswordsentviaemail, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailAccountupgradeurl(boolean ispasswordsentviaemail, String accountupgradeurl) {
        return findByIspasswordsentviaemailAccountupgradeurl(ispasswordsentviaemail, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIspasswordsentviaemailAccountupgradeurl(boolean ispasswordsentviaemail, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE ispasswordsentviaemail='"+reger.core.Util.booleanAsSQLText(ispasswordsentviaemail)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextFeedbacklinktext(String termsofuselinktext, String feedbacklinktext) {
        return findByTermsofuselinktextFeedbacklinktext(termsofuselinktext, feedbacklinktext, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextFeedbacklinktext(String termsofuselinktext, String feedbacklinktext, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextDoapplyplusertemplatetopro(String termsofuselinktext, boolean doapplyplusertemplatetopro) {
        return findByTermsofuselinktextDoapplyplusertemplatetopro(termsofuselinktext, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextDoapplyplusertemplatetopro(String termsofuselinktext, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextPublicsitetemplateid(String termsofuselinktext, int publicsitetemplateid) {
        return findByTermsofuselinktextPublicsitetemplateid(termsofuselinktext, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextPublicsitetemplateid(String termsofuselinktext, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextEntlisttemplateid(String termsofuselinktext, int entlisttemplateid) {
        return findByTermsofuselinktextEntlisttemplateid(termsofuselinktext, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextEntlisttemplateid(String termsofuselinktext, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextHptemplateid(String termsofuselinktext, int hptemplateid) {
        return findByTermsofuselinktextHptemplateid(termsofuselinktext, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextHptemplateid(String termsofuselinktext, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextMarketingsitetemplateid(String termsofuselinktext, int marketingsitetemplateid) {
        return findByTermsofuselinktextMarketingsitetemplateid(termsofuselinktext, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextMarketingsitetemplateid(String termsofuselinktext, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextMarketingsitehptemplateid(String termsofuselinktext, int marketingsitehptemplateid) {
        return findByTermsofuselinktextMarketingsitehptemplateid(termsofuselinktext, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextMarketingsitehptemplateid(String termsofuselinktext, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextDefaulteventtypeid(String termsofuselinktext, int defaulteventtypeid) {
        return findByTermsofuselinktextDefaulteventtypeid(termsofuselinktext, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextDefaulteventtypeid(String termsofuselinktext, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextEncryptedlicense(String termsofuselinktext, String encryptedlicense) {
        return findByTermsofuselinktextEncryptedlicense(termsofuselinktext, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextEncryptedlicense(String termsofuselinktext, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextBaseaccountprice(String termsofuselinktext, double baseaccountprice) {
        return findByTermsofuselinktextBaseaccountprice(termsofuselinktext, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextBaseaccountprice(String termsofuselinktext, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextPriceper100mbstorage(String termsofuselinktext, double priceper100mbstorage) {
        return findByTermsofuselinktextPriceper100mbstorage(termsofuselinktext, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextPriceper100mbstorage(String termsofuselinktext, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextPricepergbbandwidth(String termsofuselinktext, double pricepergbbandwidth) {
        return findByTermsofuselinktextPricepergbbandwidth(termsofuselinktext, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextPricepergbbandwidth(String termsofuselinktext, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextIstrackbackenabled(String termsofuselinktext, boolean istrackbackenabled) {
        return findByTermsofuselinktextIstrackbackenabled(termsofuselinktext, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextIstrackbackenabled(String termsofuselinktext, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextPlusertemplateid(String termsofuselinktext, int plusertemplateid) {
        return findByTermsofuselinktextPlusertemplateid(termsofuselinktext, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextPlusertemplateid(String termsofuselinktext, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextBannerone(String termsofuselinktext, String bannerone) {
        return findByTermsofuselinktextBannerone(termsofuselinktext, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextBannerone(String termsofuselinktext, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextBannertwo(String termsofuselinktext, String bannertwo) {
        return findByTermsofuselinktextBannertwo(termsofuselinktext, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextBannertwo(String termsofuselinktext, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextBannerthree(String termsofuselinktext, String bannerthree) {
        return findByTermsofuselinktextBannerthree(termsofuselinktext, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextBannerthree(String termsofuselinktext, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextShowbannertagsonpro(String termsofuselinktext, boolean showbannertagsonpro) {
        return findByTermsofuselinktextShowbannertagsonpro(termsofuselinktext, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextShowbannertagsonpro(String termsofuselinktext, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextIsemailactivationofaccountsrequired(String termsofuselinktext, boolean isemailactivationofaccountsrequired) {
        return findByTermsofuselinktextIsemailactivationofaccountsrequired(termsofuselinktext, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextIsemailactivationofaccountsrequired(String termsofuselinktext, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextEmailtextactivationmessage(String termsofuselinktext, String emailtextactivationmessage) {
        return findByTermsofuselinktextEmailtextactivationmessage(termsofuselinktext, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextEmailtextactivationmessage(String termsofuselinktext, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextEmailsubjectactivationmessage(String termsofuselinktext, String emailsubjectactivationmessage) {
        return findByTermsofuselinktextEmailsubjectactivationmessage(termsofuselinktext, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextEmailsubjectactivationmessage(String termsofuselinktext, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextEmailtextwelcomemessage(String termsofuselinktext, String emailtextwelcomemessage) {
        return findByTermsofuselinktextEmailtextwelcomemessage(termsofuselinktext, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextEmailtextwelcomemessage(String termsofuselinktext, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextEmailsubjectwelcomemessage(String termsofuselinktext, String emailsubjectwelcomemessage) {
        return findByTermsofuselinktextEmailsubjectwelcomemessage(termsofuselinktext, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextEmailsubjectwelcomemessage(String termsofuselinktext, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextAccountupgradeurl(String termsofuselinktext, String accountupgradeurl) {
        return findByTermsofuselinktextAccountupgradeurl(termsofuselinktext, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByTermsofuselinktextAccountupgradeurl(String termsofuselinktext, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE termsofuselinktext='"+reger.core.Util.cleanForSQL(termsofuselinktext)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextDoapplyplusertemplatetopro(String feedbacklinktext, boolean doapplyplusertemplatetopro) {
        return findByFeedbacklinktextDoapplyplusertemplatetopro(feedbacklinktext, doapplyplusertemplatetopro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextDoapplyplusertemplatetopro(String feedbacklinktext, boolean doapplyplusertemplatetopro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextPublicsitetemplateid(String feedbacklinktext, int publicsitetemplateid) {
        return findByFeedbacklinktextPublicsitetemplateid(feedbacklinktext, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextPublicsitetemplateid(String feedbacklinktext, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextEntlisttemplateid(String feedbacklinktext, int entlisttemplateid) {
        return findByFeedbacklinktextEntlisttemplateid(feedbacklinktext, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextEntlisttemplateid(String feedbacklinktext, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextHptemplateid(String feedbacklinktext, int hptemplateid) {
        return findByFeedbacklinktextHptemplateid(feedbacklinktext, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextHptemplateid(String feedbacklinktext, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextMarketingsitetemplateid(String feedbacklinktext, int marketingsitetemplateid) {
        return findByFeedbacklinktextMarketingsitetemplateid(feedbacklinktext, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextMarketingsitetemplateid(String feedbacklinktext, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextMarketingsitehptemplateid(String feedbacklinktext, int marketingsitehptemplateid) {
        return findByFeedbacklinktextMarketingsitehptemplateid(feedbacklinktext, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextMarketingsitehptemplateid(String feedbacklinktext, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextDefaulteventtypeid(String feedbacklinktext, int defaulteventtypeid) {
        return findByFeedbacklinktextDefaulteventtypeid(feedbacklinktext, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextDefaulteventtypeid(String feedbacklinktext, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextEncryptedlicense(String feedbacklinktext, String encryptedlicense) {
        return findByFeedbacklinktextEncryptedlicense(feedbacklinktext, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextEncryptedlicense(String feedbacklinktext, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextBaseaccountprice(String feedbacklinktext, double baseaccountprice) {
        return findByFeedbacklinktextBaseaccountprice(feedbacklinktext, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextBaseaccountprice(String feedbacklinktext, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextPriceper100mbstorage(String feedbacklinktext, double priceper100mbstorage) {
        return findByFeedbacklinktextPriceper100mbstorage(feedbacklinktext, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextPriceper100mbstorage(String feedbacklinktext, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextPricepergbbandwidth(String feedbacklinktext, double pricepergbbandwidth) {
        return findByFeedbacklinktextPricepergbbandwidth(feedbacklinktext, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextPricepergbbandwidth(String feedbacklinktext, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextIstrackbackenabled(String feedbacklinktext, boolean istrackbackenabled) {
        return findByFeedbacklinktextIstrackbackenabled(feedbacklinktext, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextIstrackbackenabled(String feedbacklinktext, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextPlusertemplateid(String feedbacklinktext, int plusertemplateid) {
        return findByFeedbacklinktextPlusertemplateid(feedbacklinktext, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextPlusertemplateid(String feedbacklinktext, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextBannerone(String feedbacklinktext, String bannerone) {
        return findByFeedbacklinktextBannerone(feedbacklinktext, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextBannerone(String feedbacklinktext, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextBannertwo(String feedbacklinktext, String bannertwo) {
        return findByFeedbacklinktextBannertwo(feedbacklinktext, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextBannertwo(String feedbacklinktext, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextBannerthree(String feedbacklinktext, String bannerthree) {
        return findByFeedbacklinktextBannerthree(feedbacklinktext, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextBannerthree(String feedbacklinktext, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextShowbannertagsonpro(String feedbacklinktext, boolean showbannertagsonpro) {
        return findByFeedbacklinktextShowbannertagsonpro(feedbacklinktext, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextShowbannertagsonpro(String feedbacklinktext, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextIsemailactivationofaccountsrequired(String feedbacklinktext, boolean isemailactivationofaccountsrequired) {
        return findByFeedbacklinktextIsemailactivationofaccountsrequired(feedbacklinktext, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextIsemailactivationofaccountsrequired(String feedbacklinktext, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextEmailtextactivationmessage(String feedbacklinktext, String emailtextactivationmessage) {
        return findByFeedbacklinktextEmailtextactivationmessage(feedbacklinktext, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextEmailtextactivationmessage(String feedbacklinktext, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextEmailsubjectactivationmessage(String feedbacklinktext, String emailsubjectactivationmessage) {
        return findByFeedbacklinktextEmailsubjectactivationmessage(feedbacklinktext, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextEmailsubjectactivationmessage(String feedbacklinktext, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextEmailtextwelcomemessage(String feedbacklinktext, String emailtextwelcomemessage) {
        return findByFeedbacklinktextEmailtextwelcomemessage(feedbacklinktext, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextEmailtextwelcomemessage(String feedbacklinktext, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextEmailsubjectwelcomemessage(String feedbacklinktext, String emailsubjectwelcomemessage) {
        return findByFeedbacklinktextEmailsubjectwelcomemessage(feedbacklinktext, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextEmailsubjectwelcomemessage(String feedbacklinktext, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextAccountupgradeurl(String feedbacklinktext, String accountupgradeurl) {
        return findByFeedbacklinktextAccountupgradeurl(feedbacklinktext, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByFeedbacklinktextAccountupgradeurl(String feedbacklinktext, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE feedbacklinktext='"+reger.core.Util.cleanForSQL(feedbacklinktext)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproPublicsitetemplateid(boolean doapplyplusertemplatetopro, int publicsitetemplateid) {
        return findByDoapplyplusertemplatetoproPublicsitetemplateid(doapplyplusertemplatetopro, publicsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproPublicsitetemplateid(boolean doapplyplusertemplatetopro, int publicsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', publicsitetemplateid='"+publicsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproEntlisttemplateid(boolean doapplyplusertemplatetopro, int entlisttemplateid) {
        return findByDoapplyplusertemplatetoproEntlisttemplateid(doapplyplusertemplatetopro, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproEntlisttemplateid(boolean doapplyplusertemplatetopro, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproHptemplateid(boolean doapplyplusertemplatetopro, int hptemplateid) {
        return findByDoapplyplusertemplatetoproHptemplateid(doapplyplusertemplatetopro, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproHptemplateid(boolean doapplyplusertemplatetopro, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproMarketingsitetemplateid(boolean doapplyplusertemplatetopro, int marketingsitetemplateid) {
        return findByDoapplyplusertemplatetoproMarketingsitetemplateid(doapplyplusertemplatetopro, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproMarketingsitetemplateid(boolean doapplyplusertemplatetopro, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproMarketingsitehptemplateid(boolean doapplyplusertemplatetopro, int marketingsitehptemplateid) {
        return findByDoapplyplusertemplatetoproMarketingsitehptemplateid(doapplyplusertemplatetopro, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproMarketingsitehptemplateid(boolean doapplyplusertemplatetopro, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproDefaulteventtypeid(boolean doapplyplusertemplatetopro, int defaulteventtypeid) {
        return findByDoapplyplusertemplatetoproDefaulteventtypeid(doapplyplusertemplatetopro, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproDefaulteventtypeid(boolean doapplyplusertemplatetopro, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproEncryptedlicense(boolean doapplyplusertemplatetopro, String encryptedlicense) {
        return findByDoapplyplusertemplatetoproEncryptedlicense(doapplyplusertemplatetopro, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproEncryptedlicense(boolean doapplyplusertemplatetopro, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproBaseaccountprice(boolean doapplyplusertemplatetopro, double baseaccountprice) {
        return findByDoapplyplusertemplatetoproBaseaccountprice(doapplyplusertemplatetopro, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproBaseaccountprice(boolean doapplyplusertemplatetopro, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproPriceper100mbstorage(boolean doapplyplusertemplatetopro, double priceper100mbstorage) {
        return findByDoapplyplusertemplatetoproPriceper100mbstorage(doapplyplusertemplatetopro, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproPriceper100mbstorage(boolean doapplyplusertemplatetopro, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproPricepergbbandwidth(boolean doapplyplusertemplatetopro, double pricepergbbandwidth) {
        return findByDoapplyplusertemplatetoproPricepergbbandwidth(doapplyplusertemplatetopro, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproPricepergbbandwidth(boolean doapplyplusertemplatetopro, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproIstrackbackenabled(boolean doapplyplusertemplatetopro, boolean istrackbackenabled) {
        return findByDoapplyplusertemplatetoproIstrackbackenabled(doapplyplusertemplatetopro, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproIstrackbackenabled(boolean doapplyplusertemplatetopro, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproPlusertemplateid(boolean doapplyplusertemplatetopro, int plusertemplateid) {
        return findByDoapplyplusertemplatetoproPlusertemplateid(doapplyplusertemplatetopro, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproPlusertemplateid(boolean doapplyplusertemplatetopro, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproBannerone(boolean doapplyplusertemplatetopro, String bannerone) {
        return findByDoapplyplusertemplatetoproBannerone(doapplyplusertemplatetopro, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproBannerone(boolean doapplyplusertemplatetopro, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproBannertwo(boolean doapplyplusertemplatetopro, String bannertwo) {
        return findByDoapplyplusertemplatetoproBannertwo(doapplyplusertemplatetopro, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproBannertwo(boolean doapplyplusertemplatetopro, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproBannerthree(boolean doapplyplusertemplatetopro, String bannerthree) {
        return findByDoapplyplusertemplatetoproBannerthree(doapplyplusertemplatetopro, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproBannerthree(boolean doapplyplusertemplatetopro, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproShowbannertagsonpro(boolean doapplyplusertemplatetopro, boolean showbannertagsonpro) {
        return findByDoapplyplusertemplatetoproShowbannertagsonpro(doapplyplusertemplatetopro, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproShowbannertagsonpro(boolean doapplyplusertemplatetopro, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproIsemailactivationofaccountsrequired(boolean doapplyplusertemplatetopro, boolean isemailactivationofaccountsrequired) {
        return findByDoapplyplusertemplatetoproIsemailactivationofaccountsrequired(doapplyplusertemplatetopro, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproIsemailactivationofaccountsrequired(boolean doapplyplusertemplatetopro, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproEmailtextactivationmessage(boolean doapplyplusertemplatetopro, String emailtextactivationmessage) {
        return findByDoapplyplusertemplatetoproEmailtextactivationmessage(doapplyplusertemplatetopro, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproEmailtextactivationmessage(boolean doapplyplusertemplatetopro, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproEmailsubjectactivationmessage(boolean doapplyplusertemplatetopro, String emailsubjectactivationmessage) {
        return findByDoapplyplusertemplatetoproEmailsubjectactivationmessage(doapplyplusertemplatetopro, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproEmailsubjectactivationmessage(boolean doapplyplusertemplatetopro, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproEmailtextwelcomemessage(boolean doapplyplusertemplatetopro, String emailtextwelcomemessage) {
        return findByDoapplyplusertemplatetoproEmailtextwelcomemessage(doapplyplusertemplatetopro, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproEmailtextwelcomemessage(boolean doapplyplusertemplatetopro, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproEmailsubjectwelcomemessage(boolean doapplyplusertemplatetopro, String emailsubjectwelcomemessage) {
        return findByDoapplyplusertemplatetoproEmailsubjectwelcomemessage(doapplyplusertemplatetopro, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproEmailsubjectwelcomemessage(boolean doapplyplusertemplatetopro, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproAccountupgradeurl(boolean doapplyplusertemplatetopro, String accountupgradeurl) {
        return findByDoapplyplusertemplatetoproAccountupgradeurl(doapplyplusertemplatetopro, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDoapplyplusertemplatetoproAccountupgradeurl(boolean doapplyplusertemplatetopro, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE doapplyplusertemplatetopro='"+reger.core.Util.booleanAsSQLText(doapplyplusertemplatetopro)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidEntlisttemplateid(int publicsitetemplateid, int entlisttemplateid) {
        return findByPublicsitetemplateidEntlisttemplateid(publicsitetemplateid, entlisttemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidEntlisttemplateid(int publicsitetemplateid, int entlisttemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', entlisttemplateid='"+entlisttemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidHptemplateid(int publicsitetemplateid, int hptemplateid) {
        return findByPublicsitetemplateidHptemplateid(publicsitetemplateid, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidHptemplateid(int publicsitetemplateid, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidMarketingsitetemplateid(int publicsitetemplateid, int marketingsitetemplateid) {
        return findByPublicsitetemplateidMarketingsitetemplateid(publicsitetemplateid, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidMarketingsitetemplateid(int publicsitetemplateid, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidMarketingsitehptemplateid(int publicsitetemplateid, int marketingsitehptemplateid) {
        return findByPublicsitetemplateidMarketingsitehptemplateid(publicsitetemplateid, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidMarketingsitehptemplateid(int publicsitetemplateid, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidDefaulteventtypeid(int publicsitetemplateid, int defaulteventtypeid) {
        return findByPublicsitetemplateidDefaulteventtypeid(publicsitetemplateid, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidDefaulteventtypeid(int publicsitetemplateid, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidEncryptedlicense(int publicsitetemplateid, String encryptedlicense) {
        return findByPublicsitetemplateidEncryptedlicense(publicsitetemplateid, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidEncryptedlicense(int publicsitetemplateid, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidBaseaccountprice(int publicsitetemplateid, double baseaccountprice) {
        return findByPublicsitetemplateidBaseaccountprice(publicsitetemplateid, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidBaseaccountprice(int publicsitetemplateid, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidPriceper100mbstorage(int publicsitetemplateid, double priceper100mbstorage) {
        return findByPublicsitetemplateidPriceper100mbstorage(publicsitetemplateid, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidPriceper100mbstorage(int publicsitetemplateid, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidPricepergbbandwidth(int publicsitetemplateid, double pricepergbbandwidth) {
        return findByPublicsitetemplateidPricepergbbandwidth(publicsitetemplateid, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidPricepergbbandwidth(int publicsitetemplateid, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidIstrackbackenabled(int publicsitetemplateid, boolean istrackbackenabled) {
        return findByPublicsitetemplateidIstrackbackenabled(publicsitetemplateid, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidIstrackbackenabled(int publicsitetemplateid, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidPlusertemplateid(int publicsitetemplateid, int plusertemplateid) {
        return findByPublicsitetemplateidPlusertemplateid(publicsitetemplateid, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidPlusertemplateid(int publicsitetemplateid, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidBannerone(int publicsitetemplateid, String bannerone) {
        return findByPublicsitetemplateidBannerone(publicsitetemplateid, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidBannerone(int publicsitetemplateid, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidBannertwo(int publicsitetemplateid, String bannertwo) {
        return findByPublicsitetemplateidBannertwo(publicsitetemplateid, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidBannertwo(int publicsitetemplateid, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidBannerthree(int publicsitetemplateid, String bannerthree) {
        return findByPublicsitetemplateidBannerthree(publicsitetemplateid, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidBannerthree(int publicsitetemplateid, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidShowbannertagsonpro(int publicsitetemplateid, boolean showbannertagsonpro) {
        return findByPublicsitetemplateidShowbannertagsonpro(publicsitetemplateid, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidShowbannertagsonpro(int publicsitetemplateid, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidIsemailactivationofaccountsrequired(int publicsitetemplateid, boolean isemailactivationofaccountsrequired) {
        return findByPublicsitetemplateidIsemailactivationofaccountsrequired(publicsitetemplateid, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidIsemailactivationofaccountsrequired(int publicsitetemplateid, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidEmailtextactivationmessage(int publicsitetemplateid, String emailtextactivationmessage) {
        return findByPublicsitetemplateidEmailtextactivationmessage(publicsitetemplateid, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidEmailtextactivationmessage(int publicsitetemplateid, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidEmailsubjectactivationmessage(int publicsitetemplateid, String emailsubjectactivationmessage) {
        return findByPublicsitetemplateidEmailsubjectactivationmessage(publicsitetemplateid, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidEmailsubjectactivationmessage(int publicsitetemplateid, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidEmailtextwelcomemessage(int publicsitetemplateid, String emailtextwelcomemessage) {
        return findByPublicsitetemplateidEmailtextwelcomemessage(publicsitetemplateid, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidEmailtextwelcomemessage(int publicsitetemplateid, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidEmailsubjectwelcomemessage(int publicsitetemplateid, String emailsubjectwelcomemessage) {
        return findByPublicsitetemplateidEmailsubjectwelcomemessage(publicsitetemplateid, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidEmailsubjectwelcomemessage(int publicsitetemplateid, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidAccountupgradeurl(int publicsitetemplateid, String accountupgradeurl) {
        return findByPublicsitetemplateidAccountupgradeurl(publicsitetemplateid, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPublicsitetemplateidAccountupgradeurl(int publicsitetemplateid, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE publicsitetemplateid='"+publicsitetemplateid+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidHptemplateid(int entlisttemplateid, int hptemplateid) {
        return findByEntlisttemplateidHptemplateid(entlisttemplateid, hptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidHptemplateid(int entlisttemplateid, int hptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', hptemplateid='"+hptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidMarketingsitetemplateid(int entlisttemplateid, int marketingsitetemplateid) {
        return findByEntlisttemplateidMarketingsitetemplateid(entlisttemplateid, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidMarketingsitetemplateid(int entlisttemplateid, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidMarketingsitehptemplateid(int entlisttemplateid, int marketingsitehptemplateid) {
        return findByEntlisttemplateidMarketingsitehptemplateid(entlisttemplateid, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidMarketingsitehptemplateid(int entlisttemplateid, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidDefaulteventtypeid(int entlisttemplateid, int defaulteventtypeid) {
        return findByEntlisttemplateidDefaulteventtypeid(entlisttemplateid, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidDefaulteventtypeid(int entlisttemplateid, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidEncryptedlicense(int entlisttemplateid, String encryptedlicense) {
        return findByEntlisttemplateidEncryptedlicense(entlisttemplateid, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidEncryptedlicense(int entlisttemplateid, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidBaseaccountprice(int entlisttemplateid, double baseaccountprice) {
        return findByEntlisttemplateidBaseaccountprice(entlisttemplateid, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidBaseaccountprice(int entlisttemplateid, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidPriceper100mbstorage(int entlisttemplateid, double priceper100mbstorage) {
        return findByEntlisttemplateidPriceper100mbstorage(entlisttemplateid, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidPriceper100mbstorage(int entlisttemplateid, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidPricepergbbandwidth(int entlisttemplateid, double pricepergbbandwidth) {
        return findByEntlisttemplateidPricepergbbandwidth(entlisttemplateid, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidPricepergbbandwidth(int entlisttemplateid, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidIstrackbackenabled(int entlisttemplateid, boolean istrackbackenabled) {
        return findByEntlisttemplateidIstrackbackenabled(entlisttemplateid, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidIstrackbackenabled(int entlisttemplateid, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidPlusertemplateid(int entlisttemplateid, int plusertemplateid) {
        return findByEntlisttemplateidPlusertemplateid(entlisttemplateid, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidPlusertemplateid(int entlisttemplateid, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidBannerone(int entlisttemplateid, String bannerone) {
        return findByEntlisttemplateidBannerone(entlisttemplateid, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidBannerone(int entlisttemplateid, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidBannertwo(int entlisttemplateid, String bannertwo) {
        return findByEntlisttemplateidBannertwo(entlisttemplateid, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidBannertwo(int entlisttemplateid, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidBannerthree(int entlisttemplateid, String bannerthree) {
        return findByEntlisttemplateidBannerthree(entlisttemplateid, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidBannerthree(int entlisttemplateid, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidShowbannertagsonpro(int entlisttemplateid, boolean showbannertagsonpro) {
        return findByEntlisttemplateidShowbannertagsonpro(entlisttemplateid, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidShowbannertagsonpro(int entlisttemplateid, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidIsemailactivationofaccountsrequired(int entlisttemplateid, boolean isemailactivationofaccountsrequired) {
        return findByEntlisttemplateidIsemailactivationofaccountsrequired(entlisttemplateid, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidIsemailactivationofaccountsrequired(int entlisttemplateid, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidEmailtextactivationmessage(int entlisttemplateid, String emailtextactivationmessage) {
        return findByEntlisttemplateidEmailtextactivationmessage(entlisttemplateid, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidEmailtextactivationmessage(int entlisttemplateid, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidEmailsubjectactivationmessage(int entlisttemplateid, String emailsubjectactivationmessage) {
        return findByEntlisttemplateidEmailsubjectactivationmessage(entlisttemplateid, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidEmailsubjectactivationmessage(int entlisttemplateid, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidEmailtextwelcomemessage(int entlisttemplateid, String emailtextwelcomemessage) {
        return findByEntlisttemplateidEmailtextwelcomemessage(entlisttemplateid, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidEmailtextwelcomemessage(int entlisttemplateid, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidEmailsubjectwelcomemessage(int entlisttemplateid, String emailsubjectwelcomemessage) {
        return findByEntlisttemplateidEmailsubjectwelcomemessage(entlisttemplateid, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidEmailsubjectwelcomemessage(int entlisttemplateid, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidAccountupgradeurl(int entlisttemplateid, String accountupgradeurl) {
        return findByEntlisttemplateidAccountupgradeurl(entlisttemplateid, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEntlisttemplateidAccountupgradeurl(int entlisttemplateid, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE entlisttemplateid='"+entlisttemplateid+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidMarketingsitetemplateid(int hptemplateid, int marketingsitetemplateid) {
        return findByHptemplateidMarketingsitetemplateid(hptemplateid, marketingsitetemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidMarketingsitetemplateid(int hptemplateid, int marketingsitetemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', marketingsitetemplateid='"+marketingsitetemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidMarketingsitehptemplateid(int hptemplateid, int marketingsitehptemplateid) {
        return findByHptemplateidMarketingsitehptemplateid(hptemplateid, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidMarketingsitehptemplateid(int hptemplateid, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidDefaulteventtypeid(int hptemplateid, int defaulteventtypeid) {
        return findByHptemplateidDefaulteventtypeid(hptemplateid, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidDefaulteventtypeid(int hptemplateid, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidEncryptedlicense(int hptemplateid, String encryptedlicense) {
        return findByHptemplateidEncryptedlicense(hptemplateid, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidEncryptedlicense(int hptemplateid, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidBaseaccountprice(int hptemplateid, double baseaccountprice) {
        return findByHptemplateidBaseaccountprice(hptemplateid, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidBaseaccountprice(int hptemplateid, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidPriceper100mbstorage(int hptemplateid, double priceper100mbstorage) {
        return findByHptemplateidPriceper100mbstorage(hptemplateid, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidPriceper100mbstorage(int hptemplateid, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidPricepergbbandwidth(int hptemplateid, double pricepergbbandwidth) {
        return findByHptemplateidPricepergbbandwidth(hptemplateid, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidPricepergbbandwidth(int hptemplateid, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidIstrackbackenabled(int hptemplateid, boolean istrackbackenabled) {
        return findByHptemplateidIstrackbackenabled(hptemplateid, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidIstrackbackenabled(int hptemplateid, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidPlusertemplateid(int hptemplateid, int plusertemplateid) {
        return findByHptemplateidPlusertemplateid(hptemplateid, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidPlusertemplateid(int hptemplateid, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidBannerone(int hptemplateid, String bannerone) {
        return findByHptemplateidBannerone(hptemplateid, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidBannerone(int hptemplateid, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidBannertwo(int hptemplateid, String bannertwo) {
        return findByHptemplateidBannertwo(hptemplateid, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidBannertwo(int hptemplateid, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidBannerthree(int hptemplateid, String bannerthree) {
        return findByHptemplateidBannerthree(hptemplateid, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidBannerthree(int hptemplateid, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidShowbannertagsonpro(int hptemplateid, boolean showbannertagsonpro) {
        return findByHptemplateidShowbannertagsonpro(hptemplateid, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidShowbannertagsonpro(int hptemplateid, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidIsemailactivationofaccountsrequired(int hptemplateid, boolean isemailactivationofaccountsrequired) {
        return findByHptemplateidIsemailactivationofaccountsrequired(hptemplateid, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidIsemailactivationofaccountsrequired(int hptemplateid, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidEmailtextactivationmessage(int hptemplateid, String emailtextactivationmessage) {
        return findByHptemplateidEmailtextactivationmessage(hptemplateid, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidEmailtextactivationmessage(int hptemplateid, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidEmailsubjectactivationmessage(int hptemplateid, String emailsubjectactivationmessage) {
        return findByHptemplateidEmailsubjectactivationmessage(hptemplateid, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidEmailsubjectactivationmessage(int hptemplateid, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidEmailtextwelcomemessage(int hptemplateid, String emailtextwelcomemessage) {
        return findByHptemplateidEmailtextwelcomemessage(hptemplateid, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidEmailtextwelcomemessage(int hptemplateid, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidEmailsubjectwelcomemessage(int hptemplateid, String emailsubjectwelcomemessage) {
        return findByHptemplateidEmailsubjectwelcomemessage(hptemplateid, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidEmailsubjectwelcomemessage(int hptemplateid, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByHptemplateidAccountupgradeurl(int hptemplateid, String accountupgradeurl) {
        return findByHptemplateidAccountupgradeurl(hptemplateid, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByHptemplateidAccountupgradeurl(int hptemplateid, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE hptemplateid='"+hptemplateid+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidMarketingsitehptemplateid(int marketingsitetemplateid, int marketingsitehptemplateid) {
        return findByMarketingsitetemplateidMarketingsitehptemplateid(marketingsitetemplateid, marketingsitehptemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidMarketingsitehptemplateid(int marketingsitetemplateid, int marketingsitehptemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', marketingsitehptemplateid='"+marketingsitehptemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidDefaulteventtypeid(int marketingsitetemplateid, int defaulteventtypeid) {
        return findByMarketingsitetemplateidDefaulteventtypeid(marketingsitetemplateid, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidDefaulteventtypeid(int marketingsitetemplateid, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidEncryptedlicense(int marketingsitetemplateid, String encryptedlicense) {
        return findByMarketingsitetemplateidEncryptedlicense(marketingsitetemplateid, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidEncryptedlicense(int marketingsitetemplateid, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidBaseaccountprice(int marketingsitetemplateid, double baseaccountprice) {
        return findByMarketingsitetemplateidBaseaccountprice(marketingsitetemplateid, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidBaseaccountprice(int marketingsitetemplateid, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidPriceper100mbstorage(int marketingsitetemplateid, double priceper100mbstorage) {
        return findByMarketingsitetemplateidPriceper100mbstorage(marketingsitetemplateid, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidPriceper100mbstorage(int marketingsitetemplateid, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidPricepergbbandwidth(int marketingsitetemplateid, double pricepergbbandwidth) {
        return findByMarketingsitetemplateidPricepergbbandwidth(marketingsitetemplateid, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidPricepergbbandwidth(int marketingsitetemplateid, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidIstrackbackenabled(int marketingsitetemplateid, boolean istrackbackenabled) {
        return findByMarketingsitetemplateidIstrackbackenabled(marketingsitetemplateid, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidIstrackbackenabled(int marketingsitetemplateid, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidPlusertemplateid(int marketingsitetemplateid, int plusertemplateid) {
        return findByMarketingsitetemplateidPlusertemplateid(marketingsitetemplateid, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidPlusertemplateid(int marketingsitetemplateid, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidBannerone(int marketingsitetemplateid, String bannerone) {
        return findByMarketingsitetemplateidBannerone(marketingsitetemplateid, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidBannerone(int marketingsitetemplateid, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidBannertwo(int marketingsitetemplateid, String bannertwo) {
        return findByMarketingsitetemplateidBannertwo(marketingsitetemplateid, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidBannertwo(int marketingsitetemplateid, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidBannerthree(int marketingsitetemplateid, String bannerthree) {
        return findByMarketingsitetemplateidBannerthree(marketingsitetemplateid, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidBannerthree(int marketingsitetemplateid, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidShowbannertagsonpro(int marketingsitetemplateid, boolean showbannertagsonpro) {
        return findByMarketingsitetemplateidShowbannertagsonpro(marketingsitetemplateid, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidShowbannertagsonpro(int marketingsitetemplateid, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidIsemailactivationofaccountsrequired(int marketingsitetemplateid, boolean isemailactivationofaccountsrequired) {
        return findByMarketingsitetemplateidIsemailactivationofaccountsrequired(marketingsitetemplateid, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidIsemailactivationofaccountsrequired(int marketingsitetemplateid, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidEmailtextactivationmessage(int marketingsitetemplateid, String emailtextactivationmessage) {
        return findByMarketingsitetemplateidEmailtextactivationmessage(marketingsitetemplateid, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidEmailtextactivationmessage(int marketingsitetemplateid, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidEmailsubjectactivationmessage(int marketingsitetemplateid, String emailsubjectactivationmessage) {
        return findByMarketingsitetemplateidEmailsubjectactivationmessage(marketingsitetemplateid, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidEmailsubjectactivationmessage(int marketingsitetemplateid, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidEmailtextwelcomemessage(int marketingsitetemplateid, String emailtextwelcomemessage) {
        return findByMarketingsitetemplateidEmailtextwelcomemessage(marketingsitetemplateid, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidEmailtextwelcomemessage(int marketingsitetemplateid, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidEmailsubjectwelcomemessage(int marketingsitetemplateid, String emailsubjectwelcomemessage) {
        return findByMarketingsitetemplateidEmailsubjectwelcomemessage(marketingsitetemplateid, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidEmailsubjectwelcomemessage(int marketingsitetemplateid, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidAccountupgradeurl(int marketingsitetemplateid, String accountupgradeurl) {
        return findByMarketingsitetemplateidAccountupgradeurl(marketingsitetemplateid, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitetemplateidAccountupgradeurl(int marketingsitetemplateid, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitetemplateid='"+marketingsitetemplateid+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidDefaulteventtypeid(int marketingsitehptemplateid, int defaulteventtypeid) {
        return findByMarketingsitehptemplateidDefaulteventtypeid(marketingsitehptemplateid, defaulteventtypeid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidDefaulteventtypeid(int marketingsitehptemplateid, int defaulteventtypeid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', defaulteventtypeid='"+defaulteventtypeid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidEncryptedlicense(int marketingsitehptemplateid, String encryptedlicense) {
        return findByMarketingsitehptemplateidEncryptedlicense(marketingsitehptemplateid, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidEncryptedlicense(int marketingsitehptemplateid, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidBaseaccountprice(int marketingsitehptemplateid, double baseaccountprice) {
        return findByMarketingsitehptemplateidBaseaccountprice(marketingsitehptemplateid, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidBaseaccountprice(int marketingsitehptemplateid, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidPriceper100mbstorage(int marketingsitehptemplateid, double priceper100mbstorage) {
        return findByMarketingsitehptemplateidPriceper100mbstorage(marketingsitehptemplateid, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidPriceper100mbstorage(int marketingsitehptemplateid, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidPricepergbbandwidth(int marketingsitehptemplateid, double pricepergbbandwidth) {
        return findByMarketingsitehptemplateidPricepergbbandwidth(marketingsitehptemplateid, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidPricepergbbandwidth(int marketingsitehptemplateid, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidIstrackbackenabled(int marketingsitehptemplateid, boolean istrackbackenabled) {
        return findByMarketingsitehptemplateidIstrackbackenabled(marketingsitehptemplateid, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidIstrackbackenabled(int marketingsitehptemplateid, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidPlusertemplateid(int marketingsitehptemplateid, int plusertemplateid) {
        return findByMarketingsitehptemplateidPlusertemplateid(marketingsitehptemplateid, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidPlusertemplateid(int marketingsitehptemplateid, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidBannerone(int marketingsitehptemplateid, String bannerone) {
        return findByMarketingsitehptemplateidBannerone(marketingsitehptemplateid, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidBannerone(int marketingsitehptemplateid, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidBannertwo(int marketingsitehptemplateid, String bannertwo) {
        return findByMarketingsitehptemplateidBannertwo(marketingsitehptemplateid, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidBannertwo(int marketingsitehptemplateid, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidBannerthree(int marketingsitehptemplateid, String bannerthree) {
        return findByMarketingsitehptemplateidBannerthree(marketingsitehptemplateid, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidBannerthree(int marketingsitehptemplateid, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidShowbannertagsonpro(int marketingsitehptemplateid, boolean showbannertagsonpro) {
        return findByMarketingsitehptemplateidShowbannertagsonpro(marketingsitehptemplateid, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidShowbannertagsonpro(int marketingsitehptemplateid, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidIsemailactivationofaccountsrequired(int marketingsitehptemplateid, boolean isemailactivationofaccountsrequired) {
        return findByMarketingsitehptemplateidIsemailactivationofaccountsrequired(marketingsitehptemplateid, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidIsemailactivationofaccountsrequired(int marketingsitehptemplateid, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidEmailtextactivationmessage(int marketingsitehptemplateid, String emailtextactivationmessage) {
        return findByMarketingsitehptemplateidEmailtextactivationmessage(marketingsitehptemplateid, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidEmailtextactivationmessage(int marketingsitehptemplateid, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidEmailsubjectactivationmessage(int marketingsitehptemplateid, String emailsubjectactivationmessage) {
        return findByMarketingsitehptemplateidEmailsubjectactivationmessage(marketingsitehptemplateid, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidEmailsubjectactivationmessage(int marketingsitehptemplateid, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidEmailtextwelcomemessage(int marketingsitehptemplateid, String emailtextwelcomemessage) {
        return findByMarketingsitehptemplateidEmailtextwelcomemessage(marketingsitehptemplateid, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidEmailtextwelcomemessage(int marketingsitehptemplateid, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidEmailsubjectwelcomemessage(int marketingsitehptemplateid, String emailsubjectwelcomemessage) {
        return findByMarketingsitehptemplateidEmailsubjectwelcomemessage(marketingsitehptemplateid, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidEmailsubjectwelcomemessage(int marketingsitehptemplateid, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidAccountupgradeurl(int marketingsitehptemplateid, String accountupgradeurl) {
        return findByMarketingsitehptemplateidAccountupgradeurl(marketingsitehptemplateid, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByMarketingsitehptemplateidAccountupgradeurl(int marketingsitehptemplateid, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE marketingsitehptemplateid='"+marketingsitehptemplateid+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidEncryptedlicense(int defaulteventtypeid, String encryptedlicense) {
        return findByDefaulteventtypeidEncryptedlicense(defaulteventtypeid, encryptedlicense, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidEncryptedlicense(int defaulteventtypeid, String encryptedlicense, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidBaseaccountprice(int defaulteventtypeid, double baseaccountprice) {
        return findByDefaulteventtypeidBaseaccountprice(defaulteventtypeid, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidBaseaccountprice(int defaulteventtypeid, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidPriceper100mbstorage(int defaulteventtypeid, double priceper100mbstorage) {
        return findByDefaulteventtypeidPriceper100mbstorage(defaulteventtypeid, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidPriceper100mbstorage(int defaulteventtypeid, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidPricepergbbandwidth(int defaulteventtypeid, double pricepergbbandwidth) {
        return findByDefaulteventtypeidPricepergbbandwidth(defaulteventtypeid, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidPricepergbbandwidth(int defaulteventtypeid, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidIstrackbackenabled(int defaulteventtypeid, boolean istrackbackenabled) {
        return findByDefaulteventtypeidIstrackbackenabled(defaulteventtypeid, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidIstrackbackenabled(int defaulteventtypeid, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidPlusertemplateid(int defaulteventtypeid, int plusertemplateid) {
        return findByDefaulteventtypeidPlusertemplateid(defaulteventtypeid, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidPlusertemplateid(int defaulteventtypeid, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidBannerone(int defaulteventtypeid, String bannerone) {
        return findByDefaulteventtypeidBannerone(defaulteventtypeid, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidBannerone(int defaulteventtypeid, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidBannertwo(int defaulteventtypeid, String bannertwo) {
        return findByDefaulteventtypeidBannertwo(defaulteventtypeid, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidBannertwo(int defaulteventtypeid, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidBannerthree(int defaulteventtypeid, String bannerthree) {
        return findByDefaulteventtypeidBannerthree(defaulteventtypeid, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidBannerthree(int defaulteventtypeid, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidShowbannertagsonpro(int defaulteventtypeid, boolean showbannertagsonpro) {
        return findByDefaulteventtypeidShowbannertagsonpro(defaulteventtypeid, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidShowbannertagsonpro(int defaulteventtypeid, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidIsemailactivationofaccountsrequired(int defaulteventtypeid, boolean isemailactivationofaccountsrequired) {
        return findByDefaulteventtypeidIsemailactivationofaccountsrequired(defaulteventtypeid, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidIsemailactivationofaccountsrequired(int defaulteventtypeid, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidEmailtextactivationmessage(int defaulteventtypeid, String emailtextactivationmessage) {
        return findByDefaulteventtypeidEmailtextactivationmessage(defaulteventtypeid, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidEmailtextactivationmessage(int defaulteventtypeid, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidEmailsubjectactivationmessage(int defaulteventtypeid, String emailsubjectactivationmessage) {
        return findByDefaulteventtypeidEmailsubjectactivationmessage(defaulteventtypeid, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidEmailsubjectactivationmessage(int defaulteventtypeid, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidEmailtextwelcomemessage(int defaulteventtypeid, String emailtextwelcomemessage) {
        return findByDefaulteventtypeidEmailtextwelcomemessage(defaulteventtypeid, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidEmailtextwelcomemessage(int defaulteventtypeid, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidEmailsubjectwelcomemessage(int defaulteventtypeid, String emailsubjectwelcomemessage) {
        return findByDefaulteventtypeidEmailsubjectwelcomemessage(defaulteventtypeid, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidEmailsubjectwelcomemessage(int defaulteventtypeid, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidAccountupgradeurl(int defaulteventtypeid, String accountupgradeurl) {
        return findByDefaulteventtypeidAccountupgradeurl(defaulteventtypeid, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByDefaulteventtypeidAccountupgradeurl(int defaulteventtypeid, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE defaulteventtypeid='"+defaulteventtypeid+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseBaseaccountprice(String encryptedlicense, double baseaccountprice) {
        return findByEncryptedlicenseBaseaccountprice(encryptedlicense, baseaccountprice, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseBaseaccountprice(String encryptedlicense, double baseaccountprice, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', baseaccountprice='"+String.valueOf(baseaccountprice)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicensePriceper100mbstorage(String encryptedlicense, double priceper100mbstorage) {
        return findByEncryptedlicensePriceper100mbstorage(encryptedlicense, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicensePriceper100mbstorage(String encryptedlicense, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicensePricepergbbandwidth(String encryptedlicense, double pricepergbbandwidth) {
        return findByEncryptedlicensePricepergbbandwidth(encryptedlicense, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicensePricepergbbandwidth(String encryptedlicense, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseIstrackbackenabled(String encryptedlicense, boolean istrackbackenabled) {
        return findByEncryptedlicenseIstrackbackenabled(encryptedlicense, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseIstrackbackenabled(String encryptedlicense, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicensePlusertemplateid(String encryptedlicense, int plusertemplateid) {
        return findByEncryptedlicensePlusertemplateid(encryptedlicense, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicensePlusertemplateid(String encryptedlicense, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseBannerone(String encryptedlicense, String bannerone) {
        return findByEncryptedlicenseBannerone(encryptedlicense, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseBannerone(String encryptedlicense, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseBannertwo(String encryptedlicense, String bannertwo) {
        return findByEncryptedlicenseBannertwo(encryptedlicense, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseBannertwo(String encryptedlicense, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseBannerthree(String encryptedlicense, String bannerthree) {
        return findByEncryptedlicenseBannerthree(encryptedlicense, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseBannerthree(String encryptedlicense, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseShowbannertagsonpro(String encryptedlicense, boolean showbannertagsonpro) {
        return findByEncryptedlicenseShowbannertagsonpro(encryptedlicense, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseShowbannertagsonpro(String encryptedlicense, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseIsemailactivationofaccountsrequired(String encryptedlicense, boolean isemailactivationofaccountsrequired) {
        return findByEncryptedlicenseIsemailactivationofaccountsrequired(encryptedlicense, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseIsemailactivationofaccountsrequired(String encryptedlicense, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseEmailtextactivationmessage(String encryptedlicense, String emailtextactivationmessage) {
        return findByEncryptedlicenseEmailtextactivationmessage(encryptedlicense, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseEmailtextactivationmessage(String encryptedlicense, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseEmailsubjectactivationmessage(String encryptedlicense, String emailsubjectactivationmessage) {
        return findByEncryptedlicenseEmailsubjectactivationmessage(encryptedlicense, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseEmailsubjectactivationmessage(String encryptedlicense, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseEmailtextwelcomemessage(String encryptedlicense, String emailtextwelcomemessage) {
        return findByEncryptedlicenseEmailtextwelcomemessage(encryptedlicense, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseEmailtextwelcomemessage(String encryptedlicense, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseEmailsubjectwelcomemessage(String encryptedlicense, String emailsubjectwelcomemessage) {
        return findByEncryptedlicenseEmailsubjectwelcomemessage(encryptedlicense, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseEmailsubjectwelcomemessage(String encryptedlicense, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseAccountupgradeurl(String encryptedlicense, String accountupgradeurl) {
        return findByEncryptedlicenseAccountupgradeurl(encryptedlicense, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEncryptedlicenseAccountupgradeurl(String encryptedlicense, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE encryptedlicense='"+reger.core.Util.cleanForSQL(encryptedlicense)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpricePriceper100mbstorage(double baseaccountprice, double priceper100mbstorage) {
        return findByBaseaccountpricePriceper100mbstorage(baseaccountprice, priceper100mbstorage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpricePriceper100mbstorage(double baseaccountprice, double priceper100mbstorage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpricePricepergbbandwidth(double baseaccountprice, double pricepergbbandwidth) {
        return findByBaseaccountpricePricepergbbandwidth(baseaccountprice, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpricePricepergbbandwidth(double baseaccountprice, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceIstrackbackenabled(double baseaccountprice, boolean istrackbackenabled) {
        return findByBaseaccountpriceIstrackbackenabled(baseaccountprice, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceIstrackbackenabled(double baseaccountprice, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpricePlusertemplateid(double baseaccountprice, int plusertemplateid) {
        return findByBaseaccountpricePlusertemplateid(baseaccountprice, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpricePlusertemplateid(double baseaccountprice, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceBannerone(double baseaccountprice, String bannerone) {
        return findByBaseaccountpriceBannerone(baseaccountprice, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceBannerone(double baseaccountprice, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceBannertwo(double baseaccountprice, String bannertwo) {
        return findByBaseaccountpriceBannertwo(baseaccountprice, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceBannertwo(double baseaccountprice, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceBannerthree(double baseaccountprice, String bannerthree) {
        return findByBaseaccountpriceBannerthree(baseaccountprice, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceBannerthree(double baseaccountprice, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceShowbannertagsonpro(double baseaccountprice, boolean showbannertagsonpro) {
        return findByBaseaccountpriceShowbannertagsonpro(baseaccountprice, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceShowbannertagsonpro(double baseaccountprice, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceIsemailactivationofaccountsrequired(double baseaccountprice, boolean isemailactivationofaccountsrequired) {
        return findByBaseaccountpriceIsemailactivationofaccountsrequired(baseaccountprice, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceIsemailactivationofaccountsrequired(double baseaccountprice, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceEmailtextactivationmessage(double baseaccountprice, String emailtextactivationmessage) {
        return findByBaseaccountpriceEmailtextactivationmessage(baseaccountprice, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceEmailtextactivationmessage(double baseaccountprice, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceEmailsubjectactivationmessage(double baseaccountprice, String emailsubjectactivationmessage) {
        return findByBaseaccountpriceEmailsubjectactivationmessage(baseaccountprice, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceEmailsubjectactivationmessage(double baseaccountprice, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceEmailtextwelcomemessage(double baseaccountprice, String emailtextwelcomemessage) {
        return findByBaseaccountpriceEmailtextwelcomemessage(baseaccountprice, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceEmailtextwelcomemessage(double baseaccountprice, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceEmailsubjectwelcomemessage(double baseaccountprice, String emailsubjectwelcomemessage) {
        return findByBaseaccountpriceEmailsubjectwelcomemessage(baseaccountprice, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceEmailsubjectwelcomemessage(double baseaccountprice, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceAccountupgradeurl(double baseaccountprice, String accountupgradeurl) {
        return findByBaseaccountpriceAccountupgradeurl(baseaccountprice, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBaseaccountpriceAccountupgradeurl(double baseaccountprice, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE baseaccountprice='"+String.valueOf(baseaccountprice)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstoragePricepergbbandwidth(double priceper100mbstorage, double pricepergbbandwidth) {
        return findByPriceper100mbstoragePricepergbbandwidth(priceper100mbstorage, pricepergbbandwidth, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstoragePricepergbbandwidth(double priceper100mbstorage, double pricepergbbandwidth, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"', pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageIstrackbackenabled(double priceper100mbstorage, boolean istrackbackenabled) {
        return findByPriceper100mbstorageIstrackbackenabled(priceper100mbstorage, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageIstrackbackenabled(double priceper100mbstorage, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstoragePlusertemplateid(double priceper100mbstorage, int plusertemplateid) {
        return findByPriceper100mbstoragePlusertemplateid(priceper100mbstorage, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstoragePlusertemplateid(double priceper100mbstorage, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageBannerone(double priceper100mbstorage, String bannerone) {
        return findByPriceper100mbstorageBannerone(priceper100mbstorage, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageBannerone(double priceper100mbstorage, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageBannertwo(double priceper100mbstorage, String bannertwo) {
        return findByPriceper100mbstorageBannertwo(priceper100mbstorage, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageBannertwo(double priceper100mbstorage, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageBannerthree(double priceper100mbstorage, String bannerthree) {
        return findByPriceper100mbstorageBannerthree(priceper100mbstorage, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageBannerthree(double priceper100mbstorage, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageShowbannertagsonpro(double priceper100mbstorage, boolean showbannertagsonpro) {
        return findByPriceper100mbstorageShowbannertagsonpro(priceper100mbstorage, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageShowbannertagsonpro(double priceper100mbstorage, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageIsemailactivationofaccountsrequired(double priceper100mbstorage, boolean isemailactivationofaccountsrequired) {
        return findByPriceper100mbstorageIsemailactivationofaccountsrequired(priceper100mbstorage, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageIsemailactivationofaccountsrequired(double priceper100mbstorage, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageEmailtextactivationmessage(double priceper100mbstorage, String emailtextactivationmessage) {
        return findByPriceper100mbstorageEmailtextactivationmessage(priceper100mbstorage, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageEmailtextactivationmessage(double priceper100mbstorage, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageEmailsubjectactivationmessage(double priceper100mbstorage, String emailsubjectactivationmessage) {
        return findByPriceper100mbstorageEmailsubjectactivationmessage(priceper100mbstorage, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageEmailsubjectactivationmessage(double priceper100mbstorage, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageEmailtextwelcomemessage(double priceper100mbstorage, String emailtextwelcomemessage) {
        return findByPriceper100mbstorageEmailtextwelcomemessage(priceper100mbstorage, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageEmailtextwelcomemessage(double priceper100mbstorage, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageEmailsubjectwelcomemessage(double priceper100mbstorage, String emailsubjectwelcomemessage) {
        return findByPriceper100mbstorageEmailsubjectwelcomemessage(priceper100mbstorage, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageEmailsubjectwelcomemessage(double priceper100mbstorage, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageAccountupgradeurl(double priceper100mbstorage, String accountupgradeurl) {
        return findByPriceper100mbstorageAccountupgradeurl(priceper100mbstorage, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPriceper100mbstorageAccountupgradeurl(double priceper100mbstorage, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE priceper100mbstorage='"+String.valueOf(priceper100mbstorage)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthIstrackbackenabled(double pricepergbbandwidth, boolean istrackbackenabled) {
        return findByPricepergbbandwidthIstrackbackenabled(pricepergbbandwidth, istrackbackenabled, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthIstrackbackenabled(double pricepergbbandwidth, boolean istrackbackenabled, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"', istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthPlusertemplateid(double pricepergbbandwidth, int plusertemplateid) {
        return findByPricepergbbandwidthPlusertemplateid(pricepergbbandwidth, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthPlusertemplateid(double pricepergbbandwidth, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthBannerone(double pricepergbbandwidth, String bannerone) {
        return findByPricepergbbandwidthBannerone(pricepergbbandwidth, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthBannerone(double pricepergbbandwidth, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthBannertwo(double pricepergbbandwidth, String bannertwo) {
        return findByPricepergbbandwidthBannertwo(pricepergbbandwidth, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthBannertwo(double pricepergbbandwidth, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthBannerthree(double pricepergbbandwidth, String bannerthree) {
        return findByPricepergbbandwidthBannerthree(pricepergbbandwidth, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthBannerthree(double pricepergbbandwidth, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthShowbannertagsonpro(double pricepergbbandwidth, boolean showbannertagsonpro) {
        return findByPricepergbbandwidthShowbannertagsonpro(pricepergbbandwidth, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthShowbannertagsonpro(double pricepergbbandwidth, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthIsemailactivationofaccountsrequired(double pricepergbbandwidth, boolean isemailactivationofaccountsrequired) {
        return findByPricepergbbandwidthIsemailactivationofaccountsrequired(pricepergbbandwidth, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthIsemailactivationofaccountsrequired(double pricepergbbandwidth, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthEmailtextactivationmessage(double pricepergbbandwidth, String emailtextactivationmessage) {
        return findByPricepergbbandwidthEmailtextactivationmessage(pricepergbbandwidth, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthEmailtextactivationmessage(double pricepergbbandwidth, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthEmailsubjectactivationmessage(double pricepergbbandwidth, String emailsubjectactivationmessage) {
        return findByPricepergbbandwidthEmailsubjectactivationmessage(pricepergbbandwidth, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthEmailsubjectactivationmessage(double pricepergbbandwidth, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthEmailtextwelcomemessage(double pricepergbbandwidth, String emailtextwelcomemessage) {
        return findByPricepergbbandwidthEmailtextwelcomemessage(pricepergbbandwidth, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthEmailtextwelcomemessage(double pricepergbbandwidth, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthEmailsubjectwelcomemessage(double pricepergbbandwidth, String emailsubjectwelcomemessage) {
        return findByPricepergbbandwidthEmailsubjectwelcomemessage(pricepergbbandwidth, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthEmailsubjectwelcomemessage(double pricepergbbandwidth, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthAccountupgradeurl(double pricepergbbandwidth, String accountupgradeurl) {
        return findByPricepergbbandwidthAccountupgradeurl(pricepergbbandwidth, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPricepergbbandwidthAccountupgradeurl(double pricepergbbandwidth, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE pricepergbbandwidth='"+String.valueOf(pricepergbbandwidth)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledPlusertemplateid(boolean istrackbackenabled, int plusertemplateid) {
        return findByIstrackbackenabledPlusertemplateid(istrackbackenabled, plusertemplateid, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledPlusertemplateid(boolean istrackbackenabled, int plusertemplateid, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"', plusertemplateid='"+plusertemplateid+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledBannerone(boolean istrackbackenabled, String bannerone) {
        return findByIstrackbackenabledBannerone(istrackbackenabled, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledBannerone(boolean istrackbackenabled, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledBannertwo(boolean istrackbackenabled, String bannertwo) {
        return findByIstrackbackenabledBannertwo(istrackbackenabled, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledBannertwo(boolean istrackbackenabled, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledBannerthree(boolean istrackbackenabled, String bannerthree) {
        return findByIstrackbackenabledBannerthree(istrackbackenabled, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledBannerthree(boolean istrackbackenabled, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledShowbannertagsonpro(boolean istrackbackenabled, boolean showbannertagsonpro) {
        return findByIstrackbackenabledShowbannertagsonpro(istrackbackenabled, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledShowbannertagsonpro(boolean istrackbackenabled, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledIsemailactivationofaccountsrequired(boolean istrackbackenabled, boolean isemailactivationofaccountsrequired) {
        return findByIstrackbackenabledIsemailactivationofaccountsrequired(istrackbackenabled, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledIsemailactivationofaccountsrequired(boolean istrackbackenabled, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledEmailtextactivationmessage(boolean istrackbackenabled, String emailtextactivationmessage) {
        return findByIstrackbackenabledEmailtextactivationmessage(istrackbackenabled, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledEmailtextactivationmessage(boolean istrackbackenabled, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledEmailsubjectactivationmessage(boolean istrackbackenabled, String emailsubjectactivationmessage) {
        return findByIstrackbackenabledEmailsubjectactivationmessage(istrackbackenabled, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledEmailsubjectactivationmessage(boolean istrackbackenabled, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledEmailtextwelcomemessage(boolean istrackbackenabled, String emailtextwelcomemessage) {
        return findByIstrackbackenabledEmailtextwelcomemessage(istrackbackenabled, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledEmailtextwelcomemessage(boolean istrackbackenabled, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledEmailsubjectwelcomemessage(boolean istrackbackenabled, String emailsubjectwelcomemessage) {
        return findByIstrackbackenabledEmailsubjectwelcomemessage(istrackbackenabled, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledEmailsubjectwelcomemessage(boolean istrackbackenabled, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledAccountupgradeurl(boolean istrackbackenabled, String accountupgradeurl) {
        return findByIstrackbackenabledAccountupgradeurl(istrackbackenabled, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIstrackbackenabledAccountupgradeurl(boolean istrackbackenabled, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE istrackbackenabled='"+reger.core.Util.booleanAsSQLText(istrackbackenabled)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlusertemplateidBannerone(int plusertemplateid, String bannerone) {
        return findByPlusertemplateidBannerone(plusertemplateid, bannerone, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlusertemplateidBannerone(int plusertemplateid, String bannerone, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plusertemplateid='"+plusertemplateid+"', bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlusertemplateidBannertwo(int plusertemplateid, String bannertwo) {
        return findByPlusertemplateidBannertwo(plusertemplateid, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlusertemplateidBannertwo(int plusertemplateid, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plusertemplateid='"+plusertemplateid+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlusertemplateidBannerthree(int plusertemplateid, String bannerthree) {
        return findByPlusertemplateidBannerthree(plusertemplateid, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlusertemplateidBannerthree(int plusertemplateid, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plusertemplateid='"+plusertemplateid+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlusertemplateidShowbannertagsonpro(int plusertemplateid, boolean showbannertagsonpro) {
        return findByPlusertemplateidShowbannertagsonpro(plusertemplateid, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlusertemplateidShowbannertagsonpro(int plusertemplateid, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plusertemplateid='"+plusertemplateid+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlusertemplateidIsemailactivationofaccountsrequired(int plusertemplateid, boolean isemailactivationofaccountsrequired) {
        return findByPlusertemplateidIsemailactivationofaccountsrequired(plusertemplateid, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlusertemplateidIsemailactivationofaccountsrequired(int plusertemplateid, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plusertemplateid='"+plusertemplateid+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlusertemplateidEmailtextactivationmessage(int plusertemplateid, String emailtextactivationmessage) {
        return findByPlusertemplateidEmailtextactivationmessage(plusertemplateid, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlusertemplateidEmailtextactivationmessage(int plusertemplateid, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plusertemplateid='"+plusertemplateid+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlusertemplateidEmailsubjectactivationmessage(int plusertemplateid, String emailsubjectactivationmessage) {
        return findByPlusertemplateidEmailsubjectactivationmessage(plusertemplateid, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlusertemplateidEmailsubjectactivationmessage(int plusertemplateid, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plusertemplateid='"+plusertemplateid+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlusertemplateidEmailtextwelcomemessage(int plusertemplateid, String emailtextwelcomemessage) {
        return findByPlusertemplateidEmailtextwelcomemessage(plusertemplateid, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlusertemplateidEmailtextwelcomemessage(int plusertemplateid, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plusertemplateid='"+plusertemplateid+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlusertemplateidEmailsubjectwelcomemessage(int plusertemplateid, String emailsubjectwelcomemessage) {
        return findByPlusertemplateidEmailsubjectwelcomemessage(plusertemplateid, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlusertemplateidEmailsubjectwelcomemessage(int plusertemplateid, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plusertemplateid='"+plusertemplateid+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByPlusertemplateidAccountupgradeurl(int plusertemplateid, String accountupgradeurl) {
        return findByPlusertemplateidAccountupgradeurl(plusertemplateid, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByPlusertemplateidAccountupgradeurl(int plusertemplateid, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE plusertemplateid='"+plusertemplateid+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBanneroneBannertwo(String bannerone, String bannertwo) {
        return findByBanneroneBannertwo(bannerone, bannertwo, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBanneroneBannertwo(String bannerone, String bannertwo, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"', bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBanneroneBannerthree(String bannerone, String bannerthree) {
        return findByBanneroneBannerthree(bannerone, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBanneroneBannerthree(String bannerone, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBanneroneShowbannertagsonpro(String bannerone, boolean showbannertagsonpro) {
        return findByBanneroneShowbannertagsonpro(bannerone, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBanneroneShowbannertagsonpro(String bannerone, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBanneroneIsemailactivationofaccountsrequired(String bannerone, boolean isemailactivationofaccountsrequired) {
        return findByBanneroneIsemailactivationofaccountsrequired(bannerone, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBanneroneIsemailactivationofaccountsrequired(String bannerone, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBanneroneEmailtextactivationmessage(String bannerone, String emailtextactivationmessage) {
        return findByBanneroneEmailtextactivationmessage(bannerone, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBanneroneEmailtextactivationmessage(String bannerone, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBanneroneEmailsubjectactivationmessage(String bannerone, String emailsubjectactivationmessage) {
        return findByBanneroneEmailsubjectactivationmessage(bannerone, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBanneroneEmailsubjectactivationmessage(String bannerone, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBanneroneEmailtextwelcomemessage(String bannerone, String emailtextwelcomemessage) {
        return findByBanneroneEmailtextwelcomemessage(bannerone, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBanneroneEmailtextwelcomemessage(String bannerone, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBanneroneEmailsubjectwelcomemessage(String bannerone, String emailsubjectwelcomemessage) {
        return findByBanneroneEmailsubjectwelcomemessage(bannerone, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBanneroneEmailsubjectwelcomemessage(String bannerone, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBanneroneAccountupgradeurl(String bannerone, String accountupgradeurl) {
        return findByBanneroneAccountupgradeurl(bannerone, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBanneroneAccountupgradeurl(String bannerone, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerone='"+reger.core.Util.cleanForSQL(bannerone)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannertwoBannerthree(String bannertwo, String bannerthree) {
        return findByBannertwoBannerthree(bannertwo, bannerthree, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannertwoBannerthree(String bannertwo, String bannerthree, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"', bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannertwoShowbannertagsonpro(String bannertwo, boolean showbannertagsonpro) {
        return findByBannertwoShowbannertagsonpro(bannertwo, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannertwoShowbannertagsonpro(String bannertwo, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannertwoIsemailactivationofaccountsrequired(String bannertwo, boolean isemailactivationofaccountsrequired) {
        return findByBannertwoIsemailactivationofaccountsrequired(bannertwo, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannertwoIsemailactivationofaccountsrequired(String bannertwo, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannertwoEmailtextactivationmessage(String bannertwo, String emailtextactivationmessage) {
        return findByBannertwoEmailtextactivationmessage(bannertwo, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannertwoEmailtextactivationmessage(String bannertwo, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannertwoEmailsubjectactivationmessage(String bannertwo, String emailsubjectactivationmessage) {
        return findByBannertwoEmailsubjectactivationmessage(bannertwo, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannertwoEmailsubjectactivationmessage(String bannertwo, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannertwoEmailtextwelcomemessage(String bannertwo, String emailtextwelcomemessage) {
        return findByBannertwoEmailtextwelcomemessage(bannertwo, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannertwoEmailtextwelcomemessage(String bannertwo, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannertwoEmailsubjectwelcomemessage(String bannertwo, String emailsubjectwelcomemessage) {
        return findByBannertwoEmailsubjectwelcomemessage(bannertwo, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannertwoEmailsubjectwelcomemessage(String bannertwo, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannertwoAccountupgradeurl(String bannertwo, String accountupgradeurl) {
        return findByBannertwoAccountupgradeurl(bannertwo, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannertwoAccountupgradeurl(String bannertwo, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannertwo='"+reger.core.Util.cleanForSQL(bannertwo)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannerthreeShowbannertagsonpro(String bannerthree, boolean showbannertagsonpro) {
        return findByBannerthreeShowbannertagsonpro(bannerthree, showbannertagsonpro, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannerthreeShowbannertagsonpro(String bannerthree, boolean showbannertagsonpro, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"', showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannerthreeIsemailactivationofaccountsrequired(String bannerthree, boolean isemailactivationofaccountsrequired) {
        return findByBannerthreeIsemailactivationofaccountsrequired(bannerthree, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannerthreeIsemailactivationofaccountsrequired(String bannerthree, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannerthreeEmailtextactivationmessage(String bannerthree, String emailtextactivationmessage) {
        return findByBannerthreeEmailtextactivationmessage(bannerthree, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannerthreeEmailtextactivationmessage(String bannerthree, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannerthreeEmailsubjectactivationmessage(String bannerthree, String emailsubjectactivationmessage) {
        return findByBannerthreeEmailsubjectactivationmessage(bannerthree, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannerthreeEmailsubjectactivationmessage(String bannerthree, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannerthreeEmailtextwelcomemessage(String bannerthree, String emailtextwelcomemessage) {
        return findByBannerthreeEmailtextwelcomemessage(bannerthree, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannerthreeEmailtextwelcomemessage(String bannerthree, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannerthreeEmailsubjectwelcomemessage(String bannerthree, String emailsubjectwelcomemessage) {
        return findByBannerthreeEmailsubjectwelcomemessage(bannerthree, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannerthreeEmailsubjectwelcomemessage(String bannerthree, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByBannerthreeAccountupgradeurl(String bannerthree, String accountupgradeurl) {
        return findByBannerthreeAccountupgradeurl(bannerthree, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByBannerthreeAccountupgradeurl(String bannerthree, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE bannerthree='"+reger.core.Util.cleanForSQL(bannerthree)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByShowbannertagsonproIsemailactivationofaccountsrequired(boolean showbannertagsonpro, boolean isemailactivationofaccountsrequired) {
        return findByShowbannertagsonproIsemailactivationofaccountsrequired(showbannertagsonpro, isemailactivationofaccountsrequired, 0, 50000);
    }

    public static ArrayList<PlDAO> findByShowbannertagsonproIsemailactivationofaccountsrequired(boolean showbannertagsonpro, boolean isemailactivationofaccountsrequired, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"', isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByShowbannertagsonproEmailtextactivationmessage(boolean showbannertagsonpro, String emailtextactivationmessage) {
        return findByShowbannertagsonproEmailtextactivationmessage(showbannertagsonpro, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByShowbannertagsonproEmailtextactivationmessage(boolean showbannertagsonpro, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByShowbannertagsonproEmailsubjectactivationmessage(boolean showbannertagsonpro, String emailsubjectactivationmessage) {
        return findByShowbannertagsonproEmailsubjectactivationmessage(showbannertagsonpro, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByShowbannertagsonproEmailsubjectactivationmessage(boolean showbannertagsonpro, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByShowbannertagsonproEmailtextwelcomemessage(boolean showbannertagsonpro, String emailtextwelcomemessage) {
        return findByShowbannertagsonproEmailtextwelcomemessage(showbannertagsonpro, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByShowbannertagsonproEmailtextwelcomemessage(boolean showbannertagsonpro, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByShowbannertagsonproEmailsubjectwelcomemessage(boolean showbannertagsonpro, String emailsubjectwelcomemessage) {
        return findByShowbannertagsonproEmailsubjectwelcomemessage(showbannertagsonpro, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByShowbannertagsonproEmailsubjectwelcomemessage(boolean showbannertagsonpro, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByShowbannertagsonproAccountupgradeurl(boolean showbannertagsonpro, String accountupgradeurl) {
        return findByShowbannertagsonproAccountupgradeurl(showbannertagsonpro, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByShowbannertagsonproAccountupgradeurl(boolean showbannertagsonpro, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE showbannertagsonpro='"+reger.core.Util.booleanAsSQLText(showbannertagsonpro)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsemailactivationofaccountsrequiredEmailtextactivationmessage(boolean isemailactivationofaccountsrequired, String emailtextactivationmessage) {
        return findByIsemailactivationofaccountsrequiredEmailtextactivationmessage(isemailactivationofaccountsrequired, emailtextactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsemailactivationofaccountsrequiredEmailtextactivationmessage(boolean isemailactivationofaccountsrequired, String emailtextactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"', emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsemailactivationofaccountsrequiredEmailsubjectactivationmessage(boolean isemailactivationofaccountsrequired, String emailsubjectactivationmessage) {
        return findByIsemailactivationofaccountsrequiredEmailsubjectactivationmessage(isemailactivationofaccountsrequired, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsemailactivationofaccountsrequiredEmailsubjectactivationmessage(boolean isemailactivationofaccountsrequired, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsemailactivationofaccountsrequiredEmailtextwelcomemessage(boolean isemailactivationofaccountsrequired, String emailtextwelcomemessage) {
        return findByIsemailactivationofaccountsrequiredEmailtextwelcomemessage(isemailactivationofaccountsrequired, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsemailactivationofaccountsrequiredEmailtextwelcomemessage(boolean isemailactivationofaccountsrequired, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsemailactivationofaccountsrequiredEmailsubjectwelcomemessage(boolean isemailactivationofaccountsrequired, String emailsubjectwelcomemessage) {
        return findByIsemailactivationofaccountsrequiredEmailsubjectwelcomemessage(isemailactivationofaccountsrequired, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsemailactivationofaccountsrequiredEmailsubjectwelcomemessage(boolean isemailactivationofaccountsrequired, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByIsemailactivationofaccountsrequiredAccountupgradeurl(boolean isemailactivationofaccountsrequired, String accountupgradeurl) {
        return findByIsemailactivationofaccountsrequiredAccountupgradeurl(isemailactivationofaccountsrequired, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByIsemailactivationofaccountsrequiredAccountupgradeurl(boolean isemailactivationofaccountsrequired, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE isemailactivationofaccountsrequired='"+reger.core.Util.booleanAsSQLText(isemailactivationofaccountsrequired)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtextactivationmessageEmailsubjectactivationmessage(String emailtextactivationmessage, String emailsubjectactivationmessage) {
        return findByEmailtextactivationmessageEmailsubjectactivationmessage(emailtextactivationmessage, emailsubjectactivationmessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtextactivationmessageEmailsubjectactivationmessage(String emailtextactivationmessage, String emailsubjectactivationmessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"', emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtextactivationmessageEmailtextwelcomemessage(String emailtextactivationmessage, String emailtextwelcomemessage) {
        return findByEmailtextactivationmessageEmailtextwelcomemessage(emailtextactivationmessage, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtextactivationmessageEmailtextwelcomemessage(String emailtextactivationmessage, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtextactivationmessageEmailsubjectwelcomemessage(String emailtextactivationmessage, String emailsubjectwelcomemessage) {
        return findByEmailtextactivationmessageEmailsubjectwelcomemessage(emailtextactivationmessage, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtextactivationmessageEmailsubjectwelcomemessage(String emailtextactivationmessage, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtextactivationmessageAccountupgradeurl(String emailtextactivationmessage, String accountupgradeurl) {
        return findByEmailtextactivationmessageAccountupgradeurl(emailtextactivationmessage, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtextactivationmessageAccountupgradeurl(String emailtextactivationmessage, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtextactivationmessage='"+reger.core.Util.cleanForSQL(emailtextactivationmessage)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailsubjectactivationmessageEmailtextwelcomemessage(String emailsubjectactivationmessage, String emailtextwelcomemessage) {
        return findByEmailsubjectactivationmessageEmailtextwelcomemessage(emailsubjectactivationmessage, emailtextwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailsubjectactivationmessageEmailtextwelcomemessage(String emailsubjectactivationmessage, String emailtextwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"', emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailsubjectactivationmessageEmailsubjectwelcomemessage(String emailsubjectactivationmessage, String emailsubjectwelcomemessage) {
        return findByEmailsubjectactivationmessageEmailsubjectwelcomemessage(emailsubjectactivationmessage, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailsubjectactivationmessageEmailsubjectwelcomemessage(String emailsubjectactivationmessage, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailsubjectactivationmessageAccountupgradeurl(String emailsubjectactivationmessage, String accountupgradeurl) {
        return findByEmailsubjectactivationmessageAccountupgradeurl(emailsubjectactivationmessage, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailsubjectactivationmessageAccountupgradeurl(String emailsubjectactivationmessage, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailsubjectactivationmessage='"+reger.core.Util.cleanForSQL(emailsubjectactivationmessage)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtextwelcomemessageEmailsubjectwelcomemessage(String emailtextwelcomemessage, String emailsubjectwelcomemessage) {
        return findByEmailtextwelcomemessageEmailsubjectwelcomemessage(emailtextwelcomemessage, emailsubjectwelcomemessage, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtextwelcomemessageEmailsubjectwelcomemessage(String emailtextwelcomemessage, String emailsubjectwelcomemessage, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"', emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailtextwelcomemessageAccountupgradeurl(String emailtextwelcomemessage, String accountupgradeurl) {
        return findByEmailtextwelcomemessageAccountupgradeurl(emailtextwelcomemessage, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailtextwelcomemessageAccountupgradeurl(String emailtextwelcomemessage, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailtextwelcomemessage='"+reger.core.Util.cleanForSQL(emailtextwelcomemessage)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }

    public static ArrayList<PlDAO> findByEmailsubjectwelcomemessageAccountupgradeurl(String emailsubjectwelcomemessage, String accountupgradeurl) {
        return findByEmailsubjectwelcomemessageAccountupgradeurl(emailsubjectwelcomemessage, accountupgradeurl, 0, 50000);
    }

    public static ArrayList<PlDAO> findByEmailsubjectwelcomemessageAccountupgradeurl(String emailsubjectwelcomemessage, String accountupgradeurl, int limitmin, int limitmax) {
        ArrayList<PlDAO> resultarraylist = new ArrayList<PlDAO>();
        //-----------------------------------
        //-----------------------------------
        String[][] rstData= Db.RunSQL("SELECT plid FROM pl WHERE emailsubjectwelcomemessage='"+reger.core.Util.cleanForSQL(emailsubjectwelcomemessage)+"', accountupgradeurl='"+reger.core.Util.cleanForSQL(accountupgradeurl)+"' LIMIT "+limitmin+", "+limitmax+" ");
        //-----------------------------------
        //-----------------------------------
        if (rstData!=null && rstData.length>0){
            for(int i=0; i<rstData.length; i++){
                 resultarraylist.add(new PlDAO(Integer.parseInt(rstData[i][0])));
            }
        }
        return resultarraylist;
    }


}